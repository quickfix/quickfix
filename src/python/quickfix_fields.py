import quickfix

class BeginSeqNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 7)
		else:
			quickfix.IntField.__init__(self, 7, data)

class BeginString(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 8)
		else:
			quickfix.StringField.__init__(self, 8, data)

class BodyLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 9)
		else:
			quickfix.IntField.__init__(self, 9, data)

class CheckSum(quickfix.CheckSumField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CheckSumField.__init__(self, 10)
		else:
			quickfix.CheckSumField.__init__(self, 10, data)

class EndSeqNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 16)
		else:
			quickfix.IntField.__init__(self, 16, data)

class MsgSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 34)
		else:
			quickfix.IntField.__init__(self, 34, data)

class MsgType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 35)
		else:
			quickfix.StringField.__init__(self, 35, data)

class NewSeqNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 36)
		else:
			quickfix.IntField.__init__(self, 36, data)

class PossDupFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 43)
		else:
			quickfix.BoolField.__init__(self, 43, data)

class RefSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 45)
		else:
			quickfix.IntField.__init__(self, 45, data)

class SenderCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 49)
		else:
			quickfix.StringField.__init__(self, 49, data)

class SenderSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 50)
		else:
			quickfix.StringField.__init__(self, 50, data)

class SendingTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 52)
		else:
			quickfix.UtcTimeStampField.__init__(self, 52, data)

class TargetCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 56)
		else:
			quickfix.StringField.__init__(self, 56, data)

class TargetSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 57)
		else:
			quickfix.StringField.__init__(self, 57, data)

class Text(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 58)
		else:
			quickfix.StringField.__init__(self, 58, data)

class Signature(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 89)
		else:
			quickfix.StringField.__init__(self, 89, data)

class SecureDataLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 90)
		else:
			quickfix.IntField.__init__(self, 90, data)

class SecureData(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 91)
		else:
			quickfix.StringField.__init__(self, 91, data)

class SignatureLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 93)
		else:
			quickfix.IntField.__init__(self, 93, data)

class RawDataLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 95)
		else:
			quickfix.IntField.__init__(self, 95, data)

class RawData(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 96)
		else:
			quickfix.StringField.__init__(self, 96, data)

class PossResend(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 97)
		else:
			quickfix.BoolField.__init__(self, 97, data)

class EncryptMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 98)
		else:
			quickfix.IntField.__init__(self, 98, data)

class HeartBtInt(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 108)
		else:
			quickfix.IntField.__init__(self, 108, data)

class TestReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 112)
		else:
			quickfix.StringField.__init__(self, 112, data)

class OnBehalfOfCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 115)
		else:
			quickfix.StringField.__init__(self, 115, data)

class OnBehalfOfSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 116)
		else:
			quickfix.StringField.__init__(self, 116, data)

class OrigSendingTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 122)
		else:
			quickfix.UtcTimeStampField.__init__(self, 122, data)

class GapFillFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 123)
		else:
			quickfix.BoolField.__init__(self, 123, data)

class DeliverToCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 128)
		else:
			quickfix.StringField.__init__(self, 128, data)

class DeliverToSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 129)
		else:
			quickfix.StringField.__init__(self, 129, data)

class ResetSeqNumFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 141)
		else:
			quickfix.BoolField.__init__(self, 141, data)

class SenderLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 142)
		else:
			quickfix.StringField.__init__(self, 142, data)

class TargetLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 143)
		else:
			quickfix.StringField.__init__(self, 143, data)

class OnBehalfOfLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 144)
		else:
			quickfix.StringField.__init__(self, 144, data)

class DeliverToLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 145)
		else:
			quickfix.StringField.__init__(self, 145, data)

class XmlDataLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 212)
		else:
			quickfix.IntField.__init__(self, 212, data)

class XmlData(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 213)
		else:
			quickfix.StringField.__init__(self, 213, data)

class MessageEncoding(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 347)
		else:
			quickfix.StringField.__init__(self, 347, data)

class EncodedTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 354)
		else:
			quickfix.IntField.__init__(self, 354, data)

class EncodedText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 355)
		else:
			quickfix.StringField.__init__(self, 355, data)

class LastMsgSeqNumProcessed(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 369)
		else:
			quickfix.IntField.__init__(self, 369, data)

class RefTagID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 371)
		else:
			quickfix.IntField.__init__(self, 371, data)

class RefMsgType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 372)
		else:
			quickfix.StringField.__init__(self, 372, data)

class SessionRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 373)
		else:
			quickfix.IntField.__init__(self, 373, data)

class MaxMessageSize(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 383)
		else:
			quickfix.IntField.__init__(self, 383, data)

class TestMessageIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 464)
		else:
			quickfix.BoolField.__init__(self, 464, data)

class Username(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 553)
		else:
			quickfix.StringField.__init__(self, 553, data)

class Password(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 554)
		else:
			quickfix.StringField.__init__(self, 554, data)

class NoHops(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 627)
		else:
			quickfix.IntField.__init__(self, 627, data)

class HopCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 628)
		else:
			quickfix.StringField.__init__(self, 628, data)

class HopSendingTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 629)
		else:
			quickfix.UtcTimeStampField.__init__(self, 629, data)

class HopRefID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 630)
		else:
			quickfix.IntField.__init__(self, 630, data)

class NextExpectedMsgSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 789)
		else:
			quickfix.IntField.__init__(self, 789, data)

class NewPassword(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 925)
		else:
			quickfix.StringField.__init__(self, 925, data)

class ApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1128)
		else:
			quickfix.StringField.__init__(self, 1128, data)

class CstmApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1129)
		else:
			quickfix.StringField.__init__(self, 1129, data)

class RefApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1130)
		else:
			quickfix.StringField.__init__(self, 1130, data)

class RefCstmApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1131)
		else:
			quickfix.StringField.__init__(self, 1131, data)

class DefaultApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1137)
		else:
			quickfix.StringField.__init__(self, 1137, data)

class ApplExtID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1156)
		else:
			quickfix.IntField.__init__(self, 1156, data)

class EncryptedPasswordMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1400)
		else:
			quickfix.IntField.__init__(self, 1400, data)

class EncryptedPasswordLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1401)
		else:
			quickfix.IntField.__init__(self, 1401, data)

class EncryptedPassword(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1402)
		else:
			quickfix.StringField.__init__(self, 1402, data)

class EncryptedNewPasswordLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1403)
		else:
			quickfix.IntField.__init__(self, 1403, data)

class EncryptedNewPassword(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1404)
		else:
			quickfix.StringField.__init__(self, 1404, data)

class RefApplExtID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1406)
		else:
			quickfix.IntField.__init__(self, 1406, data)

class DefaultApplExtID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1407)
		else:
			quickfix.IntField.__init__(self, 1407, data)

class DefaultCstmApplVerID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1408)
		else:
			quickfix.StringField.__init__(self, 1408, data)

class SessionStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1409)
		else:
			quickfix.IntField.__init__(self, 1409, data)

class Account(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1)
		else:
			quickfix.StringField.__init__(self, 1, data)

class AdvId(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2)
		else:
			quickfix.StringField.__init__(self, 2, data)

class AdvRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 3)
		else:
			quickfix.StringField.__init__(self, 3, data)

class AdvSide(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 4)
		else:
			quickfix.CharField.__init__(self, 4, data)

class AdvTransType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 5)
		else:
			quickfix.StringField.__init__(self, 5, data)

class AvgPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 6)
		else:
			quickfix.DoubleField.__init__(self, 6, data)

class ClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 11)
		else:
			quickfix.StringField.__init__(self, 11, data)

class Commission(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 12)
		else:
			quickfix.DoubleField.__init__(self, 12, data)

class CommType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 13)
		else:
			quickfix.CharField.__init__(self, 13, data)

class CumQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 14)
		else:
			quickfix.DoubleField.__init__(self, 14, data)

class Currency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 15)
		else:
			quickfix.StringField.__init__(self, 15, data)

class ExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 17)
		else:
			quickfix.StringField.__init__(self, 17, data)

class ExecInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 18)
		else:
			quickfix.StringField.__init__(self, 18, data)

class ExecRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 19)
		else:
			quickfix.StringField.__init__(self, 19, data)

class ExecTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 20)
		else:
			quickfix.CharField.__init__(self, 20, data)

class HandlInst(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 21)
		else:
			quickfix.CharField.__init__(self, 21, data)

class IDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 22)
		else:
			quickfix.StringField.__init__(self, 22, data)

class IOIid(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 23)
		else:
			quickfix.StringField.__init__(self, 23, data)

class IOIOthSvc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 24)
		else:
			quickfix.CharField.__init__(self, 24, data)

class IOIQltyInd(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 25)
		else:
			quickfix.CharField.__init__(self, 25, data)

class IOIRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 26)
		else:
			quickfix.StringField.__init__(self, 26, data)

class IOIShares(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 27)
		else:
			quickfix.StringField.__init__(self, 27, data)

class IOITransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 28)
		else:
			quickfix.CharField.__init__(self, 28, data)

class LastCapacity(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 29)
		else:
			quickfix.CharField.__init__(self, 29, data)

class LastMkt(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 30)
		else:
			quickfix.StringField.__init__(self, 30, data)

class LastPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 31)
		else:
			quickfix.DoubleField.__init__(self, 31, data)

class LastShares(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 32)
		else:
			quickfix.DoubleField.__init__(self, 32, data)

class LinesOfText(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 33)
		else:
			quickfix.IntField.__init__(self, 33, data)

class OrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 37)
		else:
			quickfix.StringField.__init__(self, 37, data)

class OrderQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 38)
		else:
			quickfix.DoubleField.__init__(self, 38, data)

class OrdStatus(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 39)
		else:
			quickfix.CharField.__init__(self, 39, data)

class OrdType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40)
		else:
			quickfix.CharField.__init__(self, 40, data)

class OrigClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41)
		else:
			quickfix.StringField.__init__(self, 41, data)

class OrigTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 42)
		else:
			quickfix.UtcTimeStampField.__init__(self, 42, data)

class Price(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 44)
		else:
			quickfix.DoubleField.__init__(self, 44, data)

class RelatdSym(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 46)
		else:
			quickfix.StringField.__init__(self, 46, data)

class Rule80A(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 47)
		else:
			quickfix.CharField.__init__(self, 47, data)

class SecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 48)
		else:
			quickfix.StringField.__init__(self, 48, data)

class Shares(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 53)
		else:
			quickfix.DoubleField.__init__(self, 53, data)

class Side(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 54)
		else:
			quickfix.CharField.__init__(self, 54, data)

class Symbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 55)
		else:
			quickfix.StringField.__init__(self, 55, data)

class TimeInForce(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 59)
		else:
			quickfix.CharField.__init__(self, 59, data)

class TransactTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 60)
		else:
			quickfix.UtcTimeStampField.__init__(self, 60, data)

class Urgency(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 61)
		else:
			quickfix.CharField.__init__(self, 61, data)

class ValidUntilTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 62)
		else:
			quickfix.UtcTimeStampField.__init__(self, 62, data)

class SettlmntTyp(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 63)
		else:
			quickfix.CharField.__init__(self, 63, data)

class FutSettDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 64)
		else:
			quickfix.StringField.__init__(self, 64, data)

class SymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 65)
		else:
			quickfix.StringField.__init__(self, 65, data)

class ListID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 66)
		else:
			quickfix.StringField.__init__(self, 66, data)

class ListSeqNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 67)
		else:
			quickfix.IntField.__init__(self, 67, data)

class ListNoOrds(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 68)
		else:
			quickfix.IntField.__init__(self, 68, data)

class ListExecInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 69)
		else:
			quickfix.StringField.__init__(self, 69, data)

class AllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 70)
		else:
			quickfix.StringField.__init__(self, 70, data)

class AllocTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 71)
		else:
			quickfix.CharField.__init__(self, 71, data)

class RefAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 72)
		else:
			quickfix.StringField.__init__(self, 72, data)

class NoOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 73)
		else:
			quickfix.IntField.__init__(self, 73, data)

class AvgPrxPrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 74)
		else:
			quickfix.IntField.__init__(self, 74, data)

class TradeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 75)
		else:
			quickfix.StringField.__init__(self, 75, data)

class ExecBroker(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 76)
		else:
			quickfix.StringField.__init__(self, 76, data)

class OpenClose(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 77)
		else:
			quickfix.CharField.__init__(self, 77, data)

class NoAllocs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 78)
		else:
			quickfix.IntField.__init__(self, 78, data)

class AllocAccount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 79)
		else:
			quickfix.StringField.__init__(self, 79, data)

class AllocShares(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 80)
		else:
			quickfix.DoubleField.__init__(self, 80, data)

class ProcessCode(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 81)
		else:
			quickfix.CharField.__init__(self, 81, data)

class NoRpts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 82)
		else:
			quickfix.IntField.__init__(self, 82, data)

class RptSeq(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 83)
		else:
			quickfix.IntField.__init__(self, 83, data)

class CxlQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 84)
		else:
			quickfix.DoubleField.__init__(self, 84, data)

class NoDlvyInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 85)
		else:
			quickfix.IntField.__init__(self, 85, data)

class DlvyInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 86)
		else:
			quickfix.StringField.__init__(self, 86, data)

class AllocStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 87)
		else:
			quickfix.IntField.__init__(self, 87, data)

class AllocRejCode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 88)
		else:
			quickfix.IntField.__init__(self, 88, data)

class BrokerOfCredit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 92)
		else:
			quickfix.StringField.__init__(self, 92, data)

class EmailType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 94)
		else:
			quickfix.CharField.__init__(self, 94, data)

class StopPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 99)
		else:
			quickfix.DoubleField.__init__(self, 99, data)

class ExDestination(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 100)
		else:
			quickfix.StringField.__init__(self, 100, data)

class CxlRejReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 102)
		else:
			quickfix.IntField.__init__(self, 102, data)

class OrdRejReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 103)
		else:
			quickfix.IntField.__init__(self, 103, data)

class IOIQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 104)
		else:
			quickfix.CharField.__init__(self, 104, data)

class WaveNo(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 105)
		else:
			quickfix.StringField.__init__(self, 105, data)

class Issuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 106)
		else:
			quickfix.StringField.__init__(self, 106, data)

class SecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 107)
		else:
			quickfix.StringField.__init__(self, 107, data)

class ClientID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 109)
		else:
			quickfix.StringField.__init__(self, 109, data)

class MinQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 110)
		else:
			quickfix.DoubleField.__init__(self, 110, data)

class MaxFloor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 111)
		else:
			quickfix.DoubleField.__init__(self, 111, data)

class ReportToExch(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 113)
		else:
			quickfix.BoolField.__init__(self, 113, data)

class LocateReqd(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 114)
		else:
			quickfix.BoolField.__init__(self, 114, data)

class QuoteID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 117)
		else:
			quickfix.StringField.__init__(self, 117, data)

class NetMoney(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 118)
		else:
			quickfix.DoubleField.__init__(self, 118, data)

class SettlCurrAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 119)
		else:
			quickfix.DoubleField.__init__(self, 119, data)

class SettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 120)
		else:
			quickfix.StringField.__init__(self, 120, data)

class ForexReq(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 121)
		else:
			quickfix.BoolField.__init__(self, 121, data)

class NoExecs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 124)
		else:
			quickfix.IntField.__init__(self, 124, data)

class CxlType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 125)
		else:
			quickfix.CharField.__init__(self, 125, data)

class ExpireTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 126)
		else:
			quickfix.UtcTimeStampField.__init__(self, 126, data)

class DKReason(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 127)
		else:
			quickfix.CharField.__init__(self, 127, data)

class IOINaturalFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 130)
		else:
			quickfix.BoolField.__init__(self, 130, data)

class QuoteReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 131)
		else:
			quickfix.StringField.__init__(self, 131, data)

class BidPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 132)
		else:
			quickfix.DoubleField.__init__(self, 132, data)

class OfferPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 133)
		else:
			quickfix.DoubleField.__init__(self, 133, data)

class BidSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 134)
		else:
			quickfix.DoubleField.__init__(self, 134, data)

class OfferSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 135)
		else:
			quickfix.DoubleField.__init__(self, 135, data)

class NoMiscFees(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 136)
		else:
			quickfix.IntField.__init__(self, 136, data)

class MiscFeeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 137)
		else:
			quickfix.DoubleField.__init__(self, 137, data)

class MiscFeeCurr(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 138)
		else:
			quickfix.StringField.__init__(self, 138, data)

class MiscFeeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 139)
		else:
			quickfix.StringField.__init__(self, 139, data)

class PrevClosePx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 140)
		else:
			quickfix.DoubleField.__init__(self, 140, data)

class NoRelatedSym(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 146)
		else:
			quickfix.IntField.__init__(self, 146, data)

class Subject(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 147)
		else:
			quickfix.StringField.__init__(self, 147, data)

class Headline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 148)
		else:
			quickfix.StringField.__init__(self, 148, data)

class URLLink(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 149)
		else:
			quickfix.StringField.__init__(self, 149, data)

class ExecType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 150)
		else:
			quickfix.CharField.__init__(self, 150, data)

class LeavesQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 151)
		else:
			quickfix.DoubleField.__init__(self, 151, data)

class CashOrderQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 152)
		else:
			quickfix.DoubleField.__init__(self, 152, data)

class AllocAvgPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 153)
		else:
			quickfix.DoubleField.__init__(self, 153, data)

class AllocNetMoney(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 154)
		else:
			quickfix.DoubleField.__init__(self, 154, data)

class SettlCurrFxRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 155)
		else:
			quickfix.DoubleField.__init__(self, 155, data)

class SettlCurrFxRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 156)
		else:
			quickfix.CharField.__init__(self, 156, data)

class NumDaysInterest(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 157)
		else:
			quickfix.IntField.__init__(self, 157, data)

class AccruedInterestRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 158)
		else:
			quickfix.DoubleField.__init__(self, 158, data)

class AccruedInterestAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 159)
		else:
			quickfix.DoubleField.__init__(self, 159, data)

class SettlInstMode(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 160)
		else:
			quickfix.CharField.__init__(self, 160, data)

class AllocText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 161)
		else:
			quickfix.StringField.__init__(self, 161, data)

class SettlInstID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 162)
		else:
			quickfix.StringField.__init__(self, 162, data)

class SettlInstTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 163)
		else:
			quickfix.CharField.__init__(self, 163, data)

class EmailThreadID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 164)
		else:
			quickfix.StringField.__init__(self, 164, data)

class SettlInstSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 165)
		else:
			quickfix.CharField.__init__(self, 165, data)

class SettlLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 166)
		else:
			quickfix.StringField.__init__(self, 166, data)

class SecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 167)
		else:
			quickfix.StringField.__init__(self, 167, data)

class EffectiveTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 168)
		else:
			quickfix.UtcTimeStampField.__init__(self, 168, data)

class StandInstDbType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 169)
		else:
			quickfix.IntField.__init__(self, 169, data)

class StandInstDbName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 170)
		else:
			quickfix.StringField.__init__(self, 170, data)

class StandInstDbID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 171)
		else:
			quickfix.StringField.__init__(self, 171, data)

class SettlDeliveryType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 172)
		else:
			quickfix.IntField.__init__(self, 172, data)

class SettlDepositoryCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 173)
		else:
			quickfix.StringField.__init__(self, 173, data)

class SettlBrkrCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 174)
		else:
			quickfix.StringField.__init__(self, 174, data)

class SettlInstCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 175)
		else:
			quickfix.StringField.__init__(self, 175, data)

class SecuritySettlAgentName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 176)
		else:
			quickfix.StringField.__init__(self, 176, data)

class SecuritySettlAgentCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 177)
		else:
			quickfix.StringField.__init__(self, 177, data)

class SecuritySettlAgentAcctNum(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 178)
		else:
			quickfix.StringField.__init__(self, 178, data)

class SecuritySettlAgentAcctName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 179)
		else:
			quickfix.StringField.__init__(self, 179, data)

class SecuritySettlAgentContactName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 180)
		else:
			quickfix.StringField.__init__(self, 180, data)

class SecuritySettlAgentContactPhone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 181)
		else:
			quickfix.StringField.__init__(self, 181, data)

class CashSettlAgentName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 182)
		else:
			quickfix.StringField.__init__(self, 182, data)

class CashSettlAgentCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 183)
		else:
			quickfix.StringField.__init__(self, 183, data)

class CashSettlAgentAcctNum(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 184)
		else:
			quickfix.StringField.__init__(self, 184, data)

class CashSettlAgentAcctName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 185)
		else:
			quickfix.StringField.__init__(self, 185, data)

class CashSettlAgentContactName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 186)
		else:
			quickfix.StringField.__init__(self, 186, data)

class CashSettlAgentContactPhone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 187)
		else:
			quickfix.StringField.__init__(self, 187, data)

class BidSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 188)
		else:
			quickfix.DoubleField.__init__(self, 188, data)

class BidForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 189)
		else:
			quickfix.DoubleField.__init__(self, 189, data)

class OfferSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 190)
		else:
			quickfix.DoubleField.__init__(self, 190, data)

class OfferForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 191)
		else:
			quickfix.DoubleField.__init__(self, 191, data)

class OrderQty2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 192)
		else:
			quickfix.DoubleField.__init__(self, 192, data)

class FutSettDate2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 193)
		else:
			quickfix.StringField.__init__(self, 193, data)

class LastSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 194)
		else:
			quickfix.DoubleField.__init__(self, 194, data)

class LastForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 195)
		else:
			quickfix.DoubleField.__init__(self, 195, data)

class AllocLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 196)
		else:
			quickfix.StringField.__init__(self, 196, data)

class AllocLinkType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 197)
		else:
			quickfix.IntField.__init__(self, 197, data)

class SecondaryOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 198)
		else:
			quickfix.StringField.__init__(self, 198, data)

class NoIOIQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 199)
		else:
			quickfix.IntField.__init__(self, 199, data)

class MaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 200)
		else:
			quickfix.StringField.__init__(self, 200, data)

class PutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 201)
		else:
			quickfix.IntField.__init__(self, 201, data)

class StrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 202)
		else:
			quickfix.DoubleField.__init__(self, 202, data)

class CoveredOrUncovered(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 203)
		else:
			quickfix.IntField.__init__(self, 203, data)

class CustomerOrFirm(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 204)
		else:
			quickfix.IntField.__init__(self, 204, data)

class MaturityDay(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 205)
		else:
			quickfix.StringField.__init__(self, 205, data)

class OptAttribute(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 206)
		else:
			quickfix.CharField.__init__(self, 206, data)

class SecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 207)
		else:
			quickfix.StringField.__init__(self, 207, data)

class NotifyBrokerOfCredit(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 208)
		else:
			quickfix.BoolField.__init__(self, 208, data)

class AllocHandlInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 209)
		else:
			quickfix.IntField.__init__(self, 209, data)

class MaxShow(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 210)
		else:
			quickfix.DoubleField.__init__(self, 210, data)

class PegDifference(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 211)
		else:
			quickfix.DoubleField.__init__(self, 211, data)

class SendingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 51)
		else:
			quickfix.StringField.__init__(self, 51, data)

class TotNoOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 68)
		else:
			quickfix.IntField.__init__(self, 68, data)

class SettlInstRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 214)
		else:
			quickfix.StringField.__init__(self, 214, data)

class NoRoutingIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 215)
		else:
			quickfix.IntField.__init__(self, 215, data)

class RoutingType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 216)
		else:
			quickfix.IntField.__init__(self, 216, data)

class RoutingID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 217)
		else:
			quickfix.StringField.__init__(self, 217, data)

class SpreadToBenchmark(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 218)
		else:
			quickfix.DoubleField.__init__(self, 218, data)

class Benchmark(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 219)
		else:
			quickfix.CharField.__init__(self, 219, data)

class CouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 223)
		else:
			quickfix.DoubleField.__init__(self, 223, data)

class ContractMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 231)
		else:
			quickfix.DoubleField.__init__(self, 231, data)

class MDReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 262)
		else:
			quickfix.StringField.__init__(self, 262, data)

class SubscriptionRequestType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 263)
		else:
			quickfix.CharField.__init__(self, 263, data)

class MarketDepth(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 264)
		else:
			quickfix.IntField.__init__(self, 264, data)

class MDUpdateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 265)
		else:
			quickfix.IntField.__init__(self, 265, data)

class AggregatedBook(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 266)
		else:
			quickfix.BoolField.__init__(self, 266, data)

class NoMDEntryTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 267)
		else:
			quickfix.IntField.__init__(self, 267, data)

class NoMDEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 268)
		else:
			quickfix.IntField.__init__(self, 268, data)

class MDEntryType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 269)
		else:
			quickfix.CharField.__init__(self, 269, data)

class MDEntryPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 270)
		else:
			quickfix.DoubleField.__init__(self, 270, data)

class MDEntrySize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 271)
		else:
			quickfix.DoubleField.__init__(self, 271, data)

class MDEntryDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 272)
		else:
			quickfix.UtcDateField.__init__(self, 272, data)

class MDEntryTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 273)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 273, data)

class TickDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 274)
		else:
			quickfix.CharField.__init__(self, 274, data)

class MDMkt(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 275)
		else:
			quickfix.StringField.__init__(self, 275, data)

class QuoteCondition(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 276)
		else:
			quickfix.StringField.__init__(self, 276, data)

class TradeCondition(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 277)
		else:
			quickfix.StringField.__init__(self, 277, data)

class MDEntryID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 278)
		else:
			quickfix.StringField.__init__(self, 278, data)

class MDUpdateAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 279)
		else:
			quickfix.CharField.__init__(self, 279, data)

class MDEntryRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 280)
		else:
			quickfix.StringField.__init__(self, 280, data)

class MDReqRejReason(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 281)
		else:
			quickfix.CharField.__init__(self, 281, data)

class MDEntryOriginator(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 282)
		else:
			quickfix.StringField.__init__(self, 282, data)

class LocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 283)
		else:
			quickfix.StringField.__init__(self, 283, data)

class DeskID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 284)
		else:
			quickfix.StringField.__init__(self, 284, data)

class DeleteReason(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 285)
		else:
			quickfix.CharField.__init__(self, 285, data)

class OpenCloseSettleFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 286)
		else:
			quickfix.StringField.__init__(self, 286, data)

class SellerDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 287)
		else:
			quickfix.IntField.__init__(self, 287, data)

class MDEntryBuyer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 288)
		else:
			quickfix.StringField.__init__(self, 288, data)

class MDEntrySeller(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 289)
		else:
			quickfix.StringField.__init__(self, 289, data)

class MDEntryPositionNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 290)
		else:
			quickfix.IntField.__init__(self, 290, data)

class FinancialStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 291)
		else:
			quickfix.StringField.__init__(self, 291, data)

class CorporateAction(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 292)
		else:
			quickfix.StringField.__init__(self, 292, data)

class DefBidSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 293)
		else:
			quickfix.DoubleField.__init__(self, 293, data)

class DefOfferSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 294)
		else:
			quickfix.DoubleField.__init__(self, 294, data)

class NoQuoteEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 295)
		else:
			quickfix.IntField.__init__(self, 295, data)

class NoQuoteSets(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 296)
		else:
			quickfix.IntField.__init__(self, 296, data)

class QuoteAckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1865)
		else:
			quickfix.IntField.__init__(self, 1865, data)

class QuoteCancelType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 298)
		else:
			quickfix.IntField.__init__(self, 298, data)

class QuoteEntryID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 299)
		else:
			quickfix.StringField.__init__(self, 299, data)

class QuoteRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 300)
		else:
			quickfix.IntField.__init__(self, 300, data)

class QuoteResponseLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 301)
		else:
			quickfix.IntField.__init__(self, 301, data)

class QuoteSetID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 302)
		else:
			quickfix.StringField.__init__(self, 302, data)

class QuoteRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 303)
		else:
			quickfix.IntField.__init__(self, 303, data)

class TotQuoteEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 304)
		else:
			quickfix.IntField.__init__(self, 304, data)

class UnderlyingIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 305)
		else:
			quickfix.StringField.__init__(self, 305, data)

class UnderlyingIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 306)
		else:
			quickfix.StringField.__init__(self, 306, data)

class UnderlyingSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 307)
		else:
			quickfix.StringField.__init__(self, 307, data)

class UnderlyingSecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 308)
		else:
			quickfix.StringField.__init__(self, 308, data)

class UnderlyingSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 309)
		else:
			quickfix.StringField.__init__(self, 309, data)

class UnderlyingSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 310)
		else:
			quickfix.StringField.__init__(self, 310, data)

class UnderlyingSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 311)
		else:
			quickfix.StringField.__init__(self, 311, data)

class UnderlyingSymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 312)
		else:
			quickfix.StringField.__init__(self, 312, data)

class UnderlyingMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 313)
		else:
			quickfix.StringField.__init__(self, 313, data)

class UnderlyingMaturityDay(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 314)
		else:
			quickfix.StringField.__init__(self, 314, data)

class UnderlyingPutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 315)
		else:
			quickfix.IntField.__init__(self, 315, data)

class UnderlyingStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 316)
		else:
			quickfix.DoubleField.__init__(self, 316, data)

class UnderlyingOptAttribute(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 317)
		else:
			quickfix.CharField.__init__(self, 317, data)

class UnderlyingCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 318)
		else:
			quickfix.StringField.__init__(self, 318, data)

class RatioQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 319)
		else:
			quickfix.DoubleField.__init__(self, 319, data)

class SecurityReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 320)
		else:
			quickfix.StringField.__init__(self, 320, data)

class SecurityRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 321)
		else:
			quickfix.IntField.__init__(self, 321, data)

class SecurityResponseID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 322)
		else:
			quickfix.StringField.__init__(self, 322, data)

class SecurityResponseType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 323)
		else:
			quickfix.IntField.__init__(self, 323, data)

class SecurityStatusReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 324)
		else:
			quickfix.StringField.__init__(self, 324, data)

class UnsolicitedIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 325)
		else:
			quickfix.BoolField.__init__(self, 325, data)

class SecurityTradingStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 326)
		else:
			quickfix.IntField.__init__(self, 326, data)

class HaltReasonChar(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 327)
		else:
			quickfix.CharField.__init__(self, 327, data)

class InViewOfCommon(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 328)
		else:
			quickfix.BoolField.__init__(self, 328, data)

class DueToRelated(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 329)
		else:
			quickfix.BoolField.__init__(self, 329, data)

class BuyVolume(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 330)
		else:
			quickfix.DoubleField.__init__(self, 330, data)

class SellVolume(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 331)
		else:
			quickfix.DoubleField.__init__(self, 331, data)

class HighPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 332)
		else:
			quickfix.DoubleField.__init__(self, 332, data)

class LowPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 333)
		else:
			quickfix.DoubleField.__init__(self, 333, data)

class Adjustment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 334)
		else:
			quickfix.IntField.__init__(self, 334, data)

class TradSesReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 335)
		else:
			quickfix.StringField.__init__(self, 335, data)

class TradingSessionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 336)
		else:
			quickfix.StringField.__init__(self, 336, data)

class ContraTrader(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 337)
		else:
			quickfix.StringField.__init__(self, 337, data)

class TradSesMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 338)
		else:
			quickfix.IntField.__init__(self, 338, data)

class TradSesMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 339)
		else:
			quickfix.IntField.__init__(self, 339, data)

class TradSesStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 340)
		else:
			quickfix.IntField.__init__(self, 340, data)

class TradSesStartTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 341)
		else:
			quickfix.UtcTimeStampField.__init__(self, 341, data)

class TradSesOpenTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 342)
		else:
			quickfix.UtcTimeStampField.__init__(self, 342, data)

class TradSesPreCloseTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 343)
		else:
			quickfix.UtcTimeStampField.__init__(self, 343, data)

class TradSesCloseTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 344)
		else:
			quickfix.UtcTimeStampField.__init__(self, 344, data)

class TradSesEndTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 345)
		else:
			quickfix.UtcTimeStampField.__init__(self, 345, data)

class NumberOfOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 346)
		else:
			quickfix.IntField.__init__(self, 346, data)

class EncodedIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 348)
		else:
			quickfix.IntField.__init__(self, 348, data)

class EncodedIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 349)
		else:
			quickfix.StringField.__init__(self, 349, data)

class EncodedSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 350)
		else:
			quickfix.IntField.__init__(self, 350, data)

class EncodedSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 351)
		else:
			quickfix.StringField.__init__(self, 351, data)

class EncodedListExecInstLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 352)
		else:
			quickfix.IntField.__init__(self, 352, data)

class EncodedListExecInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 353)
		else:
			quickfix.StringField.__init__(self, 353, data)

class EncodedSubjectLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 356)
		else:
			quickfix.IntField.__init__(self, 356, data)

class EncodedSubject(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 357)
		else:
			quickfix.StringField.__init__(self, 357, data)

class EncodedHeadlineLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 358)
		else:
			quickfix.IntField.__init__(self, 358, data)

class EncodedHeadline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 359)
		else:
			quickfix.StringField.__init__(self, 359, data)

class EncodedAllocTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 360)
		else:
			quickfix.IntField.__init__(self, 360, data)

class EncodedAllocText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 361)
		else:
			quickfix.StringField.__init__(self, 361, data)

class EncodedUnderlyingIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 362)
		else:
			quickfix.IntField.__init__(self, 362, data)

class EncodedUnderlyingIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 363)
		else:
			quickfix.StringField.__init__(self, 363, data)

class EncodedUnderlyingSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 364)
		else:
			quickfix.IntField.__init__(self, 364, data)

class EncodedUnderlyingSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 365)
		else:
			quickfix.StringField.__init__(self, 365, data)

class AllocPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 366)
		else:
			quickfix.DoubleField.__init__(self, 366, data)

class QuoteSetValidUntilTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 367)
		else:
			quickfix.UtcTimeStampField.__init__(self, 367, data)

class QuoteEntryRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 368)
		else:
			quickfix.IntField.__init__(self, 368, data)

class OnBehalfOfSendingTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 370)
		else:
			quickfix.UtcTimeStampField.__init__(self, 370, data)

class BidRequestTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 374)
		else:
			quickfix.CharField.__init__(self, 374, data)

class ContraBroker(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 375)
		else:
			quickfix.StringField.__init__(self, 375, data)

class ComplianceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 376)
		else:
			quickfix.StringField.__init__(self, 376, data)

class SolicitedFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 377)
		else:
			quickfix.BoolField.__init__(self, 377, data)

class ExecRestatementReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 378)
		else:
			quickfix.IntField.__init__(self, 378, data)

class BusinessRejectRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 379)
		else:
			quickfix.StringField.__init__(self, 379, data)

class BusinessRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 380)
		else:
			quickfix.IntField.__init__(self, 380, data)

class GrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 381)
		else:
			quickfix.DoubleField.__init__(self, 381, data)

class NoContraBrokers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 382)
		else:
			quickfix.IntField.__init__(self, 382, data)

class NoMsgTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 384)
		else:
			quickfix.IntField.__init__(self, 384, data)

class MsgDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 385)
		else:
			quickfix.CharField.__init__(self, 385, data)

class NoTradingSessions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 386)
		else:
			quickfix.IntField.__init__(self, 386, data)

class TotalVolumeTraded(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 387)
		else:
			quickfix.DoubleField.__init__(self, 387, data)

class DiscretionInst(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 388)
		else:
			quickfix.CharField.__init__(self, 388, data)

class DiscretionOffset(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 389)
		else:
			quickfix.DoubleField.__init__(self, 389, data)

class BidID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 390)
		else:
			quickfix.StringField.__init__(self, 390, data)

class ClientBidID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 391)
		else:
			quickfix.StringField.__init__(self, 391, data)

class ListName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 392)
		else:
			quickfix.StringField.__init__(self, 392, data)

class TotalNumSecurities(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 393)
		else:
			quickfix.IntField.__init__(self, 393, data)

class BidType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 394)
		else:
			quickfix.IntField.__init__(self, 394, data)

class NumTickets(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 395)
		else:
			quickfix.IntField.__init__(self, 395, data)

class SideValue1(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 396)
		else:
			quickfix.DoubleField.__init__(self, 396, data)

class SideValue2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 397)
		else:
			quickfix.DoubleField.__init__(self, 397, data)

class NoBidDescriptors(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 398)
		else:
			quickfix.IntField.__init__(self, 398, data)

class BidDescriptorType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 399)
		else:
			quickfix.IntField.__init__(self, 399, data)

class BidDescriptor(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 400)
		else:
			quickfix.StringField.__init__(self, 400, data)

class SideValueInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 401)
		else:
			quickfix.IntField.__init__(self, 401, data)

class LiquidityPctLow(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 402)
		else:
			quickfix.DoubleField.__init__(self, 402, data)

class LiquidityPctHigh(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 403)
		else:
			quickfix.DoubleField.__init__(self, 403, data)

class LiquidityValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 404)
		else:
			quickfix.DoubleField.__init__(self, 404, data)

class EFPTrackingError(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 405)
		else:
			quickfix.DoubleField.__init__(self, 405, data)

class FairValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 406)
		else:
			quickfix.DoubleField.__init__(self, 406, data)

class OutsideIndexPct(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 407)
		else:
			quickfix.DoubleField.__init__(self, 407, data)

class ValueOfFutures(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 408)
		else:
			quickfix.DoubleField.__init__(self, 408, data)

class LiquidityIndType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 409)
		else:
			quickfix.IntField.__init__(self, 409, data)

class WtAverageLiquidity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 410)
		else:
			quickfix.DoubleField.__init__(self, 410, data)

class ExchangeForPhysical(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 411)
		else:
			quickfix.BoolField.__init__(self, 411, data)

class OutMainCntryUIndex(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 412)
		else:
			quickfix.DoubleField.__init__(self, 412, data)

class CrossPercent(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 413)
		else:
			quickfix.DoubleField.__init__(self, 413, data)

class ProgRptReqs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 414)
		else:
			quickfix.IntField.__init__(self, 414, data)

class ProgPeriodInterval(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 415)
		else:
			quickfix.IntField.__init__(self, 415, data)

class IncTaxInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 416)
		else:
			quickfix.IntField.__init__(self, 416, data)

class NumBidders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 417)
		else:
			quickfix.IntField.__init__(self, 417, data)

class TradeType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 418)
		else:
			quickfix.CharField.__init__(self, 418, data)

class BasisPxType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 419)
		else:
			quickfix.CharField.__init__(self, 419, data)

class NoBidComponents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 420)
		else:
			quickfix.IntField.__init__(self, 420, data)

class Country(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 421)
		else:
			quickfix.StringField.__init__(self, 421, data)

class TotNoStrikes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 422)
		else:
			quickfix.IntField.__init__(self, 422, data)

class PriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 423)
		else:
			quickfix.IntField.__init__(self, 423, data)

class DayOrderQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 424)
		else:
			quickfix.DoubleField.__init__(self, 424, data)

class DayCumQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 425)
		else:
			quickfix.DoubleField.__init__(self, 425, data)

class DayAvgPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 426)
		else:
			quickfix.DoubleField.__init__(self, 426, data)

class GTBookingInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 427)
		else:
			quickfix.IntField.__init__(self, 427, data)

class NoStrikes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 428)
		else:
			quickfix.IntField.__init__(self, 428, data)

class ListStatusType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 429)
		else:
			quickfix.IntField.__init__(self, 429, data)

class NetGrossInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 430)
		else:
			quickfix.IntField.__init__(self, 430, data)

class ListOrderStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 431)
		else:
			quickfix.IntField.__init__(self, 431, data)

class ExpireDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 432)
		else:
			quickfix.StringField.__init__(self, 432, data)

class ListExecInstType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 433)
		else:
			quickfix.CharField.__init__(self, 433, data)

class CxlRejResponseTo(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 434)
		else:
			quickfix.CharField.__init__(self, 434, data)

class UnderlyingCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 435)
		else:
			quickfix.DoubleField.__init__(self, 435, data)

class UnderlyingContractMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 436)
		else:
			quickfix.DoubleField.__init__(self, 436, data)

class ContraTradeQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 437)
		else:
			quickfix.DoubleField.__init__(self, 437, data)

class ContraTradeTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 438)
		else:
			quickfix.UtcTimeStampField.__init__(self, 438, data)

class ClearingFirm(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 439)
		else:
			quickfix.StringField.__init__(self, 439, data)

class ClearingAccount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 440)
		else:
			quickfix.StringField.__init__(self, 440, data)

class LiquidityNumSecurities(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 441)
		else:
			quickfix.IntField.__init__(self, 441, data)

class MultiLegReportingType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 442)
		else:
			quickfix.CharField.__init__(self, 442, data)

class StrikeTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 443)
		else:
			quickfix.UtcTimeStampField.__init__(self, 443, data)

class ListStatusText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 444)
		else:
			quickfix.StringField.__init__(self, 444, data)

class EncodedListStatusTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 445)
		else:
			quickfix.IntField.__init__(self, 445, data)

class EncodedListStatusText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 446)
		else:
			quickfix.StringField.__init__(self, 446, data)

class SecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 22)
		else:
			quickfix.StringField.__init__(self, 22, data)

class IOIQty(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 27)
		else:
			quickfix.StringField.__init__(self, 27, data)

class LastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 32)
		else:
			quickfix.DoubleField.__init__(self, 32, data)

class Quantity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 53)
		else:
			quickfix.DoubleField.__init__(self, 53, data)

class PositionEffect(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 77)
		else:
			quickfix.CharField.__init__(self, 77, data)

class AllocQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 80)
		else:
			quickfix.DoubleField.__init__(self, 80, data)

class Spread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 218)
		else:
			quickfix.DoubleField.__init__(self, 218, data)

class BenchmarkCurveCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 220)
		else:
			quickfix.StringField.__init__(self, 220, data)

class BenchmarkCurveName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 221)
		else:
			quickfix.StringField.__init__(self, 221, data)

class BenchmarkCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 222)
		else:
			quickfix.StringField.__init__(self, 222, data)

class CouponPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 224)
		else:
			quickfix.StringField.__init__(self, 224, data)

class IssueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 225)
		else:
			quickfix.StringField.__init__(self, 225, data)

class RepurchaseTerm(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 226)
		else:
			quickfix.IntField.__init__(self, 226, data)

class RepurchaseRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 227)
		else:
			quickfix.DoubleField.__init__(self, 227, data)

class Factor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 228)
		else:
			quickfix.DoubleField.__init__(self, 228, data)

class TradeOriginationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 229)
		else:
			quickfix.StringField.__init__(self, 229, data)

class ExDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 230)
		else:
			quickfix.StringField.__init__(self, 230, data)

class NoStipulations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 232)
		else:
			quickfix.IntField.__init__(self, 232, data)

class StipulationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 233)
		else:
			quickfix.StringField.__init__(self, 233, data)

class StipulationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 234)
		else:
			quickfix.StringField.__init__(self, 234, data)

class YieldType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 235)
		else:
			quickfix.StringField.__init__(self, 235, data)

class Yield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 236)
		else:
			quickfix.DoubleField.__init__(self, 236, data)

class TotalTakedown(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 237)
		else:
			quickfix.DoubleField.__init__(self, 237, data)

class Concession(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 238)
		else:
			quickfix.DoubleField.__init__(self, 238, data)

class RepoCollateralSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 239)
		else:
			quickfix.StringField.__init__(self, 239, data)

class RedemptionDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 240)
		else:
			quickfix.StringField.__init__(self, 240, data)

class UnderlyingCouponPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 241)
		else:
			quickfix.StringField.__init__(self, 241, data)

class UnderlyingIssueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 242)
		else:
			quickfix.StringField.__init__(self, 242, data)

class UnderlyingRepoCollateralSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 243)
		else:
			quickfix.StringField.__init__(self, 243, data)

class UnderlyingRepurchaseTerm(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 244)
		else:
			quickfix.IntField.__init__(self, 244, data)

class UnderlyingRepurchaseRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 245)
		else:
			quickfix.DoubleField.__init__(self, 245, data)

class UnderlyingFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 246)
		else:
			quickfix.DoubleField.__init__(self, 246, data)

class UnderlyingRedemptionDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 247)
		else:
			quickfix.StringField.__init__(self, 247, data)

class LegCouponPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 248)
		else:
			quickfix.StringField.__init__(self, 248, data)

class LegIssueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 249)
		else:
			quickfix.StringField.__init__(self, 249, data)

class LegRepoCollateralSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 250)
		else:
			quickfix.StringField.__init__(self, 250, data)

class LegRepurchaseTerm(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 251)
		else:
			quickfix.IntField.__init__(self, 251, data)

class LegRepurchaseRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 252)
		else:
			quickfix.DoubleField.__init__(self, 252, data)

class LegFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 253)
		else:
			quickfix.DoubleField.__init__(self, 253, data)

class LegRedemptionDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 254)
		else:
			quickfix.StringField.__init__(self, 254, data)

class CreditRating(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 255)
		else:
			quickfix.StringField.__init__(self, 255, data)

class UnderlyingCreditRating(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 256)
		else:
			quickfix.StringField.__init__(self, 256, data)

class LegCreditRating(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 257)
		else:
			quickfix.StringField.__init__(self, 257, data)

class TradedFlatSwitch(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 258)
		else:
			quickfix.BoolField.__init__(self, 258, data)

class BasisFeatureDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 259)
		else:
			quickfix.StringField.__init__(self, 259, data)

class BasisFeaturePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 260)
		else:
			quickfix.DoubleField.__init__(self, 260, data)

class QuoteStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 297)
		else:
			quickfix.IntField.__init__(self, 297, data)

class UnderlyingSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 305)
		else:
			quickfix.StringField.__init__(self, 305, data)

class PartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 447)
		else:
			quickfix.CharField.__init__(self, 447, data)

class PartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 448)
		else:
			quickfix.StringField.__init__(self, 448, data)

class TotalVolumeTradedDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 449)
		else:
			quickfix.UtcDateField.__init__(self, 449, data)

class TotalVolumeTradedTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 450)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 450, data)

class NetChgPrevDay(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 451)
		else:
			quickfix.DoubleField.__init__(self, 451, data)

class PartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 452)
		else:
			quickfix.IntField.__init__(self, 452, data)

class NoPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 453)
		else:
			quickfix.IntField.__init__(self, 453, data)

class NoSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 454)
		else:
			quickfix.IntField.__init__(self, 454, data)

class SecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 455)
		else:
			quickfix.StringField.__init__(self, 455, data)

class SecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 456)
		else:
			quickfix.StringField.__init__(self, 456, data)

class NoUnderlyingSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 457)
		else:
			quickfix.IntField.__init__(self, 457, data)

class UnderlyingSecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 458)
		else:
			quickfix.StringField.__init__(self, 458, data)

class UnderlyingSecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 459)
		else:
			quickfix.StringField.__init__(self, 459, data)

class Product(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 460)
		else:
			quickfix.IntField.__init__(self, 460, data)

class CFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 461)
		else:
			quickfix.StringField.__init__(self, 461, data)

class UnderlyingProduct(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 462)
		else:
			quickfix.IntField.__init__(self, 462, data)

class UnderlyingCFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 463)
		else:
			quickfix.StringField.__init__(self, 463, data)

class QuantityType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 465)
		else:
			quickfix.IntField.__init__(self, 465, data)

class BookingRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 466)
		else:
			quickfix.StringField.__init__(self, 466, data)

class IndividualAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 467)
		else:
			quickfix.StringField.__init__(self, 467, data)

class RoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 468)
		else:
			quickfix.CharField.__init__(self, 468, data)

class RoundingModulus(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 469)
		else:
			quickfix.DoubleField.__init__(self, 469, data)

class CountryOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 470)
		else:
			quickfix.StringField.__init__(self, 470, data)

class StateOrProvinceOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 471)
		else:
			quickfix.StringField.__init__(self, 471, data)

class LocaleOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 472)
		else:
			quickfix.StringField.__init__(self, 472, data)

class NoRegistDtls(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 473)
		else:
			quickfix.IntField.__init__(self, 473, data)

class MailingDtls(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 474)
		else:
			quickfix.StringField.__init__(self, 474, data)

class InvestorCountryOfResidence(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 475)
		else:
			quickfix.StringField.__init__(self, 475, data)

class PaymentRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 476)
		else:
			quickfix.StringField.__init__(self, 476, data)

class DistribPaymentMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 477)
		else:
			quickfix.IntField.__init__(self, 477, data)

class CashDistribCurr(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 478)
		else:
			quickfix.StringField.__init__(self, 478, data)

class CommCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 479)
		else:
			quickfix.StringField.__init__(self, 479, data)

class CancellationRights(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 480)
		else:
			quickfix.CharField.__init__(self, 480, data)

class MoneyLaunderingStatus(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 481)
		else:
			quickfix.CharField.__init__(self, 481, data)

class MailingInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 482)
		else:
			quickfix.StringField.__init__(self, 482, data)

class TransBkdTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 483)
		else:
			quickfix.UtcTimeStampField.__init__(self, 483, data)

class ExecPriceType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 484)
		else:
			quickfix.CharField.__init__(self, 484, data)

class ExecPriceAdjustment(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 485)
		else:
			quickfix.DoubleField.__init__(self, 485, data)

class DateOfBirth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 486)
		else:
			quickfix.StringField.__init__(self, 486, data)

class TradeReportTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 487)
		else:
			quickfix.IntField.__init__(self, 487, data)

class CardHolderName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 488)
		else:
			quickfix.StringField.__init__(self, 488, data)

class CardNumber(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 489)
		else:
			quickfix.StringField.__init__(self, 489, data)

class CardExpDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 490)
		else:
			quickfix.StringField.__init__(self, 490, data)

class CardIssNo(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 491)
		else:
			quickfix.StringField.__init__(self, 491, data)

class PaymentMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 492)
		else:
			quickfix.IntField.__init__(self, 492, data)

class RegistAcctType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 493)
		else:
			quickfix.StringField.__init__(self, 493, data)

class Designation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 494)
		else:
			quickfix.StringField.__init__(self, 494, data)

class TaxAdvantageType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 495)
		else:
			quickfix.IntField.__init__(self, 495, data)

class RegistRejReasonText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 496)
		else:
			quickfix.StringField.__init__(self, 496, data)

class FundRenewWaiv(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 497)
		else:
			quickfix.CharField.__init__(self, 497, data)

class CashDistribAgentName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 498)
		else:
			quickfix.StringField.__init__(self, 498, data)

class CashDistribAgentCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 499)
		else:
			quickfix.StringField.__init__(self, 499, data)

class CashDistribAgentAcctNumber(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 500)
		else:
			quickfix.StringField.__init__(self, 500, data)

class CashDistribPayRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 501)
		else:
			quickfix.StringField.__init__(self, 501, data)

class CardStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 503)
		else:
			quickfix.StringField.__init__(self, 503, data)

class PaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 504)
		else:
			quickfix.StringField.__init__(self, 504, data)

class PaymentRemitterID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 505)
		else:
			quickfix.StringField.__init__(self, 505, data)

class RegistStatus(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 506)
		else:
			quickfix.CharField.__init__(self, 506, data)

class RegistRejReasonCode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 507)
		else:
			quickfix.IntField.__init__(self, 507, data)

class RegistRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 508)
		else:
			quickfix.StringField.__init__(self, 508, data)

class RegistDetls(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 509)
		else:
			quickfix.StringField.__init__(self, 509, data)

class NoDistribInsts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 510)
		else:
			quickfix.IntField.__init__(self, 510, data)

class RegistEmail(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 511)
		else:
			quickfix.StringField.__init__(self, 511, data)

class DistribPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 512)
		else:
			quickfix.DoubleField.__init__(self, 512, data)

class RegistID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 513)
		else:
			quickfix.StringField.__init__(self, 513, data)

class RegistTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 514)
		else:
			quickfix.CharField.__init__(self, 514, data)

class ExecValuationPoint(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 515)
		else:
			quickfix.UtcTimeStampField.__init__(self, 515, data)

class OrderPercent(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 516)
		else:
			quickfix.DoubleField.__init__(self, 516, data)

class OwnershipType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 517)
		else:
			quickfix.CharField.__init__(self, 517, data)

class NoContAmts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 518)
		else:
			quickfix.IntField.__init__(self, 518, data)

class ContAmtType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 519)
		else:
			quickfix.IntField.__init__(self, 519, data)

class ContAmtValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 520)
		else:
			quickfix.DoubleField.__init__(self, 520, data)

class ContAmtCurr(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 521)
		else:
			quickfix.StringField.__init__(self, 521, data)

class OwnerType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 522)
		else:
			quickfix.IntField.__init__(self, 522, data)

class PartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 523)
		else:
			quickfix.StringField.__init__(self, 523, data)

class NestedPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 524)
		else:
			quickfix.StringField.__init__(self, 524, data)

class NestedPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 525)
		else:
			quickfix.CharField.__init__(self, 525, data)

class SecondaryClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 526)
		else:
			quickfix.StringField.__init__(self, 526, data)

class SecondaryExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 527)
		else:
			quickfix.StringField.__init__(self, 527, data)

class OrderCapacity(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 528)
		else:
			quickfix.CharField.__init__(self, 528, data)

class OrderRestrictions(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 529)
		else:
			quickfix.StringField.__init__(self, 529, data)

class MassCancelRequestType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 530)
		else:
			quickfix.CharField.__init__(self, 530, data)

class MassCancelResponse(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 531)
		else:
			quickfix.CharField.__init__(self, 531, data)

class MassCancelRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 532)
		else:
			quickfix.IntField.__init__(self, 532, data)

class TotalAffectedOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 533)
		else:
			quickfix.IntField.__init__(self, 533, data)

class NoAffectedOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 534)
		else:
			quickfix.IntField.__init__(self, 534, data)

class AffectedOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 535)
		else:
			quickfix.StringField.__init__(self, 535, data)

class AffectedSecondaryOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 536)
		else:
			quickfix.StringField.__init__(self, 536, data)

class QuoteType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 537)
		else:
			quickfix.IntField.__init__(self, 537, data)

class NestedPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 538)
		else:
			quickfix.IntField.__init__(self, 538, data)

class NoNestedPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 539)
		else:
			quickfix.IntField.__init__(self, 539, data)

class TotalAccruedInterestAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 540)
		else:
			quickfix.DoubleField.__init__(self, 540, data)

class MaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 541)
		else:
			quickfix.StringField.__init__(self, 541, data)

class UnderlyingMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 542)
		else:
			quickfix.StringField.__init__(self, 542, data)

class InstrRegistry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 543)
		else:
			quickfix.StringField.__init__(self, 543, data)

class CashMargin(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 544)
		else:
			quickfix.CharField.__init__(self, 544, data)

class NestedPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 545)
		else:
			quickfix.StringField.__init__(self, 545, data)

class Scope(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 546)
		else:
			quickfix.StringField.__init__(self, 546, data)

class MDImplicitDelete(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 547)
		else:
			quickfix.BoolField.__init__(self, 547, data)

class CrossID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 548)
		else:
			quickfix.StringField.__init__(self, 548, data)

class CrossType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 549)
		else:
			quickfix.IntField.__init__(self, 549, data)

class CrossPrioritization(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 550)
		else:
			quickfix.IntField.__init__(self, 550, data)

class OrigCrossID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 551)
		else:
			quickfix.StringField.__init__(self, 551, data)

class NoSides(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 552)
		else:
			quickfix.IntField.__init__(self, 552, data)

class NoLegs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 555)
		else:
			quickfix.IntField.__init__(self, 555, data)

class LegCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 556)
		else:
			quickfix.StringField.__init__(self, 556, data)

class TotalNumSecurityTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 557)
		else:
			quickfix.IntField.__init__(self, 557, data)

class NoSecurityTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 558)
		else:
			quickfix.IntField.__init__(self, 558, data)

class SecurityListRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 559)
		else:
			quickfix.IntField.__init__(self, 559, data)

class SecurityRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 560)
		else:
			quickfix.IntField.__init__(self, 560, data)

class RoundLot(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 561)
		else:
			quickfix.DoubleField.__init__(self, 561, data)

class MinTradeVol(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 562)
		else:
			quickfix.DoubleField.__init__(self, 562, data)

class MultiLegRptTypeReq(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 563)
		else:
			quickfix.IntField.__init__(self, 563, data)

class LegPositionEffect(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 564)
		else:
			quickfix.CharField.__init__(self, 564, data)

class LegCoveredOrUncovered(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 565)
		else:
			quickfix.IntField.__init__(self, 565, data)

class LegPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 566)
		else:
			quickfix.DoubleField.__init__(self, 566, data)

class TradSesStatusRejReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 567)
		else:
			quickfix.IntField.__init__(self, 567, data)

class TradeRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 568)
		else:
			quickfix.StringField.__init__(self, 568, data)

class TradeRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 569)
		else:
			quickfix.IntField.__init__(self, 569, data)

class PreviouslyReported(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 570)
		else:
			quickfix.BoolField.__init__(self, 570, data)

class TradeReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 571)
		else:
			quickfix.StringField.__init__(self, 571, data)

class TradeReportRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 572)
		else:
			quickfix.StringField.__init__(self, 572, data)

class MatchStatus(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 573)
		else:
			quickfix.CharField.__init__(self, 573, data)

class MatchType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 574)
		else:
			quickfix.StringField.__init__(self, 574, data)

class OddLot(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 575)
		else:
			quickfix.BoolField.__init__(self, 575, data)

class NoClearingInstructions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 576)
		else:
			quickfix.IntField.__init__(self, 576, data)

class ClearingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 577)
		else:
			quickfix.IntField.__init__(self, 577, data)

class TradeInputSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 578)
		else:
			quickfix.StringField.__init__(self, 578, data)

class TradeInputDevice(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 579)
		else:
			quickfix.StringField.__init__(self, 579, data)

class NoDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 580)
		else:
			quickfix.IntField.__init__(self, 580, data)

class AccountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 581)
		else:
			quickfix.IntField.__init__(self, 581, data)

class CustOrderCapacity(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 582)
		else:
			quickfix.IntField.__init__(self, 582, data)

class ClOrdLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 583)
		else:
			quickfix.StringField.__init__(self, 583, data)

class MassStatusReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 584)
		else:
			quickfix.StringField.__init__(self, 584, data)

class MassStatusReqType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 585)
		else:
			quickfix.IntField.__init__(self, 585, data)

class OrigOrdModTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 586)
		else:
			quickfix.UtcTimeStampField.__init__(self, 586, data)

class LegSettlmntTyp(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 587)
		else:
			quickfix.CharField.__init__(self, 587, data)

class LegFutSettDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 588)
		else:
			quickfix.StringField.__init__(self, 588, data)

class DayBookingInst(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 589)
		else:
			quickfix.CharField.__init__(self, 589, data)

class BookingUnit(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 590)
		else:
			quickfix.CharField.__init__(self, 590, data)

class PreallocMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 591)
		else:
			quickfix.CharField.__init__(self, 591, data)

class UnderlyingCountryOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 592)
		else:
			quickfix.StringField.__init__(self, 592, data)

class UnderlyingStateOrProvinceOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 593)
		else:
			quickfix.StringField.__init__(self, 593, data)

class UnderlyingLocaleOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 594)
		else:
			quickfix.StringField.__init__(self, 594, data)

class UnderlyingInstrRegistry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 595)
		else:
			quickfix.StringField.__init__(self, 595, data)

class LegCountryOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 596)
		else:
			quickfix.StringField.__init__(self, 596, data)

class LegStateOrProvinceOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 597)
		else:
			quickfix.StringField.__init__(self, 597, data)

class LegLocaleOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 598)
		else:
			quickfix.StringField.__init__(self, 598, data)

class LegInstrRegistry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 599)
		else:
			quickfix.StringField.__init__(self, 599, data)

class LegSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 600)
		else:
			quickfix.StringField.__init__(self, 600, data)

class LegSymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 601)
		else:
			quickfix.StringField.__init__(self, 601, data)

class LegSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 602)
		else:
			quickfix.StringField.__init__(self, 602, data)

class LegSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 603)
		else:
			quickfix.StringField.__init__(self, 603, data)

class NoLegSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 604)
		else:
			quickfix.IntField.__init__(self, 604, data)

class LegSecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 605)
		else:
			quickfix.StringField.__init__(self, 605, data)

class LegSecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 606)
		else:
			quickfix.StringField.__init__(self, 606, data)

class LegProduct(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 607)
		else:
			quickfix.IntField.__init__(self, 607, data)

class LegCFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 608)
		else:
			quickfix.StringField.__init__(self, 608, data)

class LegSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 609)
		else:
			quickfix.StringField.__init__(self, 609, data)

class LegMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 610)
		else:
			quickfix.StringField.__init__(self, 610, data)

class LegMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 611)
		else:
			quickfix.StringField.__init__(self, 611, data)

class LegStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 612)
		else:
			quickfix.DoubleField.__init__(self, 612, data)

class LegOptAttribute(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 613)
		else:
			quickfix.CharField.__init__(self, 613, data)

class LegContractMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 614)
		else:
			quickfix.DoubleField.__init__(self, 614, data)

class LegCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 615)
		else:
			quickfix.DoubleField.__init__(self, 615, data)

class LegSecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 616)
		else:
			quickfix.StringField.__init__(self, 616, data)

class LegIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 617)
		else:
			quickfix.StringField.__init__(self, 617, data)

class EncodedLegIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 618)
		else:
			quickfix.IntField.__init__(self, 618, data)

class EncodedLegIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 619)
		else:
			quickfix.StringField.__init__(self, 619, data)

class LegSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 620)
		else:
			quickfix.StringField.__init__(self, 620, data)

class EncodedLegSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 621)
		else:
			quickfix.IntField.__init__(self, 621, data)

class EncodedLegSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 622)
		else:
			quickfix.StringField.__init__(self, 622, data)

class LegRatioQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 623)
		else:
			quickfix.DoubleField.__init__(self, 623, data)

class LegSide(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 624)
		else:
			quickfix.CharField.__init__(self, 624, data)

class TradingSessionSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 625)
		else:
			quickfix.StringField.__init__(self, 625, data)

class AllocType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 626)
		else:
			quickfix.IntField.__init__(self, 626, data)

class MidPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 631)
		else:
			quickfix.DoubleField.__init__(self, 631, data)

class BidYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 632)
		else:
			quickfix.DoubleField.__init__(self, 632, data)

class MidYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 633)
		else:
			quickfix.DoubleField.__init__(self, 633, data)

class OfferYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 634)
		else:
			quickfix.DoubleField.__init__(self, 634, data)

class ClearingFeeIndicator(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 635)
		else:
			quickfix.StringField.__init__(self, 635, data)

class WorkingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 636)
		else:
			quickfix.BoolField.__init__(self, 636, data)

class LegLastPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 637)
		else:
			quickfix.DoubleField.__init__(self, 637, data)

class PriorityIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 638)
		else:
			quickfix.IntField.__init__(self, 638, data)

class PriceImprovement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 639)
		else:
			quickfix.DoubleField.__init__(self, 639, data)

class Price2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 640)
		else:
			quickfix.DoubleField.__init__(self, 640, data)

class LastForwardPoints2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 641)
		else:
			quickfix.DoubleField.__init__(self, 641, data)

class BidForwardPoints2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 642)
		else:
			quickfix.DoubleField.__init__(self, 642, data)

class OfferForwardPoints2(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 643)
		else:
			quickfix.DoubleField.__init__(self, 643, data)

class RFQReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 644)
		else:
			quickfix.StringField.__init__(self, 644, data)

class MktBidPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 645)
		else:
			quickfix.DoubleField.__init__(self, 645, data)

class MktOfferPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 646)
		else:
			quickfix.DoubleField.__init__(self, 646, data)

class MinBidSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 647)
		else:
			quickfix.DoubleField.__init__(self, 647, data)

class MinOfferSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 648)
		else:
			quickfix.DoubleField.__init__(self, 648, data)

class QuoteStatusReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 649)
		else:
			quickfix.StringField.__init__(self, 649, data)

class LegalConfirm(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 650)
		else:
			quickfix.BoolField.__init__(self, 650, data)

class UnderlyingLastPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 651)
		else:
			quickfix.DoubleField.__init__(self, 651, data)

class UnderlyingLastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 652)
		else:
			quickfix.DoubleField.__init__(self, 652, data)

class LegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 654)
		else:
			quickfix.StringField.__init__(self, 654, data)

class ContraLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 655)
		else:
			quickfix.StringField.__init__(self, 655, data)

class SettlCurrBidFxRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 656)
		else:
			quickfix.DoubleField.__init__(self, 656, data)

class SettlCurrOfferFxRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 657)
		else:
			quickfix.DoubleField.__init__(self, 657, data)

class QuoteRequestRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 658)
		else:
			quickfix.IntField.__init__(self, 658, data)

class SideComplianceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 659)
		else:
			quickfix.StringField.__init__(self, 659, data)

class IOIID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 23)
		else:
			quickfix.StringField.__init__(self, 23, data)

class NoLinesOfText(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 33)
		else:
			quickfix.IntField.__init__(self, 33, data)

class SettlType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 63)
		else:
			quickfix.StringField.__init__(self, 63, data)

class SettlDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 64)
		else:
			quickfix.StringField.__init__(self, 64, data)

class AvgPxPrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 74)
		else:
			quickfix.IntField.__init__(self, 74, data)

class SettlDate2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 193)
		else:
			quickfix.StringField.__init__(self, 193, data)

class PegOffsetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 211)
		else:
			quickfix.DoubleField.__init__(self, 211, data)

class OpenCloseSettlFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 286)
		else:
			quickfix.StringField.__init__(self, 286, data)

class TotNoQuoteEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 304)
		else:
			quickfix.IntField.__init__(self, 304, data)

class DiscretionOffsetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 389)
		else:
			quickfix.DoubleField.__init__(self, 389, data)

class TotNoRelatedSym(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 393)
		else:
			quickfix.IntField.__init__(self, 393, data)

class BidTradeType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 418)
		else:
			quickfix.CharField.__init__(self, 418, data)

class CardIssNum(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 491)
		else:
			quickfix.StringField.__init__(self, 491, data)

class CashDistribAgentAcctName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 502)
		else:
			quickfix.StringField.__init__(self, 502, data)

class RegistDtls(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 509)
		else:
			quickfix.StringField.__init__(self, 509, data)

class TotNoSecurityTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 557)
		else:
			quickfix.IntField.__init__(self, 557, data)

class LegSettlType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 587)
		else:
			quickfix.StringField.__init__(self, 587, data)

class LegSettlDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 588)
		else:
			quickfix.StringField.__init__(self, 588, data)

class AcctIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 660)
		else:
			quickfix.IntField.__init__(self, 660, data)

class AllocAcctIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 661)
		else:
			quickfix.IntField.__init__(self, 661, data)

class BenchmarkPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 662)
		else:
			quickfix.DoubleField.__init__(self, 662, data)

class BenchmarkPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 663)
		else:
			quickfix.IntField.__init__(self, 663, data)

class ConfirmID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 664)
		else:
			quickfix.StringField.__init__(self, 664, data)

class ConfirmStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 665)
		else:
			quickfix.IntField.__init__(self, 665, data)

class ConfirmTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 666)
		else:
			quickfix.IntField.__init__(self, 666, data)

class ContractSettlMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 667)
		else:
			quickfix.StringField.__init__(self, 667, data)

class DeliveryForm(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 668)
		else:
			quickfix.IntField.__init__(self, 668, data)

class LastParPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 669)
		else:
			quickfix.DoubleField.__init__(self, 669, data)

class NoLegAllocs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 670)
		else:
			quickfix.IntField.__init__(self, 670, data)

class LegAllocAccount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 671)
		else:
			quickfix.StringField.__init__(self, 671, data)

class LegIndividualAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 672)
		else:
			quickfix.StringField.__init__(self, 672, data)

class LegAllocQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 673)
		else:
			quickfix.DoubleField.__init__(self, 673, data)

class LegAllocAcctIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 674)
		else:
			quickfix.IntField.__init__(self, 674, data)

class LegSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 675)
		else:
			quickfix.StringField.__init__(self, 675, data)

class LegBenchmarkCurveCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 676)
		else:
			quickfix.StringField.__init__(self, 676, data)

class LegBenchmarkCurveName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 677)
		else:
			quickfix.StringField.__init__(self, 677, data)

class LegBenchmarkCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 678)
		else:
			quickfix.StringField.__init__(self, 678, data)

class LegBenchmarkPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 679)
		else:
			quickfix.DoubleField.__init__(self, 679, data)

class LegBenchmarkPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 680)
		else:
			quickfix.IntField.__init__(self, 680, data)

class LegBidPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 681)
		else:
			quickfix.DoubleField.__init__(self, 681, data)

class LegIOIQty(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 682)
		else:
			quickfix.StringField.__init__(self, 682, data)

class NoLegStipulations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 683)
		else:
			quickfix.IntField.__init__(self, 683, data)

class LegOfferPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 684)
		else:
			quickfix.DoubleField.__init__(self, 684, data)

class LegPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 686)
		else:
			quickfix.IntField.__init__(self, 686, data)

class LegQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 687)
		else:
			quickfix.DoubleField.__init__(self, 687, data)

class LegStipulationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 688)
		else:
			quickfix.StringField.__init__(self, 688, data)

class LegStipulationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 689)
		else:
			quickfix.StringField.__init__(self, 689, data)

class LegSwapType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 690)
		else:
			quickfix.IntField.__init__(self, 690, data)

class Pool(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 691)
		else:
			quickfix.StringField.__init__(self, 691, data)

class QuotePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 692)
		else:
			quickfix.IntField.__init__(self, 692, data)

class QuoteRespID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 693)
		else:
			quickfix.StringField.__init__(self, 693, data)

class QuoteRespType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 694)
		else:
			quickfix.IntField.__init__(self, 694, data)

class QuoteQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 695)
		else:
			quickfix.CharField.__init__(self, 695, data)

class YieldRedemptionDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 696)
		else:
			quickfix.StringField.__init__(self, 696, data)

class YieldRedemptionPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 697)
		else:
			quickfix.DoubleField.__init__(self, 697, data)

class YieldRedemptionPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 698)
		else:
			quickfix.IntField.__init__(self, 698, data)

class BenchmarkSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 699)
		else:
			quickfix.StringField.__init__(self, 699, data)

class ReversalIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 700)
		else:
			quickfix.BoolField.__init__(self, 700, data)

class YieldCalcDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 701)
		else:
			quickfix.StringField.__init__(self, 701, data)

class NoPositions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 702)
		else:
			quickfix.IntField.__init__(self, 702, data)

class PosType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 703)
		else:
			quickfix.StringField.__init__(self, 703, data)

class LongQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 704)
		else:
			quickfix.DoubleField.__init__(self, 704, data)

class ShortQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 705)
		else:
			quickfix.DoubleField.__init__(self, 705, data)

class PosQtyStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 706)
		else:
			quickfix.IntField.__init__(self, 706, data)

class PosAmtType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 707)
		else:
			quickfix.StringField.__init__(self, 707, data)

class PosAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 708)
		else:
			quickfix.DoubleField.__init__(self, 708, data)

class PosTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 709)
		else:
			quickfix.IntField.__init__(self, 709, data)

class PosReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 710)
		else:
			quickfix.StringField.__init__(self, 710, data)

class NoUnderlyings(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 711)
		else:
			quickfix.IntField.__init__(self, 711, data)

class PosMaintAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 712)
		else:
			quickfix.IntField.__init__(self, 712, data)

class OrigPosReqRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 713)
		else:
			quickfix.StringField.__init__(self, 713, data)

class PosMaintRptRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 714)
		else:
			quickfix.StringField.__init__(self, 714, data)

class ClearingBusinessDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 715)
		else:
			quickfix.StringField.__init__(self, 715, data)

class SettlSessID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 716)
		else:
			quickfix.StringField.__init__(self, 716, data)

class SettlSessSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 717)
		else:
			quickfix.StringField.__init__(self, 717, data)

class AdjustmentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 718)
		else:
			quickfix.IntField.__init__(self, 718, data)

class ContraryInstructionIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 719)
		else:
			quickfix.BoolField.__init__(self, 719, data)

class PriorSpreadIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 720)
		else:
			quickfix.BoolField.__init__(self, 720, data)

class PosMaintRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 721)
		else:
			quickfix.StringField.__init__(self, 721, data)

class PosMaintStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 722)
		else:
			quickfix.IntField.__init__(self, 722, data)

class PosMaintResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 723)
		else:
			quickfix.IntField.__init__(self, 723, data)

class PosReqType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 724)
		else:
			quickfix.IntField.__init__(self, 724, data)

class ResponseTransportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 725)
		else:
			quickfix.IntField.__init__(self, 725, data)

class ResponseDestination(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 726)
		else:
			quickfix.StringField.__init__(self, 726, data)

class TotalNumPosReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 727)
		else:
			quickfix.IntField.__init__(self, 727, data)

class PosReqResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 728)
		else:
			quickfix.IntField.__init__(self, 728, data)

class PosReqStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 729)
		else:
			quickfix.IntField.__init__(self, 729, data)

class SettlPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 730)
		else:
			quickfix.DoubleField.__init__(self, 730, data)

class SettlPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 731)
		else:
			quickfix.IntField.__init__(self, 731, data)

class UnderlyingSettlPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 732)
		else:
			quickfix.DoubleField.__init__(self, 732, data)

class UnderlyingSettlPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 733)
		else:
			quickfix.IntField.__init__(self, 733, data)

class PriorSettlPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 734)
		else:
			quickfix.DoubleField.__init__(self, 734, data)

class NoQuoteQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 735)
		else:
			quickfix.IntField.__init__(self, 735, data)

class AllocSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 736)
		else:
			quickfix.StringField.__init__(self, 736, data)

class AllocSettlCurrAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 737)
		else:
			quickfix.DoubleField.__init__(self, 737, data)

class InterestAtMaturity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 738)
		else:
			quickfix.DoubleField.__init__(self, 738, data)

class LegDatedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 739)
		else:
			quickfix.StringField.__init__(self, 739, data)

class LegPool(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 740)
		else:
			quickfix.StringField.__init__(self, 740, data)

class AllocInterestAtMaturity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 741)
		else:
			quickfix.DoubleField.__init__(self, 741, data)

class AllocAccruedInterestAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 742)
		else:
			quickfix.DoubleField.__init__(self, 742, data)

class DeliveryDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 743)
		else:
			quickfix.StringField.__init__(self, 743, data)

class AssignmentMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 744)
		else:
			quickfix.CharField.__init__(self, 744, data)

class AssignmentUnit(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 745)
		else:
			quickfix.DoubleField.__init__(self, 745, data)

class OpenInterest(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 746)
		else:
			quickfix.DoubleField.__init__(self, 746, data)

class ExerciseMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 747)
		else:
			quickfix.CharField.__init__(self, 747, data)

class TotNumTradeReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 748)
		else:
			quickfix.IntField.__init__(self, 748, data)

class TradeRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 749)
		else:
			quickfix.IntField.__init__(self, 749, data)

class TradeRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 750)
		else:
			quickfix.IntField.__init__(self, 750, data)

class TradeReportRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 751)
		else:
			quickfix.IntField.__init__(self, 751, data)

class SideMultiLegReportingType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 752)
		else:
			quickfix.IntField.__init__(self, 752, data)

class NoPosAmt(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 753)
		else:
			quickfix.IntField.__init__(self, 753, data)

class AutoAcceptIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 754)
		else:
			quickfix.BoolField.__init__(self, 754, data)

class AllocReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 755)
		else:
			quickfix.StringField.__init__(self, 755, data)

class NoNested2PartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 756)
		else:
			quickfix.IntField.__init__(self, 756, data)

class Nested2PartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 757)
		else:
			quickfix.StringField.__init__(self, 757, data)

class Nested2PartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 758)
		else:
			quickfix.CharField.__init__(self, 758, data)

class Nested2PartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 759)
		else:
			quickfix.IntField.__init__(self, 759, data)

class Nested2PartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 760)
		else:
			quickfix.StringField.__init__(self, 760, data)

class BenchmarkSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 761)
		else:
			quickfix.StringField.__init__(self, 761, data)

class SecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 762)
		else:
			quickfix.StringField.__init__(self, 762, data)

class UnderlyingSecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 763)
		else:
			quickfix.StringField.__init__(self, 763, data)

class LegSecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 764)
		else:
			quickfix.StringField.__init__(self, 764, data)

class AllowableOneSidednessPct(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 765)
		else:
			quickfix.DoubleField.__init__(self, 765, data)

class AllowableOneSidednessValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 766)
		else:
			quickfix.DoubleField.__init__(self, 766, data)

class AllowableOneSidednessCurr(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 767)
		else:
			quickfix.StringField.__init__(self, 767, data)

class NoTrdRegTimestamps(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 768)
		else:
			quickfix.IntField.__init__(self, 768, data)

class TrdRegTimestamp(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 769)
		else:
			quickfix.UtcTimeStampField.__init__(self, 769, data)

class TrdRegTimestampType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 770)
		else:
			quickfix.IntField.__init__(self, 770, data)

class TrdRegTimestampOrigin(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 771)
		else:
			quickfix.StringField.__init__(self, 771, data)

class ConfirmRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 772)
		else:
			quickfix.StringField.__init__(self, 772, data)

class ConfirmType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 773)
		else:
			quickfix.IntField.__init__(self, 773, data)

class ConfirmRejReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 774)
		else:
			quickfix.IntField.__init__(self, 774, data)

class BookingType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 775)
		else:
			quickfix.IntField.__init__(self, 775, data)

class IndividualAllocRejCode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 776)
		else:
			quickfix.IntField.__init__(self, 776, data)

class SettlInstMsgID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 777)
		else:
			quickfix.StringField.__init__(self, 777, data)

class NoSettlInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 778)
		else:
			quickfix.IntField.__init__(self, 778, data)

class LastUpdateTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 779)
		else:
			quickfix.UtcTimeStampField.__init__(self, 779, data)

class AllocSettlInstType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 780)
		else:
			quickfix.IntField.__init__(self, 780, data)

class NoSettlPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 781)
		else:
			quickfix.IntField.__init__(self, 781, data)

class SettlPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 782)
		else:
			quickfix.StringField.__init__(self, 782, data)

class SettlPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 783)
		else:
			quickfix.CharField.__init__(self, 783, data)

class SettlPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 784)
		else:
			quickfix.IntField.__init__(self, 784, data)

class SettlPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 785)
		else:
			quickfix.StringField.__init__(self, 785, data)

class SettlPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 786)
		else:
			quickfix.IntField.__init__(self, 786, data)

class DlvyInstType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 787)
		else:
			quickfix.CharField.__init__(self, 787, data)

class TerminationType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 788)
		else:
			quickfix.IntField.__init__(self, 788, data)

class OrdStatusReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 790)
		else:
			quickfix.StringField.__init__(self, 790, data)

class SettlInstReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 791)
		else:
			quickfix.StringField.__init__(self, 791, data)

class SettlInstReqRejCode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 792)
		else:
			quickfix.IntField.__init__(self, 792, data)

class SecondaryAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 793)
		else:
			quickfix.StringField.__init__(self, 793, data)

class AllocReportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 794)
		else:
			quickfix.IntField.__init__(self, 794, data)

class AllocReportRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 795)
		else:
			quickfix.StringField.__init__(self, 795, data)

class AllocCancReplaceReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 796)
		else:
			quickfix.IntField.__init__(self, 796, data)

class CopyMsgIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 797)
		else:
			quickfix.BoolField.__init__(self, 797, data)

class AllocAccountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 798)
		else:
			quickfix.IntField.__init__(self, 798, data)

class OrderAvgPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 799)
		else:
			quickfix.DoubleField.__init__(self, 799, data)

class OrderBookingQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 800)
		else:
			quickfix.DoubleField.__init__(self, 800, data)

class NoSettlPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 801)
		else:
			quickfix.IntField.__init__(self, 801, data)

class NoPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 802)
		else:
			quickfix.IntField.__init__(self, 802, data)

class PartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 803)
		else:
			quickfix.IntField.__init__(self, 803, data)

class NoNestedPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 804)
		else:
			quickfix.IntField.__init__(self, 804, data)

class NestedPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 805)
		else:
			quickfix.IntField.__init__(self, 805, data)

class NoNested2PartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 806)
		else:
			quickfix.IntField.__init__(self, 806, data)

class Nested2PartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 807)
		else:
			quickfix.IntField.__init__(self, 807, data)

class AllocIntermedReqType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 808)
		else:
			quickfix.IntField.__init__(self, 808, data)

class UnderlyingPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 810)
		else:
			quickfix.DoubleField.__init__(self, 810, data)

class PriceDelta(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 811)
		else:
			quickfix.DoubleField.__init__(self, 811, data)

class ApplQueueMax(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 812)
		else:
			quickfix.IntField.__init__(self, 812, data)

class ApplQueueDepth(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 813)
		else:
			quickfix.IntField.__init__(self, 813, data)

class ApplQueueResolution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 814)
		else:
			quickfix.IntField.__init__(self, 814, data)

class ApplQueueAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 815)
		else:
			quickfix.IntField.__init__(self, 815, data)

class NoAltMDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 816)
		else:
			quickfix.IntField.__init__(self, 816, data)

class AltMDSourceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 817)
		else:
			quickfix.StringField.__init__(self, 817, data)

class SecondaryTradeReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 818)
		else:
			quickfix.StringField.__init__(self, 818, data)

class AvgPxIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 819)
		else:
			quickfix.IntField.__init__(self, 819, data)

class TradeLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 820)
		else:
			quickfix.StringField.__init__(self, 820, data)

class OrderInputDevice(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 821)
		else:
			quickfix.StringField.__init__(self, 821, data)

class UnderlyingTradingSessionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 822)
		else:
			quickfix.StringField.__init__(self, 822, data)

class UnderlyingTradingSessionSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 823)
		else:
			quickfix.StringField.__init__(self, 823, data)

class TradeLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 824)
		else:
			quickfix.StringField.__init__(self, 824, data)

class ExchangeRule(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 825)
		else:
			quickfix.StringField.__init__(self, 825, data)

class TradeAllocIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 826)
		else:
			quickfix.IntField.__init__(self, 826, data)

class ExpirationCycle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 827)
		else:
			quickfix.IntField.__init__(self, 827, data)

class TrdType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 828)
		else:
			quickfix.IntField.__init__(self, 828, data)

class TrdSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 829)
		else:
			quickfix.IntField.__init__(self, 829, data)

class TransferReason(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 830)
		else:
			quickfix.StringField.__init__(self, 830, data)

class TotNumAssignmentReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 832)
		else:
			quickfix.IntField.__init__(self, 832, data)

class AsgnRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 833)
		else:
			quickfix.StringField.__init__(self, 833, data)

class ThresholdAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 834)
		else:
			quickfix.DoubleField.__init__(self, 834, data)

class PegMoveType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 835)
		else:
			quickfix.IntField.__init__(self, 835, data)

class PegOffsetType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 836)
		else:
			quickfix.IntField.__init__(self, 836, data)

class PegLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 837)
		else:
			quickfix.IntField.__init__(self, 837, data)

class PegRoundDirection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 838)
		else:
			quickfix.IntField.__init__(self, 838, data)

class PeggedPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 839)
		else:
			quickfix.DoubleField.__init__(self, 839, data)

class PegScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 840)
		else:
			quickfix.IntField.__init__(self, 840, data)

class DiscretionMoveType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 841)
		else:
			quickfix.IntField.__init__(self, 841, data)

class DiscretionOffsetType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 842)
		else:
			quickfix.IntField.__init__(self, 842, data)

class DiscretionLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 843)
		else:
			quickfix.IntField.__init__(self, 843, data)

class DiscretionRoundDirection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 844)
		else:
			quickfix.IntField.__init__(self, 844, data)

class DiscretionPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 845)
		else:
			quickfix.DoubleField.__init__(self, 845, data)

class DiscretionScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 846)
		else:
			quickfix.IntField.__init__(self, 846, data)

class TargetStrategy(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 847)
		else:
			quickfix.IntField.__init__(self, 847, data)

class TargetStrategyParameters(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 848)
		else:
			quickfix.StringField.__init__(self, 848, data)

class ParticipationRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 849)
		else:
			quickfix.DoubleField.__init__(self, 849, data)

class TargetStrategyPerformance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 850)
		else:
			quickfix.DoubleField.__init__(self, 850, data)

class LastLiquidityInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 851)
		else:
			quickfix.IntField.__init__(self, 851, data)

class PublishTrdIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 852)
		else:
			quickfix.BoolField.__init__(self, 852, data)

class ShortSaleReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 853)
		else:
			quickfix.IntField.__init__(self, 853, data)

class QtyType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 854)
		else:
			quickfix.IntField.__init__(self, 854, data)

class SecondaryTrdType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 855)
		else:
			quickfix.IntField.__init__(self, 855, data)

class TradeReportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 856)
		else:
			quickfix.IntField.__init__(self, 856, data)

class AllocNoOrdersType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 857)
		else:
			quickfix.IntField.__init__(self, 857, data)

class SharedCommission(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 858)
		else:
			quickfix.DoubleField.__init__(self, 858, data)

class ConfirmReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 859)
		else:
			quickfix.StringField.__init__(self, 859, data)

class AvgParPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 860)
		else:
			quickfix.DoubleField.__init__(self, 860, data)

class ReportedPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 861)
		else:
			quickfix.DoubleField.__init__(self, 861, data)

class NoCapacities(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 862)
		else:
			quickfix.IntField.__init__(self, 862, data)

class OrderCapacityQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 863)
		else:
			quickfix.DoubleField.__init__(self, 863, data)

class NoEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 864)
		else:
			quickfix.IntField.__init__(self, 864, data)

class EventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 865)
		else:
			quickfix.IntField.__init__(self, 865, data)

class EventDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 866)
		else:
			quickfix.StringField.__init__(self, 866, data)

class EventPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 867)
		else:
			quickfix.DoubleField.__init__(self, 867, data)

class EventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 868)
		else:
			quickfix.StringField.__init__(self, 868, data)

class PctAtRisk(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 869)
		else:
			quickfix.DoubleField.__init__(self, 869, data)

class NoInstrAttrib(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 870)
		else:
			quickfix.IntField.__init__(self, 870, data)

class InstrAttribType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 871)
		else:
			quickfix.IntField.__init__(self, 871, data)

class InstrAttribValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 872)
		else:
			quickfix.StringField.__init__(self, 872, data)

class DatedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 873)
		else:
			quickfix.StringField.__init__(self, 873, data)

class InterestAccrualDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 874)
		else:
			quickfix.StringField.__init__(self, 874, data)

class CPProgram(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 875)
		else:
			quickfix.IntField.__init__(self, 875, data)

class CPRegType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 876)
		else:
			quickfix.StringField.__init__(self, 876, data)

class UnderlyingCPProgram(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 877)
		else:
			quickfix.IntField.__init__(self, 877, data)

class UnderlyingCPRegType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 878)
		else:
			quickfix.StringField.__init__(self, 878, data)

class UnderlyingQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 879)
		else:
			quickfix.DoubleField.__init__(self, 879, data)

class TrdMatchID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 880)
		else:
			quickfix.StringField.__init__(self, 880, data)

class SecondaryTradeReportRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 881)
		else:
			quickfix.StringField.__init__(self, 881, data)

class UnderlyingDirtyPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 882)
		else:
			quickfix.DoubleField.__init__(self, 882, data)

class UnderlyingEndPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 883)
		else:
			quickfix.DoubleField.__init__(self, 883, data)

class UnderlyingStartValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 884)
		else:
			quickfix.DoubleField.__init__(self, 884, data)

class UnderlyingCurrentValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 885)
		else:
			quickfix.DoubleField.__init__(self, 885, data)

class UnderlyingEndValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 886)
		else:
			quickfix.DoubleField.__init__(self, 886, data)

class NoUnderlyingStips(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 887)
		else:
			quickfix.IntField.__init__(self, 887, data)

class UnderlyingStipType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 888)
		else:
			quickfix.StringField.__init__(self, 888, data)

class UnderlyingStipValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 889)
		else:
			quickfix.StringField.__init__(self, 889, data)

class MaturityNetMoney(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 890)
		else:
			quickfix.DoubleField.__init__(self, 890, data)

class MiscFeeBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 891)
		else:
			quickfix.IntField.__init__(self, 891, data)

class TotNoAllocs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 892)
		else:
			quickfix.IntField.__init__(self, 892, data)

class LastFragment(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 893)
		else:
			quickfix.BoolField.__init__(self, 893, data)

class CollReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 894)
		else:
			quickfix.StringField.__init__(self, 894, data)

class CollAsgnReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 895)
		else:
			quickfix.IntField.__init__(self, 895, data)

class CollInquiryQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 896)
		else:
			quickfix.IntField.__init__(self, 896, data)

class NoTrades(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 897)
		else:
			quickfix.IntField.__init__(self, 897, data)

class MarginRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 898)
		else:
			quickfix.DoubleField.__init__(self, 898, data)

class MarginExcess(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 899)
		else:
			quickfix.DoubleField.__init__(self, 899, data)

class TotalNetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 900)
		else:
			quickfix.DoubleField.__init__(self, 900, data)

class CashOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 901)
		else:
			quickfix.DoubleField.__init__(self, 901, data)

class CollAsgnID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 902)
		else:
			quickfix.StringField.__init__(self, 902, data)

class CollAsgnTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 903)
		else:
			quickfix.IntField.__init__(self, 903, data)

class CollRespID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 904)
		else:
			quickfix.StringField.__init__(self, 904, data)

class CollAsgnRespType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 905)
		else:
			quickfix.IntField.__init__(self, 905, data)

class CollAsgnRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 906)
		else:
			quickfix.IntField.__init__(self, 906, data)

class CollAsgnRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 907)
		else:
			quickfix.StringField.__init__(self, 907, data)

class CollRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 908)
		else:
			quickfix.StringField.__init__(self, 908, data)

class CollInquiryID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 909)
		else:
			quickfix.StringField.__init__(self, 909, data)

class CollStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 910)
		else:
			quickfix.IntField.__init__(self, 910, data)

class TotNumReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 911)
		else:
			quickfix.IntField.__init__(self, 911, data)

class LastRptRequested(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 912)
		else:
			quickfix.BoolField.__init__(self, 912, data)

class AgreementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 913)
		else:
			quickfix.StringField.__init__(self, 913, data)

class AgreementID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 914)
		else:
			quickfix.StringField.__init__(self, 914, data)

class AgreementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 915)
		else:
			quickfix.StringField.__init__(self, 915, data)

class StartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 916)
		else:
			quickfix.StringField.__init__(self, 916, data)

class EndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 917)
		else:
			quickfix.StringField.__init__(self, 917, data)

class AgreementCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 918)
		else:
			quickfix.StringField.__init__(self, 918, data)

class DeliveryType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 919)
		else:
			quickfix.IntField.__init__(self, 919, data)

class EndAccruedInterestAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 920)
		else:
			quickfix.DoubleField.__init__(self, 920, data)

class StartCash(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 921)
		else:
			quickfix.DoubleField.__init__(self, 921, data)

class EndCash(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 922)
		else:
			quickfix.DoubleField.__init__(self, 922, data)

class UserRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 923)
		else:
			quickfix.StringField.__init__(self, 923, data)

class UserRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 924)
		else:
			quickfix.IntField.__init__(self, 924, data)

class UserStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 926)
		else:
			quickfix.IntField.__init__(self, 926, data)

class UserStatusText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 927)
		else:
			quickfix.StringField.__init__(self, 927, data)

class StatusValue(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 928)
		else:
			quickfix.IntField.__init__(self, 928, data)

class StatusText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 929)
		else:
			quickfix.StringField.__init__(self, 929, data)

class RefCompID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 930)
		else:
			quickfix.StringField.__init__(self, 930, data)

class RefSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 931)
		else:
			quickfix.StringField.__init__(self, 931, data)

class NetworkResponseID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 932)
		else:
			quickfix.StringField.__init__(self, 932, data)

class NetworkRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 933)
		else:
			quickfix.StringField.__init__(self, 933, data)

class LastNetworkResponseID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 934)
		else:
			quickfix.StringField.__init__(self, 934, data)

class NetworkRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 935)
		else:
			quickfix.IntField.__init__(self, 935, data)

class NoCompIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 936)
		else:
			quickfix.IntField.__init__(self, 936, data)

class NetworkStatusResponseType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 937)
		else:
			quickfix.IntField.__init__(self, 937, data)

class NoCollInquiryQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 938)
		else:
			quickfix.IntField.__init__(self, 938, data)

class TrdRptStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 939)
		else:
			quickfix.IntField.__init__(self, 939, data)

class AffirmStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 940)
		else:
			quickfix.IntField.__init__(self, 940, data)

class UnderlyingStrikeCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 941)
		else:
			quickfix.StringField.__init__(self, 941, data)

class LegStrikeCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 942)
		else:
			quickfix.StringField.__init__(self, 942, data)

class TimeBracket(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 943)
		else:
			quickfix.StringField.__init__(self, 943, data)

class CollAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 944)
		else:
			quickfix.IntField.__init__(self, 944, data)

class CollInquiryStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 945)
		else:
			quickfix.IntField.__init__(self, 945, data)

class CollInquiryResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 946)
		else:
			quickfix.IntField.__init__(self, 946, data)

class StrikeCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 947)
		else:
			quickfix.StringField.__init__(self, 947, data)

class NoNested3PartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 948)
		else:
			quickfix.IntField.__init__(self, 948, data)

class Nested3PartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 949)
		else:
			quickfix.StringField.__init__(self, 949, data)

class Nested3PartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 950)
		else:
			quickfix.CharField.__init__(self, 950, data)

class Nested3PartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 951)
		else:
			quickfix.IntField.__init__(self, 951, data)

class NoNested3PartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 952)
		else:
			quickfix.IntField.__init__(self, 952, data)

class Nested3PartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 953)
		else:
			quickfix.StringField.__init__(self, 953, data)

class Nested3PartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 954)
		else:
			quickfix.IntField.__init__(self, 954, data)

class LegContractSettlMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 955)
		else:
			quickfix.StringField.__init__(self, 955, data)

class LegInterestAccrualDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 956)
		else:
			quickfix.StringField.__init__(self, 956, data)

class LegOrderQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 685)
		else:
			quickfix.DoubleField.__init__(self, 685, data)

class NoStrategyParameters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 957)
		else:
			quickfix.IntField.__init__(self, 957, data)

class StrategyParameterName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 958)
		else:
			quickfix.StringField.__init__(self, 958, data)

class StrategyParameterType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 959)
		else:
			quickfix.IntField.__init__(self, 959, data)

class StrategyParameterValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 960)
		else:
			quickfix.StringField.__init__(self, 960, data)

class HostCrossID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 961)
		else:
			quickfix.StringField.__init__(self, 961, data)

class SideTimeInForce(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 962)
		else:
			quickfix.UtcTimeStampField.__init__(self, 962, data)

class MDReportID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 963)
		else:
			quickfix.IntField.__init__(self, 963, data)

class SecurityReportID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 964)
		else:
			quickfix.IntField.__init__(self, 964, data)

class SecurityStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 965)
		else:
			quickfix.StringField.__init__(self, 965, data)

class SettleOnOpenFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 966)
		else:
			quickfix.StringField.__init__(self, 966, data)

class StrikeMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 967)
		else:
			quickfix.DoubleField.__init__(self, 967, data)

class StrikeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 968)
		else:
			quickfix.DoubleField.__init__(self, 968, data)

class MinPriceIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 969)
		else:
			quickfix.DoubleField.__init__(self, 969, data)

class PositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 970)
		else:
			quickfix.IntField.__init__(self, 970, data)

class NTPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 971)
		else:
			quickfix.IntField.__init__(self, 971, data)

class UnderlyingAllocationPercent(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 972)
		else:
			quickfix.DoubleField.__init__(self, 972, data)

class UnderlyingCashAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 973)
		else:
			quickfix.DoubleField.__init__(self, 973, data)

class UnderlyingCashType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 974)
		else:
			quickfix.StringField.__init__(self, 974, data)

class UnderlyingSettlementType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 975)
		else:
			quickfix.IntField.__init__(self, 975, data)

class QuantityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 976)
		else:
			quickfix.StringField.__init__(self, 976, data)

class ContIntRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 977)
		else:
			quickfix.StringField.__init__(self, 977, data)

class LateIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 978)
		else:
			quickfix.BoolField.__init__(self, 978, data)

class InputSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 979)
		else:
			quickfix.StringField.__init__(self, 979, data)

class SecurityUpdateAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 980)
		else:
			quickfix.CharField.__init__(self, 980, data)

class NoExpiration(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 981)
		else:
			quickfix.IntField.__init__(self, 981, data)

class ExpType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 982)
		else:
			quickfix.IntField.__init__(self, 982, data)

class ExpQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 983)
		else:
			quickfix.DoubleField.__init__(self, 983, data)

class NoUnderlyingAmounts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 984)
		else:
			quickfix.IntField.__init__(self, 984, data)

class UnderlyingPayAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 985)
		else:
			quickfix.DoubleField.__init__(self, 985, data)

class UnderlyingCollectAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 986)
		else:
			quickfix.DoubleField.__init__(self, 986, data)

class UnderlyingSettlementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 987)
		else:
			quickfix.StringField.__init__(self, 987, data)

class UnderlyingSettlementStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 988)
		else:
			quickfix.StringField.__init__(self, 988, data)

class SecondaryIndividualAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 989)
		else:
			quickfix.StringField.__init__(self, 989, data)

class LegReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 990)
		else:
			quickfix.StringField.__init__(self, 990, data)

class RndPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 991)
		else:
			quickfix.DoubleField.__init__(self, 991, data)

class IndividualAllocType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 992)
		else:
			quickfix.IntField.__init__(self, 992, data)

class AllocCustomerCapacity(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 993)
		else:
			quickfix.StringField.__init__(self, 993, data)

class TierCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 994)
		else:
			quickfix.StringField.__init__(self, 994, data)

class UnitofMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 996)
		else:
			quickfix.StringField.__init__(self, 996, data)

class TimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 997)
		else:
			quickfix.StringField.__init__(self, 997, data)

class UnderlyingUnitofMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 998)
		else:
			quickfix.StringField.__init__(self, 998, data)

class LegUnitofMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 999)
		else:
			quickfix.StringField.__init__(self, 999, data)

class UnderlyingTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1000)
		else:
			quickfix.StringField.__init__(self, 1000, data)

class LegTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1001)
		else:
			quickfix.StringField.__init__(self, 1001, data)

class AllocMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1002)
		else:
			quickfix.IntField.__init__(self, 1002, data)

class TradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1003)
		else:
			quickfix.StringField.__init__(self, 1003, data)

class SideTradeReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1005)
		else:
			quickfix.StringField.__init__(self, 1005, data)

class SideFillStationCd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1006)
		else:
			quickfix.StringField.__init__(self, 1006, data)

class SideReasonCd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1007)
		else:
			quickfix.StringField.__init__(self, 1007, data)

class SideTrdSubTyp(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1008)
		else:
			quickfix.IntField.__init__(self, 1008, data)

class SideQty(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1009)
		else:
			quickfix.IntField.__init__(self, 1009, data)

class MessageEventSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1011)
		else:
			quickfix.StringField.__init__(self, 1011, data)

class SideTrdRegTimestamp(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1012)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1012, data)

class SideTrdRegTimestampType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1013)
		else:
			quickfix.IntField.__init__(self, 1013, data)

class SideTrdRegTimestampSrc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1014)
		else:
			quickfix.StringField.__init__(self, 1014, data)

class AsOfIndicator(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1015)
		else:
			quickfix.CharField.__init__(self, 1015, data)

class NoSideTrdRegTS(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1016)
		else:
			quickfix.IntField.__init__(self, 1016, data)

class LegOptionRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1017)
		else:
			quickfix.DoubleField.__init__(self, 1017, data)

class NoInstrumentParties(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1018)
		else:
			quickfix.IntField.__init__(self, 1018, data)

class InstrumentPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1019)
		else:
			quickfix.StringField.__init__(self, 1019, data)

class TradeVolume(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1020)
		else:
			quickfix.DoubleField.__init__(self, 1020, data)

class MDBookType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1021)
		else:
			quickfix.IntField.__init__(self, 1021, data)

class MDFeedType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1022)
		else:
			quickfix.StringField.__init__(self, 1022, data)

class MDPriceLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1023)
		else:
			quickfix.IntField.__init__(self, 1023, data)

class MDOriginType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1024)
		else:
			quickfix.IntField.__init__(self, 1024, data)

class FirstPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1025)
		else:
			quickfix.DoubleField.__init__(self, 1025, data)

class MDEntrySpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1026)
		else:
			quickfix.DoubleField.__init__(self, 1026, data)

class MDEntryForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1027)
		else:
			quickfix.DoubleField.__init__(self, 1027, data)

class ManualOrderIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1028)
		else:
			quickfix.BoolField.__init__(self, 1028, data)

class CustDirectedOrder(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1029)
		else:
			quickfix.BoolField.__init__(self, 1029, data)

class ReceivedDeptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1030)
		else:
			quickfix.StringField.__init__(self, 1030, data)

class CustOrderHandlingInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1031)
		else:
			quickfix.StringField.__init__(self, 1031, data)

class OrderHandlingInstSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1032)
		else:
			quickfix.IntField.__init__(self, 1032, data)

class DeskType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1033)
		else:
			quickfix.StringField.__init__(self, 1033, data)

class DeskTypeSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1034)
		else:
			quickfix.IntField.__init__(self, 1034, data)

class DeskOrderHandlingInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1035)
		else:
			quickfix.StringField.__init__(self, 1035, data)

class ExecAckStatus(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1036)
		else:
			quickfix.CharField.__init__(self, 1036, data)

class UnderlyingDeliveryAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1037)
		else:
			quickfix.DoubleField.__init__(self, 1037, data)

class UnderlyingCapValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1038)
		else:
			quickfix.DoubleField.__init__(self, 1038, data)

class UnderlyingSettlMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1039)
		else:
			quickfix.StringField.__init__(self, 1039, data)

class SecondaryTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1040)
		else:
			quickfix.StringField.__init__(self, 1040, data)

class FirmTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1041)
		else:
			quickfix.StringField.__init__(self, 1041, data)

class SecondaryFirmTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1042)
		else:
			quickfix.StringField.__init__(self, 1042, data)

class CollApplType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1043)
		else:
			quickfix.IntField.__init__(self, 1043, data)

class UnderlyingAdjustedQuantity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1044)
		else:
			quickfix.DoubleField.__init__(self, 1044, data)

class UnderlyingFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1045)
		else:
			quickfix.DoubleField.__init__(self, 1045, data)

class UnderlyingFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1046)
		else:
			quickfix.CharField.__init__(self, 1046, data)

class AllocPositionEffect(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1047)
		else:
			quickfix.CharField.__init__(self, 1047, data)

class DealingCapacity(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1048)
		else:
			quickfix.CharField.__init__(self, 1048, data)

class InstrmtAssignmentMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1049)
		else:
			quickfix.CharField.__init__(self, 1049, data)

class InstrumentPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1050)
		else:
			quickfix.CharField.__init__(self, 1050, data)

class InstrumentPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1051)
		else:
			quickfix.IntField.__init__(self, 1051, data)

class NoInstrumentPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1052)
		else:
			quickfix.IntField.__init__(self, 1052, data)

class InstrumentPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1053)
		else:
			quickfix.StringField.__init__(self, 1053, data)

class InstrumentPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1054)
		else:
			quickfix.IntField.__init__(self, 1054, data)

class PositionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1055)
		else:
			quickfix.StringField.__init__(self, 1055, data)

class CalculatedCcyLastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1056)
		else:
			quickfix.DoubleField.__init__(self, 1056, data)

class AggressorIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1057)
		else:
			quickfix.BoolField.__init__(self, 1057, data)

class NoUndlyInstrumentParties(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1058)
		else:
			quickfix.IntField.__init__(self, 1058, data)

class UndlyInstrumentPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1059)
		else:
			quickfix.StringField.__init__(self, 1059, data)

class UndlyInstrumentPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1060)
		else:
			quickfix.CharField.__init__(self, 1060, data)

class UndlyInstrumentPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1061)
		else:
			quickfix.IntField.__init__(self, 1061, data)

class NoUndlyInstrumentPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1062)
		else:
			quickfix.IntField.__init__(self, 1062, data)

class UndlyInstrumentPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1063)
		else:
			quickfix.StringField.__init__(self, 1063, data)

class UndlyInstrumentPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1064)
		else:
			quickfix.IntField.__init__(self, 1064, data)

class BidSwapPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1065)
		else:
			quickfix.DoubleField.__init__(self, 1065, data)

class OfferSwapPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1066)
		else:
			quickfix.DoubleField.__init__(self, 1066, data)

class LegBidForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1067)
		else:
			quickfix.DoubleField.__init__(self, 1067, data)

class LegOfferForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1068)
		else:
			quickfix.DoubleField.__init__(self, 1068, data)

class SwapPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1069)
		else:
			quickfix.DoubleField.__init__(self, 1069, data)

class MDQuoteType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1070)
		else:
			quickfix.IntField.__init__(self, 1070, data)

class LastSwapPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1071)
		else:
			quickfix.DoubleField.__init__(self, 1071, data)

class SideGrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1072)
		else:
			quickfix.DoubleField.__init__(self, 1072, data)

class LegLastForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1073)
		else:
			quickfix.DoubleField.__init__(self, 1073, data)

class LegCalculatedCcyLastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1074)
		else:
			quickfix.DoubleField.__init__(self, 1074, data)

class LegGrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1075)
		else:
			quickfix.DoubleField.__init__(self, 1075, data)

class MaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1079)
		else:
			quickfix.StringField.__init__(self, 1079, data)

class RefOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1080)
		else:
			quickfix.StringField.__init__(self, 1080, data)

class RefOrderIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1081)
		else:
			quickfix.CharField.__init__(self, 1081, data)

class SecondaryDisplayQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1082)
		else:
			quickfix.DoubleField.__init__(self, 1082, data)

class DisplayWhen(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1083)
		else:
			quickfix.CharField.__init__(self, 1083, data)

class DisplayMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1084)
		else:
			quickfix.CharField.__init__(self, 1084, data)

class DisplayLowQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1085)
		else:
			quickfix.DoubleField.__init__(self, 1085, data)

class DisplayHighQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1086)
		else:
			quickfix.DoubleField.__init__(self, 1086, data)

class DisplayMinIncr(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1087)
		else:
			quickfix.DoubleField.__init__(self, 1087, data)

class RefreshQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1088)
		else:
			quickfix.DoubleField.__init__(self, 1088, data)

class MatchIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1089)
		else:
			quickfix.DoubleField.__init__(self, 1089, data)

class MaxPriceLevels(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1090)
		else:
			quickfix.IntField.__init__(self, 1090, data)

class PreTradeAnonymity(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1091)
		else:
			quickfix.BoolField.__init__(self, 1091, data)

class PriceProtectionScope(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1092)
		else:
			quickfix.CharField.__init__(self, 1092, data)

class LotType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1093)
		else:
			quickfix.CharField.__init__(self, 1093, data)

class PegPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1094)
		else:
			quickfix.IntField.__init__(self, 1094, data)

class PeggedRefPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1095)
		else:
			quickfix.DoubleField.__init__(self, 1095, data)

class PegSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1096)
		else:
			quickfix.StringField.__init__(self, 1096, data)

class PegSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1097)
		else:
			quickfix.StringField.__init__(self, 1097, data)

class PegSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1098)
		else:
			quickfix.StringField.__init__(self, 1098, data)

class PegSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1099)
		else:
			quickfix.StringField.__init__(self, 1099, data)

class TriggerType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1100)
		else:
			quickfix.CharField.__init__(self, 1100, data)

class TriggerAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1101)
		else:
			quickfix.CharField.__init__(self, 1101, data)

class TriggerPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1102)
		else:
			quickfix.DoubleField.__init__(self, 1102, data)

class TriggerSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1103)
		else:
			quickfix.StringField.__init__(self, 1103, data)

class TriggerSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1104)
		else:
			quickfix.StringField.__init__(self, 1104, data)

class TriggerSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1105)
		else:
			quickfix.StringField.__init__(self, 1105, data)

class TriggerSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1106)
		else:
			quickfix.StringField.__init__(self, 1106, data)

class TriggerPriceType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1107)
		else:
			quickfix.CharField.__init__(self, 1107, data)

class TriggerPriceTypeScope(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1108)
		else:
			quickfix.CharField.__init__(self, 1108, data)

class TriggerPriceDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1109)
		else:
			quickfix.CharField.__init__(self, 1109, data)

class TriggerNewPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1110)
		else:
			quickfix.DoubleField.__init__(self, 1110, data)

class TriggerOrderType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1111)
		else:
			quickfix.CharField.__init__(self, 1111, data)

class TriggerNewQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1112)
		else:
			quickfix.DoubleField.__init__(self, 1112, data)

class TriggerTradingSessionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1113)
		else:
			quickfix.StringField.__init__(self, 1113, data)

class TriggerTradingSessionSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1114)
		else:
			quickfix.StringField.__init__(self, 1114, data)

class OrderCategory(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1115)
		else:
			quickfix.CharField.__init__(self, 1115, data)

class NoRootPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1116)
		else:
			quickfix.IntField.__init__(self, 1116, data)

class RootPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1117)
		else:
			quickfix.StringField.__init__(self, 1117, data)

class RootPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1118)
		else:
			quickfix.CharField.__init__(self, 1118, data)

class RootPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1119)
		else:
			quickfix.IntField.__init__(self, 1119, data)

class NoRootPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1120)
		else:
			quickfix.IntField.__init__(self, 1120, data)

class RootPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1121)
		else:
			quickfix.StringField.__init__(self, 1121, data)

class RootPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1122)
		else:
			quickfix.IntField.__init__(self, 1122, data)

class TradeHandlingInstr(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1123)
		else:
			quickfix.CharField.__init__(self, 1123, data)

class OrigTradeHandlingInstr(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1124)
		else:
			quickfix.CharField.__init__(self, 1124, data)

class OrigTradeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1125)
		else:
			quickfix.StringField.__init__(self, 1125, data)

class OrigTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1126)
		else:
			quickfix.StringField.__init__(self, 1126, data)

class OrigSecondaryTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1127)
		else:
			quickfix.StringField.__init__(self, 1127, data)

class TZTransactTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1132)
		else:
			quickfix.StringField.__init__(self, 1132, data)

class ExDestinationIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1133)
		else:
			quickfix.CharField.__init__(self, 1133, data)

class ReportedPxDiff(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1134)
		else:
			quickfix.BoolField.__init__(self, 1134, data)

class RptSys(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1135)
		else:
			quickfix.StringField.__init__(self, 1135, data)

class AllocClearingFeeIndicator(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1136)
		else:
			quickfix.StringField.__init__(self, 1136, data)

class DisplayQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1138)
		else:
			quickfix.DoubleField.__init__(self, 1138, data)

class ExchangeSpecialInstructions(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1139)
		else:
			quickfix.StringField.__init__(self, 1139, data)

class ExpirationQtyType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 982)
		else:
			quickfix.IntField.__init__(self, 982, data)

class UnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 996)
		else:
			quickfix.StringField.__init__(self, 996, data)

class UnderlyingUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 998)
		else:
			quickfix.StringField.__init__(self, 998, data)

class LegUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 999)
		else:
			quickfix.StringField.__init__(self, 999, data)

class UnderlyingMaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1213)
		else:
			quickfix.StringField.__init__(self, 1213, data)

class LegMaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1212)
		else:
			quickfix.StringField.__init__(self, 1212, data)

class MaxTradeVol(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1140)
		else:
			quickfix.DoubleField.__init__(self, 1140, data)

class NoMDFeedTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1141)
		else:
			quickfix.IntField.__init__(self, 1141, data)

class MatchAlgorithm(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1142)
		else:
			quickfix.StringField.__init__(self, 1142, data)

class MaxPriceVariation(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1143)
		else:
			quickfix.DoubleField.__init__(self, 1143, data)

class ImpliedMarketIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1144)
		else:
			quickfix.IntField.__init__(self, 1144, data)

class EventTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1145)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1145, data)

class MinPriceIncrementAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1146)
		else:
			quickfix.DoubleField.__init__(self, 1146, data)

class UnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1147)
		else:
			quickfix.DoubleField.__init__(self, 1147, data)

class LowLimitPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1148)
		else:
			quickfix.DoubleField.__init__(self, 1148, data)

class HighLimitPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1149)
		else:
			quickfix.DoubleField.__init__(self, 1149, data)

class TradingReferencePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1150)
		else:
			quickfix.DoubleField.__init__(self, 1150, data)

class SecurityGroup(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1151)
		else:
			quickfix.StringField.__init__(self, 1151, data)

class LegNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1152)
		else:
			quickfix.IntField.__init__(self, 1152, data)

class SettlementCycleNo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1153)
		else:
			quickfix.IntField.__init__(self, 1153, data)

class SideCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1154)
		else:
			quickfix.StringField.__init__(self, 1154, data)

class SideSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1155)
		else:
			quickfix.StringField.__init__(self, 1155, data)

class CcyAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1157)
		else:
			quickfix.DoubleField.__init__(self, 1157, data)

class NoSettlDetails(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1158)
		else:
			quickfix.IntField.__init__(self, 1158, data)

class SettlObligMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1159)
		else:
			quickfix.IntField.__init__(self, 1159, data)

class SettlObligMsgID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1160)
		else:
			quickfix.StringField.__init__(self, 1160, data)

class SettlObligID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1161)
		else:
			quickfix.StringField.__init__(self, 1161, data)

class SettlObligTransType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1162)
		else:
			quickfix.CharField.__init__(self, 1162, data)

class SettlObligRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1163)
		else:
			quickfix.StringField.__init__(self, 1163, data)

class SettlObligSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1164)
		else:
			quickfix.CharField.__init__(self, 1164, data)

class NoSettlOblig(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1165)
		else:
			quickfix.IntField.__init__(self, 1165, data)

class QuoteMsgID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1166)
		else:
			quickfix.StringField.__init__(self, 1166, data)

class QuoteEntryStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1167)
		else:
			quickfix.IntField.__init__(self, 1167, data)

class TotNoCxldQuotes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1168)
		else:
			quickfix.IntField.__init__(self, 1168, data)

class TotNoAccQuotes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1169)
		else:
			quickfix.IntField.__init__(self, 1169, data)

class TotNoRejQuotes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1170)
		else:
			quickfix.IntField.__init__(self, 1170, data)

class PrivateQuote(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1171)
		else:
			quickfix.BoolField.__init__(self, 1171, data)

class RespondentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1172)
		else:
			quickfix.IntField.__init__(self, 1172, data)

class MDSubBookType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1173)
		else:
			quickfix.IntField.__init__(self, 1173, data)

class SecurityTradingEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1174)
		else:
			quickfix.IntField.__init__(self, 1174, data)

class NoStatsIndicators(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1175)
		else:
			quickfix.IntField.__init__(self, 1175, data)

class StatsType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1176)
		else:
			quickfix.IntField.__init__(self, 1176, data)

class NoOfSecSizes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1177)
		else:
			quickfix.IntField.__init__(self, 1177, data)

class MDSecSizeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1178)
		else:
			quickfix.IntField.__init__(self, 1178, data)

class MDSecSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1179)
		else:
			quickfix.DoubleField.__init__(self, 1179, data)

class ApplID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1180)
		else:
			quickfix.StringField.__init__(self, 1180, data)

class ApplSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1181)
		else:
			quickfix.IntField.__init__(self, 1181, data)

class ApplBegSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1182)
		else:
			quickfix.IntField.__init__(self, 1182, data)

class ApplEndSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1183)
		else:
			quickfix.IntField.__init__(self, 1183, data)

class SecurityXMLLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1184)
		else:
			quickfix.IntField.__init__(self, 1184, data)

class SecurityXML(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1185)
		else:
			quickfix.StringField.__init__(self, 1185, data)

class SecurityXMLSchema(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1186)
		else:
			quickfix.StringField.__init__(self, 1186, data)

class RefreshIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1187)
		else:
			quickfix.BoolField.__init__(self, 1187, data)

class Volatility(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1188)
		else:
			quickfix.DoubleField.__init__(self, 1188, data)

class TimeToExpiration(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1189)
		else:
			quickfix.DoubleField.__init__(self, 1189, data)

class RiskFreeRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1190)
		else:
			quickfix.DoubleField.__init__(self, 1190, data)

class PriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1191)
		else:
			quickfix.StringField.__init__(self, 1191, data)

class PriceUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1192)
		else:
			quickfix.DoubleField.__init__(self, 1192, data)

class SettlMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1193)
		else:
			quickfix.StringField.__init__(self, 1193, data)

class ExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1194)
		else:
			quickfix.IntField.__init__(self, 1194, data)

class UnderlyingExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1419)
		else:
			quickfix.IntField.__init__(self, 1419, data)

class LegExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1420)
		else:
			quickfix.IntField.__init__(self, 1420, data)

class OptPayAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1195)
		else:
			quickfix.DoubleField.__init__(self, 1195, data)

class PriceQuoteMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1196)
		else:
			quickfix.StringField.__init__(self, 1196, data)

class FuturesValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1197)
		else:
			quickfix.StringField.__init__(self, 1197, data)

class ListMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1198)
		else:
			quickfix.IntField.__init__(self, 1198, data)

class CapPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1199)
		else:
			quickfix.DoubleField.__init__(self, 1199, data)

class FloorPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1200)
		else:
			quickfix.DoubleField.__init__(self, 1200, data)

class NoStrikeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1201)
		else:
			quickfix.IntField.__init__(self, 1201, data)

class StartStrikePxRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1202)
		else:
			quickfix.DoubleField.__init__(self, 1202, data)

class EndStrikePxRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1203)
		else:
			quickfix.DoubleField.__init__(self, 1203, data)

class StrikeIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1204)
		else:
			quickfix.DoubleField.__init__(self, 1204, data)

class NoTickRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1205)
		else:
			quickfix.IntField.__init__(self, 1205, data)

class StartTickPriceRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1206)
		else:
			quickfix.DoubleField.__init__(self, 1206, data)

class EndTickPriceRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1207)
		else:
			quickfix.DoubleField.__init__(self, 1207, data)

class TickIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1208)
		else:
			quickfix.DoubleField.__init__(self, 1208, data)

class TickRuleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1209)
		else:
			quickfix.IntField.__init__(self, 1209, data)

class NestedInstrAttribType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1210)
		else:
			quickfix.IntField.__init__(self, 1210, data)

class NestedInstrAttribValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1211)
		else:
			quickfix.StringField.__init__(self, 1211, data)

class DerivativeSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1214)
		else:
			quickfix.StringField.__init__(self, 1214, data)

class DerivativeSymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1215)
		else:
			quickfix.StringField.__init__(self, 1215, data)

class DerivativeSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1216)
		else:
			quickfix.StringField.__init__(self, 1216, data)

class DerivativeSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1217)
		else:
			quickfix.StringField.__init__(self, 1217, data)

class NoDerivativeSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1218)
		else:
			quickfix.IntField.__init__(self, 1218, data)

class DerivativeSecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1219)
		else:
			quickfix.StringField.__init__(self, 1219, data)

class DerivativeSecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1220)
		else:
			quickfix.StringField.__init__(self, 1220, data)

class SecondaryLowLimitPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1221)
		else:
			quickfix.DoubleField.__init__(self, 1221, data)

class SecondaryHighLimitPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1230)
		else:
			quickfix.DoubleField.__init__(self, 1230, data)

class MaturityRuleID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1222)
		else:
			quickfix.StringField.__init__(self, 1222, data)

class StrikeRuleID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1223)
		else:
			quickfix.StringField.__init__(self, 1223, data)

class DerivativeOptPayAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1225)
		else:
			quickfix.DoubleField.__init__(self, 1225, data)

class EndMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1226)
		else:
			quickfix.StringField.__init__(self, 1226, data)

class ProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1227)
		else:
			quickfix.StringField.__init__(self, 1227, data)

class DerivativeProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1228)
		else:
			quickfix.StringField.__init__(self, 1228, data)

class MaturityMonthYearIncrement(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1229)
		else:
			quickfix.IntField.__init__(self, 1229, data)

class MinLotSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1231)
		else:
			quickfix.DoubleField.__init__(self, 1231, data)

class NoExecInstRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1232)
		else:
			quickfix.IntField.__init__(self, 1232, data)

class NoLotTypeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1234)
		else:
			quickfix.IntField.__init__(self, 1234, data)

class NoMatchRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1235)
		else:
			quickfix.IntField.__init__(self, 1235, data)

class NoMaturityRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1236)
		else:
			quickfix.IntField.__init__(self, 1236, data)

class NoOrdTypeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1237)
		else:
			quickfix.IntField.__init__(self, 1237, data)

class NoTimeInForceRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1239)
		else:
			quickfix.IntField.__init__(self, 1239, data)

class SecondaryTradingReferencePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1240)
		else:
			quickfix.DoubleField.__init__(self, 1240, data)

class StartMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1241)
		else:
			quickfix.StringField.__init__(self, 1241, data)

class FlexProductEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1242)
		else:
			quickfix.BoolField.__init__(self, 1242, data)

class DerivFlexProductEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1243)
		else:
			quickfix.BoolField.__init__(self, 1243, data)

class FlexibleIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1244)
		else:
			quickfix.BoolField.__init__(self, 1244, data)

class TradingCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1245)
		else:
			quickfix.StringField.__init__(self, 1245, data)

class DerivativeProduct(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1246)
		else:
			quickfix.IntField.__init__(self, 1246, data)

class DerivativeSecurityGroup(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1247)
		else:
			quickfix.StringField.__init__(self, 1247, data)

class DerivativeCFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1248)
		else:
			quickfix.StringField.__init__(self, 1248, data)

class DerivativeSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1249)
		else:
			quickfix.StringField.__init__(self, 1249, data)

class DerivativeSecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1250)
		else:
			quickfix.StringField.__init__(self, 1250, data)

class DerivativeMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1251)
		else:
			quickfix.StringField.__init__(self, 1251, data)

class DerivativeMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1252)
		else:
			quickfix.StringField.__init__(self, 1252, data)

class DerivativeMaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1253)
		else:
			quickfix.StringField.__init__(self, 1253, data)

class DerivativeSettleOnOpenFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1254)
		else:
			quickfix.StringField.__init__(self, 1254, data)

class DerivativeInstrmtAssignmentMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1255)
		else:
			quickfix.CharField.__init__(self, 1255, data)

class DerivativeSecurityStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1256)
		else:
			quickfix.StringField.__init__(self, 1256, data)

class DerivativeInstrRegistry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1257)
		else:
			quickfix.StringField.__init__(self, 1257, data)

class DerivativeCountryOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1258)
		else:
			quickfix.StringField.__init__(self, 1258, data)

class DerivativeStateOrProvinceOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1259)
		else:
			quickfix.StringField.__init__(self, 1259, data)

class DerivativeLocaleOfIssue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1260)
		else:
			quickfix.StringField.__init__(self, 1260, data)

class DerivativeStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1261)
		else:
			quickfix.DoubleField.__init__(self, 1261, data)

class DerivativeStrikeCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1262)
		else:
			quickfix.StringField.__init__(self, 1262, data)

class DerivativeStrikeMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1263)
		else:
			quickfix.DoubleField.__init__(self, 1263, data)

class DerivativeStrikeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1264)
		else:
			quickfix.DoubleField.__init__(self, 1264, data)

class DerivativeOptAttribute(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1265)
		else:
			quickfix.CharField.__init__(self, 1265, data)

class DerivativeContractMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1266)
		else:
			quickfix.DoubleField.__init__(self, 1266, data)

class DerivativeMinPriceIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1267)
		else:
			quickfix.DoubleField.__init__(self, 1267, data)

class DerivativeMinPriceIncrementAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1268)
		else:
			quickfix.DoubleField.__init__(self, 1268, data)

class DerivativeUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1269)
		else:
			quickfix.StringField.__init__(self, 1269, data)

class DerivativeUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1270)
		else:
			quickfix.DoubleField.__init__(self, 1270, data)

class DerivativeTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1271)
		else:
			quickfix.StringField.__init__(self, 1271, data)

class DerivativeSecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1272)
		else:
			quickfix.StringField.__init__(self, 1272, data)

class DerivativePositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1273)
		else:
			quickfix.IntField.__init__(self, 1273, data)

class DerivativeNTPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1274)
		else:
			quickfix.IntField.__init__(self, 1274, data)

class DerivativeIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1275)
		else:
			quickfix.StringField.__init__(self, 1275, data)

class DerivativeIssueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1276)
		else:
			quickfix.StringField.__init__(self, 1276, data)

class DerivativeEncodedIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1277)
		else:
			quickfix.IntField.__init__(self, 1277, data)

class DerivativeEncodedIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1278)
		else:
			quickfix.StringField.__init__(self, 1278, data)

class DerivativeSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1279)
		else:
			quickfix.StringField.__init__(self, 1279, data)

class DerivativeEncodedSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1280)
		else:
			quickfix.IntField.__init__(self, 1280, data)

class DerivativeEncodedSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1281)
		else:
			quickfix.StringField.__init__(self, 1281, data)

class DerivativeSecurityXMLLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1282)
		else:
			quickfix.IntField.__init__(self, 1282, data)

class DerivativeSecurityXML(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1283)
		else:
			quickfix.StringField.__init__(self, 1283, data)

class DerivativeSecurityXMLSchema(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1284)
		else:
			quickfix.StringField.__init__(self, 1284, data)

class DerivativeContractSettlMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1285)
		else:
			quickfix.StringField.__init__(self, 1285, data)

class NoDerivativeEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1286)
		else:
			quickfix.IntField.__init__(self, 1286, data)

class DerivativeEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1287)
		else:
			quickfix.IntField.__init__(self, 1287, data)

class DerivativeEventDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1288)
		else:
			quickfix.StringField.__init__(self, 1288, data)

class DerivativeEventTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1289)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1289, data)

class DerivativeEventPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1290)
		else:
			quickfix.DoubleField.__init__(self, 1290, data)

class DerivativeEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1291)
		else:
			quickfix.StringField.__init__(self, 1291, data)

class NoDerivativeInstrumentParties(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1292)
		else:
			quickfix.IntField.__init__(self, 1292, data)

class DerivativeInstrumentPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1293)
		else:
			quickfix.StringField.__init__(self, 1293, data)

class DerivativeInstrumentPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1294)
		else:
			quickfix.CharField.__init__(self, 1294, data)

class DerivativeInstrumentPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1295)
		else:
			quickfix.IntField.__init__(self, 1295, data)

class NoDerivativeInstrumentPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1296)
		else:
			quickfix.IntField.__init__(self, 1296, data)

class DerivativeInstrumentPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1297)
		else:
			quickfix.StringField.__init__(self, 1297, data)

class DerivativeInstrumentPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1298)
		else:
			quickfix.IntField.__init__(self, 1298, data)

class DerivativeExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1299)
		else:
			quickfix.IntField.__init__(self, 1299, data)

class MarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1300)
		else:
			quickfix.StringField.__init__(self, 1300, data)

class MarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1301)
		else:
			quickfix.StringField.__init__(self, 1301, data)

class MaturityMonthYearIncrementUnits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1302)
		else:
			quickfix.IntField.__init__(self, 1302, data)

class MaturityMonthYearFormat(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1303)
		else:
			quickfix.IntField.__init__(self, 1303, data)

class StrikeExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1304)
		else:
			quickfix.IntField.__init__(self, 1304, data)

class SecondaryPriceLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1305)
		else:
			quickfix.IntField.__init__(self, 1305, data)

class PriceLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1306)
		else:
			quickfix.IntField.__init__(self, 1306, data)

class ExecInstValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1308)
		else:
			quickfix.StringField.__init__(self, 1308, data)

class NoTradingSessionRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1309)
		else:
			quickfix.IntField.__init__(self, 1309, data)

class NoMarketSegments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1310)
		else:
			quickfix.IntField.__init__(self, 1310, data)

class NoDerivativeInstrAttrib(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1311)
		else:
			quickfix.IntField.__init__(self, 1311, data)

class NoNestedInstrAttrib(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1312)
		else:
			quickfix.IntField.__init__(self, 1312, data)

class DerivativeInstrAttribType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1313)
		else:
			quickfix.IntField.__init__(self, 1313, data)

class DerivativeInstrAttribValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1314)
		else:
			quickfix.StringField.__init__(self, 1314, data)

class DerivativePriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1315)
		else:
			quickfix.StringField.__init__(self, 1315, data)

class DerivativePriceUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1316)
		else:
			quickfix.DoubleField.__init__(self, 1316, data)

class DerivativeSettlMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1317)
		else:
			quickfix.StringField.__init__(self, 1317, data)

class DerivativePriceQuoteMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1318)
		else:
			quickfix.StringField.__init__(self, 1318, data)

class DerivativeFuturesValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1319)
		else:
			quickfix.StringField.__init__(self, 1319, data)

class DerivativeListMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1320)
		else:
			quickfix.IntField.__init__(self, 1320, data)

class DerivativeCapPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1321)
		else:
			quickfix.DoubleField.__init__(self, 1321, data)

class DerivativeFloorPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1322)
		else:
			quickfix.DoubleField.__init__(self, 1322, data)

class DerivativePutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1323)
		else:
			quickfix.IntField.__init__(self, 1323, data)

class ListUpdateAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1324)
		else:
			quickfix.CharField.__init__(self, 1324, data)

class LegPutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1358)
		else:
			quickfix.IntField.__init__(self, 1358, data)

class LegUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1224)
		else:
			quickfix.DoubleField.__init__(self, 1224, data)

class LegPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1421)
		else:
			quickfix.StringField.__init__(self, 1421, data)

class LegPriceUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1422)
		else:
			quickfix.DoubleField.__init__(self, 1422, data)

class UnderlyingUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1423)
		else:
			quickfix.DoubleField.__init__(self, 1423, data)

class UnderlyingPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1424)
		else:
			quickfix.StringField.__init__(self, 1424, data)

class UnderlyingPriceUnitOfMeasureQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1425)
		else:
			quickfix.DoubleField.__init__(self, 1425, data)

class MarketReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1393)
		else:
			quickfix.StringField.__init__(self, 1393, data)

class MarketReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1394)
		else:
			quickfix.StringField.__init__(self, 1394, data)

class MarketUpdateAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1395)
		else:
			quickfix.CharField.__init__(self, 1395, data)

class MarketSegmentDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1396)
		else:
			quickfix.StringField.__init__(self, 1396, data)

class EncodedMktSegmDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1397)
		else:
			quickfix.IntField.__init__(self, 1397, data)

class EncodedMktSegmDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1398)
		else:
			quickfix.StringField.__init__(self, 1398, data)

class ParentMktSegmID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1325)
		else:
			quickfix.StringField.__init__(self, 1325, data)

class TradingSessionDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1326)
		else:
			quickfix.StringField.__init__(self, 1326, data)

class TradSesUpdateAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1327)
		else:
			quickfix.CharField.__init__(self, 1327, data)

class RejectText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1328)
		else:
			quickfix.StringField.__init__(self, 1328, data)

class FeeMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1329)
		else:
			quickfix.DoubleField.__init__(self, 1329, data)

class UnderlyingLegSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1330)
		else:
			quickfix.StringField.__init__(self, 1330, data)

class UnderlyingLegSymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1331)
		else:
			quickfix.StringField.__init__(self, 1331, data)

class UnderlyingLegSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1332)
		else:
			quickfix.StringField.__init__(self, 1332, data)

class UnderlyingLegSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1333)
		else:
			quickfix.StringField.__init__(self, 1333, data)

class NoUnderlyingLegSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1334)
		else:
			quickfix.IntField.__init__(self, 1334, data)

class UnderlyingLegSecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1335)
		else:
			quickfix.StringField.__init__(self, 1335, data)

class UnderlyingLegSecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1336)
		else:
			quickfix.StringField.__init__(self, 1336, data)

class UnderlyingLegSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1337)
		else:
			quickfix.StringField.__init__(self, 1337, data)

class UnderlyingLegSecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1338)
		else:
			quickfix.StringField.__init__(self, 1338, data)

class UnderlyingLegMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1339)
		else:
			quickfix.StringField.__init__(self, 1339, data)

class UnderlyingLegPutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1343)
		else:
			quickfix.IntField.__init__(self, 1343, data)

class UnderlyingLegStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1340)
		else:
			quickfix.DoubleField.__init__(self, 1340, data)

class UnderlyingLegSecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1341)
		else:
			quickfix.StringField.__init__(self, 1341, data)

class NoOfLegUnderlyings(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1342)
		else:
			quickfix.IntField.__init__(self, 1342, data)

class UnderlyingLegCFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1344)
		else:
			quickfix.StringField.__init__(self, 1344, data)

class UnderlyingLegMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1345)
		else:
			quickfix.StringField.__init__(self, 1345, data)

class UnderlyingLegMaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1405)
		else:
			quickfix.StringField.__init__(self, 1405, data)

class UnderlyingLegOptAttribute(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1391)
		else:
			quickfix.CharField.__init__(self, 1391, data)

class UnderlyingLegSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1392)
		else:
			quickfix.StringField.__init__(self, 1392, data)

class DefaultVerIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1410)
		else:
			quickfix.BoolField.__init__(self, 1410, data)

class NoUsernames(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 809)
		else:
			quickfix.IntField.__init__(self, 809, data)

class LegAllocSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1367)
		else:
			quickfix.StringField.__init__(self, 1367, data)

class TotNoFills(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1361)
		else:
			quickfix.IntField.__init__(self, 1361, data)

class NoFills(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1362)
		else:
			quickfix.IntField.__init__(self, 1362, data)

class FillExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1363)
		else:
			quickfix.StringField.__init__(self, 1363, data)

class FillPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1364)
		else:
			quickfix.DoubleField.__init__(self, 1364, data)

class FillQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1365)
		else:
			quickfix.DoubleField.__init__(self, 1365, data)

class LegAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1366)
		else:
			quickfix.StringField.__init__(self, 1366, data)

class TradSesEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1368)
		else:
			quickfix.IntField.__init__(self, 1368, data)

class MassActionReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1369)
		else:
			quickfix.StringField.__init__(self, 1369, data)

class NoNotAffectedOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1370)
		else:
			quickfix.IntField.__init__(self, 1370, data)

class NotAffectedOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1371)
		else:
			quickfix.StringField.__init__(self, 1371, data)

class NotAffOrigClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1372)
		else:
			quickfix.StringField.__init__(self, 1372, data)

class MassActionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1373)
		else:
			quickfix.IntField.__init__(self, 1373, data)

class MassActionScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1374)
		else:
			quickfix.IntField.__init__(self, 1374, data)

class MassActionResponse(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1375)
		else:
			quickfix.IntField.__init__(self, 1375, data)

class MassActionRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1376)
		else:
			quickfix.IntField.__init__(self, 1376, data)

class MultilegModel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1377)
		else:
			quickfix.IntField.__init__(self, 1377, data)

class MultilegPriceMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1378)
		else:
			quickfix.IntField.__init__(self, 1378, data)

class LegVolatility(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1379)
		else:
			quickfix.DoubleField.__init__(self, 1379, data)

class DividendYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1380)
		else:
			quickfix.DoubleField.__init__(self, 1380, data)

class LegDividendYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1381)
		else:
			quickfix.DoubleField.__init__(self, 1381, data)

class CurrencyRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1382)
		else:
			quickfix.DoubleField.__init__(self, 1382, data)

class LegCurrencyRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1383)
		else:
			quickfix.DoubleField.__init__(self, 1383, data)

class LegExecInst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1384)
		else:
			quickfix.StringField.__init__(self, 1384, data)

class ContingencyType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1385)
		else:
			quickfix.IntField.__init__(self, 1385, data)

class ListRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1386)
		else:
			quickfix.IntField.__init__(self, 1386, data)

class NoTrdRepIndicators(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1387)
		else:
			quickfix.IntField.__init__(self, 1387, data)

class TrdRepPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1388)
		else:
			quickfix.IntField.__init__(self, 1388, data)

class TrdRepIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1389)
		else:
			quickfix.BoolField.__init__(self, 1389, data)

class TradePublishIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1390)
		else:
			quickfix.IntField.__init__(self, 1390, data)

class ApplReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1346)
		else:
			quickfix.StringField.__init__(self, 1346, data)

class ApplReqType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1347)
		else:
			quickfix.IntField.__init__(self, 1347, data)

class ApplResponseType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1348)
		else:
			quickfix.IntField.__init__(self, 1348, data)

class ApplTotalMessageCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1349)
		else:
			quickfix.IntField.__init__(self, 1349, data)

class ApplLastSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1350)
		else:
			quickfix.IntField.__init__(self, 1350, data)

class NoApplIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1351)
		else:
			quickfix.IntField.__init__(self, 1351, data)

class ApplResendFlag(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1352)
		else:
			quickfix.BoolField.__init__(self, 1352, data)

class ApplResponseID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1353)
		else:
			quickfix.StringField.__init__(self, 1353, data)

class ApplResponseError(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1354)
		else:
			quickfix.IntField.__init__(self, 1354, data)

class RefApplID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1355)
		else:
			quickfix.StringField.__init__(self, 1355, data)

class ApplReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1356)
		else:
			quickfix.StringField.__init__(self, 1356, data)

class RefApplLastSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1357)
		else:
			quickfix.IntField.__init__(self, 1357, data)

class ApplNewSeqNum(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1399)
		else:
			quickfix.IntField.__init__(self, 1399, data)

class ApplReportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1426)
		else:
			quickfix.IntField.__init__(self, 1426, data)

class Nested4PartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1411)
		else:
			quickfix.IntField.__init__(self, 1411, data)

class Nested4PartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1412)
		else:
			quickfix.StringField.__init__(self, 1412, data)

class NoNested4PartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1413)
		else:
			quickfix.IntField.__init__(self, 1413, data)

class NoNested4PartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1414)
		else:
			quickfix.IntField.__init__(self, 1414, data)

class Nested4PartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1415)
		else:
			quickfix.StringField.__init__(self, 1415, data)

class Nested4PartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1416)
		else:
			quickfix.CharField.__init__(self, 1416, data)

class Nested4PartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1417)
		else:
			quickfix.IntField.__init__(self, 1417, data)

class LegLastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1418)
		else:
			quickfix.DoubleField.__init__(self, 1418, data)

class HaltReasonInt(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 327)
		else:
			quickfix.IntField.__init__(self, 327, data)

class SideTrdSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1008)
		else:
			quickfix.IntField.__init__(self, 1008, data)

class SideLastQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1009)
		else:
			quickfix.DoubleField.__init__(self, 1009, data)

class UnderlyingInstrumentPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1059)
		else:
			quickfix.StringField.__init__(self, 1059, data)

class UnderlyingInstrumentPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1060)
		else:
			quickfix.CharField.__init__(self, 1060, data)

class UnderlyingInstrumentPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1061)
		else:
			quickfix.IntField.__init__(self, 1061, data)

class UnderlyingInstrumentPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1063)
		else:
			quickfix.StringField.__init__(self, 1063, data)

class UnderlyingInstrumentPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1064)
		else:
			quickfix.IntField.__init__(self, 1064, data)

class OptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1195)
		else:
			quickfix.DoubleField.__init__(self, 1195, data)

class ValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1197)
		else:
			quickfix.StringField.__init__(self, 1197, data)

class DerivativeValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1319)
		else:
			quickfix.StringField.__init__(self, 1319, data)

class SideExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1427)
		else:
			quickfix.StringField.__init__(self, 1427, data)

class OrderDelay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1428)
		else:
			quickfix.IntField.__init__(self, 1428, data)

class OrderDelayUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1429)
		else:
			quickfix.IntField.__init__(self, 1429, data)

class VenueType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1430)
		else:
			quickfix.CharField.__init__(self, 1430, data)

class RefOrdIDReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1431)
		else:
			quickfix.IntField.__init__(self, 1431, data)

class OrigCustOrderCapacity(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1432)
		else:
			quickfix.IntField.__init__(self, 1432, data)

class RefApplReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1433)
		else:
			quickfix.StringField.__init__(self, 1433, data)

class ModelType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1434)
		else:
			quickfix.IntField.__init__(self, 1434, data)

class ContractMultiplierUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1435)
		else:
			quickfix.IntField.__init__(self, 1435, data)

class LegContractMultiplierUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1436)
		else:
			quickfix.IntField.__init__(self, 1436, data)

class UnderlyingContractMultiplierUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1437)
		else:
			quickfix.IntField.__init__(self, 1437, data)

class DerivativeContractMultiplierUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1438)
		else:
			quickfix.IntField.__init__(self, 1438, data)

class FlowScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1439)
		else:
			quickfix.IntField.__init__(self, 1439, data)

class LegFlowScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1440)
		else:
			quickfix.IntField.__init__(self, 1440, data)

class UnderlyingFlowScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1441)
		else:
			quickfix.IntField.__init__(self, 1441, data)

class DerivativeFlowScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1442)
		else:
			quickfix.IntField.__init__(self, 1442, data)

class FillLiquidityInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1443)
		else:
			quickfix.IntField.__init__(self, 1443, data)

class SideLiquidityInd(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1444)
		else:
			quickfix.IntField.__init__(self, 1444, data)

class NoRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1445)
		else:
			quickfix.IntField.__init__(self, 1445, data)

class RateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1446)
		else:
			quickfix.IntField.__init__(self, 1446, data)

class RateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1447)
		else:
			quickfix.IntField.__init__(self, 1447, data)

class ReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1448)
		else:
			quickfix.StringField.__init__(self, 1448, data)

class RestructuringType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1449)
		else:
			quickfix.StringField.__init__(self, 1449, data)

class Seniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1450)
		else:
			quickfix.StringField.__init__(self, 1450, data)

class NotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1451)
		else:
			quickfix.DoubleField.__init__(self, 1451, data)

class OriginalNotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1452)
		else:
			quickfix.DoubleField.__init__(self, 1452, data)

class UnderlyingRestructuringType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1453)
		else:
			quickfix.StringField.__init__(self, 1453, data)

class UnderlyingSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1454)
		else:
			quickfix.StringField.__init__(self, 1454, data)

class UnderlyingNotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1455)
		else:
			quickfix.DoubleField.__init__(self, 1455, data)

class UnderlyingOriginalNotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1456)
		else:
			quickfix.DoubleField.__init__(self, 1456, data)

class AttachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1457)
		else:
			quickfix.DoubleField.__init__(self, 1457, data)

class DetachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1458)
		else:
			quickfix.DoubleField.__init__(self, 1458, data)

class UnderlyingAttachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1459)
		else:
			quickfix.DoubleField.__init__(self, 1459, data)

class UnderlyingDetachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1460)
		else:
			quickfix.DoubleField.__init__(self, 1460, data)

class NoTargetPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1461)
		else:
			quickfix.IntField.__init__(self, 1461, data)

class TargetPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1462)
		else:
			quickfix.StringField.__init__(self, 1462, data)

class TargetPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1463)
		else:
			quickfix.CharField.__init__(self, 1463, data)

class TargetPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1464)
		else:
			quickfix.IntField.__init__(self, 1464, data)

class SecurityListID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1465)
		else:
			quickfix.StringField.__init__(self, 1465, data)

class SecurityListRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1466)
		else:
			quickfix.StringField.__init__(self, 1466, data)

class SecurityListDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1467)
		else:
			quickfix.StringField.__init__(self, 1467, data)

class EncodedSecurityListDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1468)
		else:
			quickfix.IntField.__init__(self, 1468, data)

class EncodedSecurityListDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1469)
		else:
			quickfix.StringField.__init__(self, 1469, data)

class SecurityListType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1470)
		else:
			quickfix.IntField.__init__(self, 1470, data)

class SecurityListTypeSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1471)
		else:
			quickfix.IntField.__init__(self, 1471, data)

class NewsID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1472)
		else:
			quickfix.StringField.__init__(self, 1472, data)

class NewsCategory(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1473)
		else:
			quickfix.IntField.__init__(self, 1473, data)

class LanguageCode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1474)
		else:
			quickfix.StringField.__init__(self, 1474, data)

class NoNewsRefIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1475)
		else:
			quickfix.IntField.__init__(self, 1475, data)

class NewsRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1476)
		else:
			quickfix.StringField.__init__(self, 1476, data)

class NewsRefType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1477)
		else:
			quickfix.IntField.__init__(self, 1477, data)

class StrikePriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1478)
		else:
			quickfix.IntField.__init__(self, 1478, data)

class StrikePriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1479)
		else:
			quickfix.IntField.__init__(self, 1479, data)

class StrikePriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1480)
		else:
			quickfix.DoubleField.__init__(self, 1480, data)

class UnderlyingPriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1481)
		else:
			quickfix.IntField.__init__(self, 1481, data)

class OptPayoutType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1482)
		else:
			quickfix.IntField.__init__(self, 1482, data)

class NoComplexEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1483)
		else:
			quickfix.IntField.__init__(self, 1483, data)

class ComplexEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1484)
		else:
			quickfix.IntField.__init__(self, 1484, data)

class ComplexOptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1485)
		else:
			quickfix.DoubleField.__init__(self, 1485, data)

class ComplexEventPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1486)
		else:
			quickfix.DoubleField.__init__(self, 1486, data)

class ComplexEventPriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1487)
		else:
			quickfix.IntField.__init__(self, 1487, data)

class ComplexEventPriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1488)
		else:
			quickfix.DoubleField.__init__(self, 1488, data)

class ComplexEventPriceTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1489)
		else:
			quickfix.IntField.__init__(self, 1489, data)

class ComplexEventCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1490)
		else:
			quickfix.IntField.__init__(self, 1490, data)

class NoComplexEventDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1491)
		else:
			quickfix.IntField.__init__(self, 1491, data)

class ComplexEventStartDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 1492)
		else:
			quickfix.UtcDateField.__init__(self, 1492, data)

class ComplexEventEndDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 1493)
		else:
			quickfix.UtcDateField.__init__(self, 1493, data)

class NoComplexEventTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1494)
		else:
			quickfix.IntField.__init__(self, 1494, data)

class ComplexEventStartTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 1495)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 1495, data)

class ComplexEventEndTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 1496)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 1496, data)

class StreamAsgnReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1497)
		else:
			quickfix.StringField.__init__(self, 1497, data)

class StreamAsgnReqType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1498)
		else:
			quickfix.IntField.__init__(self, 1498, data)

class NoAsgnReqs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1499)
		else:
			quickfix.IntField.__init__(self, 1499, data)

class MDStreamID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1500)
		else:
			quickfix.StringField.__init__(self, 1500, data)

class StreamAsgnRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1501)
		else:
			quickfix.StringField.__init__(self, 1501, data)

class StreamAsgnRejReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1502)
		else:
			quickfix.IntField.__init__(self, 1502, data)

class StreamAsgnAckType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1503)
		else:
			quickfix.IntField.__init__(self, 1503, data)

class StreamAsgnType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1617)
		else:
			quickfix.IntField.__init__(self, 1617, data)

class RelSymTransactTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1504)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1504, data)

class FillYieldType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1622)
		else:
			quickfix.StringField.__init__(self, 1622, data)

class FillYield(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1623)
		else:
			quickfix.DoubleField.__init__(self, 1623, data)

class NoMatchInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1624)
		else:
			quickfix.IntField.__init__(self, 1624, data)

class MatchInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1625)
		else:
			quickfix.IntField.__init__(self, 1625, data)

class MatchAttribTagID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1626)
		else:
			quickfix.StringField.__init__(self, 1626, data)

class MatchAttribValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1627)
		else:
			quickfix.StringField.__init__(self, 1627, data)

class MatchInstMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1673)
		else:
			quickfix.StringField.__init__(self, 1673, data)

class TriggerScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1628)
		else:
			quickfix.IntField.__init__(self, 1628, data)

class ExposureDuration(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1629)
		else:
			quickfix.IntField.__init__(self, 1629, data)

class NoLimitAmts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1630)
		else:
			quickfix.IntField.__init__(self, 1630, data)

class LimitAmtType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1631)
		else:
			quickfix.IntField.__init__(self, 1631, data)

class LastLimitAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1632)
		else:
			quickfix.DoubleField.__init__(self, 1632, data)

class LimitAmtRemaining(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1633)
		else:
			quickfix.DoubleField.__init__(self, 1633, data)

class LimitAmtCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1634)
		else:
			quickfix.StringField.__init__(self, 1634, data)

class MarginReqmtInqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1635)
		else:
			quickfix.StringField.__init__(self, 1635, data)

class NoMarginReqmtInqQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1636)
		else:
			quickfix.IntField.__init__(self, 1636, data)

class MarginReqmtInqQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1637)
		else:
			quickfix.IntField.__init__(self, 1637, data)

class MarginReqmtRptType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1638)
		else:
			quickfix.IntField.__init__(self, 1638, data)

class MarginClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1639)
		else:
			quickfix.StringField.__init__(self, 1639, data)

class MarginReqmtInqStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1640)
		else:
			quickfix.IntField.__init__(self, 1640, data)

class MarginReqmtInqResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1641)
		else:
			quickfix.IntField.__init__(self, 1641, data)

class MarginReqmtRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1642)
		else:
			quickfix.StringField.__init__(self, 1642, data)

class NoMarginAmt(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1643)
		else:
			quickfix.IntField.__init__(self, 1643, data)

class MarginAmtType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1644)
		else:
			quickfix.IntField.__init__(self, 1644, data)

class MarginAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1645)
		else:
			quickfix.DoubleField.__init__(self, 1645, data)

class MarginAmtCcy(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1646)
		else:
			quickfix.StringField.__init__(self, 1646, data)

class NoRelatedInstruments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1647)
		else:
			quickfix.IntField.__init__(self, 1647, data)

class RelatedInstrumentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1648)
		else:
			quickfix.IntField.__init__(self, 1648, data)

class RelatedSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1649)
		else:
			quickfix.StringField.__init__(self, 1649, data)

class RelatedSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1650)
		else:
			quickfix.StringField.__init__(self, 1650, data)

class RelatedSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1651)
		else:
			quickfix.StringField.__init__(self, 1651, data)

class RelatedSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1652)
		else:
			quickfix.StringField.__init__(self, 1652, data)

class RelatedMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1653)
		else:
			quickfix.StringField.__init__(self, 1653, data)

class CoveredQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1654)
		else:
			quickfix.DoubleField.__init__(self, 1654, data)

class MarketMakerActivity(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1655)
		else:
			quickfix.IntField.__init__(self, 1655, data)

class PartyDetailsListRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1505)
		else:
			quickfix.StringField.__init__(self, 1505, data)

class NoRequestedPartyRoles(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1508)
		else:
			quickfix.IntField.__init__(self, 1508, data)

class RequestedPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1509)
		else:
			quickfix.IntField.__init__(self, 1509, data)

class PartyDetailsListReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1510)
		else:
			quickfix.StringField.__init__(self, 1510, data)

class RequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1511)
		else:
			quickfix.IntField.__init__(self, 1511, data)

class TotNoParties(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1512)
		else:
			quickfix.IntField.__init__(self, 1512, data)

class NoPartyRelationships(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1514)
		else:
			quickfix.IntField.__init__(self, 1514, data)

class PartyRelationship(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1515)
		else:
			quickfix.IntField.__init__(self, 1515, data)

class NoPartyDetailAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1516)
		else:
			quickfix.IntField.__init__(self, 1516, data)

class PartyDetailAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1517)
		else:
			quickfix.StringField.__init__(self, 1517, data)

class PartyDetailAltIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1518)
		else:
			quickfix.CharField.__init__(self, 1518, data)

class NoPartyDetailAltSubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1519)
		else:
			quickfix.IntField.__init__(self, 1519, data)

class PartyDetailAltSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1520)
		else:
			quickfix.StringField.__init__(self, 1520, data)

class PartyDetailAltSubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1521)
		else:
			quickfix.IntField.__init__(self, 1521, data)

class NoRiskLimitTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1529)
		else:
			quickfix.IntField.__init__(self, 1529, data)

class RiskLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1530)
		else:
			quickfix.IntField.__init__(self, 1530, data)

class RiskLimitAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1531)
		else:
			quickfix.DoubleField.__init__(self, 1531, data)

class RiskLimitCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1532)
		else:
			quickfix.StringField.__init__(self, 1532, data)

class RiskLimitPlatform(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1533)
		else:
			quickfix.StringField.__init__(self, 1533, data)

class NoRiskInstrumentScopes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1534)
		else:
			quickfix.IntField.__init__(self, 1534, data)

class InstrumentScopeOperator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1535)
		else:
			quickfix.IntField.__init__(self, 1535, data)

class InstrumentScopeSymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1536)
		else:
			quickfix.StringField.__init__(self, 1536, data)

class InstrumentScopeSymbolSfx(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1537)
		else:
			quickfix.StringField.__init__(self, 1537, data)

class InstrumentScopeSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1538)
		else:
			quickfix.StringField.__init__(self, 1538, data)

class InstrumentScopeSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1539)
		else:
			quickfix.StringField.__init__(self, 1539, data)

class NoInstrumentScopeSecurityAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1540)
		else:
			quickfix.IntField.__init__(self, 1540, data)

class InstrumentScopeSecurityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1541)
		else:
			quickfix.StringField.__init__(self, 1541, data)

class InstrumentScopeSecurityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1542)
		else:
			quickfix.StringField.__init__(self, 1542, data)

class InstrumentScopeProduct(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1543)
		else:
			quickfix.IntField.__init__(self, 1543, data)

class InstrumentScopeProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1544)
		else:
			quickfix.StringField.__init__(self, 1544, data)

class InstrumentScopeSecurityGroup(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1545)
		else:
			quickfix.StringField.__init__(self, 1545, data)

class InstrumentScopeCFICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1546)
		else:
			quickfix.StringField.__init__(self, 1546, data)

class InstrumentScopeSecurityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1547)
		else:
			quickfix.StringField.__init__(self, 1547, data)

class InstrumentScopeSecuritySubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1548)
		else:
			quickfix.StringField.__init__(self, 1548, data)

class InstrumentScopeMaturityMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1549)
		else:
			quickfix.StringField.__init__(self, 1549, data)

class InstrumentScopeMaturityTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1550)
		else:
			quickfix.StringField.__init__(self, 1550, data)

class InstrumentScopeRestructuringType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1551)
		else:
			quickfix.StringField.__init__(self, 1551, data)

class InstrumentScopeSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1552)
		else:
			quickfix.StringField.__init__(self, 1552, data)

class InstrumentScopePutOrCall(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1553)
		else:
			quickfix.IntField.__init__(self, 1553, data)

class InstrumentScopeFlexibleIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1554)
		else:
			quickfix.BoolField.__init__(self, 1554, data)

class InstrumentScopeCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1555)
		else:
			quickfix.DoubleField.__init__(self, 1555, data)

class InstrumentScopeSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1556)
		else:
			quickfix.StringField.__init__(self, 1556, data)

class InstrumentScopeSettlType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1557)
		else:
			quickfix.StringField.__init__(self, 1557, data)

class RiskInstrumentMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1558)
		else:
			quickfix.DoubleField.__init__(self, 1558, data)

class NoRiskWarningLevels(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1559)
		else:
			quickfix.IntField.__init__(self, 1559, data)

class RiskWarningLevelPercent(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1560)
		else:
			quickfix.DoubleField.__init__(self, 1560, data)

class RiskWarningLevelName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1561)
		else:
			quickfix.StringField.__init__(self, 1561, data)

class NoRelatedPartyDetailID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1562)
		else:
			quickfix.IntField.__init__(self, 1562, data)

class RelatedPartyDetailID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1563)
		else:
			quickfix.StringField.__init__(self, 1563, data)

class RelatedPartyDetailIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1564)
		else:
			quickfix.CharField.__init__(self, 1564, data)

class RelatedPartyDetailRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1565)
		else:
			quickfix.IntField.__init__(self, 1565, data)

class NoRelatedPartyDetailSubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1566)
		else:
			quickfix.IntField.__init__(self, 1566, data)

class RelatedPartyDetailSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1567)
		else:
			quickfix.StringField.__init__(self, 1567, data)

class RelatedPartyDetailSubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1568)
		else:
			quickfix.IntField.__init__(self, 1568, data)

class NoRelatedPartyDetailAltID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1569)
		else:
			quickfix.IntField.__init__(self, 1569, data)

class RelatedPartyDetailAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1570)
		else:
			quickfix.StringField.__init__(self, 1570, data)

class RelatedPartyDetailAltIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1571)
		else:
			quickfix.CharField.__init__(self, 1571, data)

class NoRelatedPartyDetailAltSubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1572)
		else:
			quickfix.IntField.__init__(self, 1572, data)

class RelatedPartyDetailAltSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1573)
		else:
			quickfix.StringField.__init__(self, 1573, data)

class RelatedPartyDetailAltSubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1574)
		else:
			quickfix.IntField.__init__(self, 1574, data)

class InstrumentScopeSecurityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1616)
		else:
			quickfix.StringField.__init__(self, 1616, data)

class InstrumentScopeEncodedSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1620)
		else:
			quickfix.IntField.__init__(self, 1620, data)

class InstrumentScopeEncodedSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1621)
		else:
			quickfix.StringField.__init__(self, 1621, data)

class NoInstrumentScopes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1656)
		else:
			quickfix.IntField.__init__(self, 1656, data)

class NoRequestingPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1657)
		else:
			quickfix.IntField.__init__(self, 1657, data)

class RequestingPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1658)
		else:
			quickfix.StringField.__init__(self, 1658, data)

class RequestingPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1659)
		else:
			quickfix.CharField.__init__(self, 1659, data)

class RequestingPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1660)
		else:
			quickfix.IntField.__init__(self, 1660, data)

class NoRequestingPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1661)
		else:
			quickfix.IntField.__init__(self, 1661, data)

class RequestingPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1662)
		else:
			quickfix.StringField.__init__(self, 1662, data)

class RequestingPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1663)
		else:
			quickfix.IntField.__init__(self, 1663, data)

class EncodedRejectTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1664)
		else:
			quickfix.IntField.__init__(self, 1664, data)

class EncodedRejectText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1665)
		else:
			quickfix.StringField.__init__(self, 1665, data)

class RiskLimitRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1666)
		else:
			quickfix.StringField.__init__(self, 1666, data)

class RiskLimitReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1667)
		else:
			quickfix.StringField.__init__(self, 1667, data)

class NoRequestedRiskLimitType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1668)
		else:
			quickfix.IntField.__init__(self, 1668, data)

class NoRiskLimits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1669)
		else:
			quickfix.IntField.__init__(self, 1669, data)

class RiskLimitID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1670)
		else:
			quickfix.StringField.__init__(self, 1670, data)

class NoPartyDetails(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1671)
		else:
			quickfix.IntField.__init__(self, 1671, data)

class PartyDetailStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1672)
		else:
			quickfix.IntField.__init__(self, 1672, data)

class PartyDetailRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1674)
		else:
			quickfix.IntField.__init__(self, 1674, data)

class RelatedPartyDetailRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1675)
		else:
			quickfix.IntField.__init__(self, 1675, data)

class NoPartyUpdates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1676)
		else:
			quickfix.IntField.__init__(self, 1676, data)

class NoPartyRiskLimits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1677)
		else:
			quickfix.IntField.__init__(self, 1677, data)

class PartyDetailID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1691)
		else:
			quickfix.StringField.__init__(self, 1691, data)

class PartyDetailIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1692)
		else:
			quickfix.CharField.__init__(self, 1692, data)

class PartyDetailRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1693)
		else:
			quickfix.IntField.__init__(self, 1693, data)

class NoPartyDetailSubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1694)
		else:
			quickfix.IntField.__init__(self, 1694, data)

class PartyDetailSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1695)
		else:
			quickfix.StringField.__init__(self, 1695, data)

class PartyDetailSubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1696)
		else:
			quickfix.IntField.__init__(self, 1696, data)

class SecurityMassTradingStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1679)
		else:
			quickfix.IntField.__init__(self, 1679, data)

class SecurityMassTradingEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1680)
		else:
			quickfix.IntField.__init__(self, 1680, data)

class MassHaltReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1681)
		else:
			quickfix.IntField.__init__(self, 1681, data)

class MDSecurityTradingStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1682)
		else:
			quickfix.IntField.__init__(self, 1682, data)

class MDSubFeedType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1683)
		else:
			quickfix.StringField.__init__(self, 1683, data)

class MDHaltReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1684)
		else:
			quickfix.IntField.__init__(self, 1684, data)

class SideTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1506)
		else:
			quickfix.StringField.__init__(self, 1506, data)

class SideOrigTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1507)
		else:
			quickfix.StringField.__init__(self, 1507, data)

class DifferentialPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1522)
		else:
			quickfix.DoubleField.__init__(self, 1522, data)

class TrdAckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1523)
		else:
			quickfix.IntField.__init__(self, 1523, data)

class PriceQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1524)
		else:
			quickfix.StringField.__init__(self, 1524, data)

class UnderlyingPriceQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1526)
		else:
			quickfix.StringField.__init__(self, 1526, data)

class LegPriceQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1528)
		else:
			quickfix.StringField.__init__(self, 1528, data)

class DerivativePriceQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1576)
		else:
			quickfix.StringField.__init__(self, 1576, data)

class NoSecurityClassifications(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1582)
		else:
			quickfix.IntField.__init__(self, 1582, data)

class SecurityClassificationReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1583)
		else:
			quickfix.IntField.__init__(self, 1583, data)

class SecurityClassificationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1584)
		else:
			quickfix.StringField.__init__(self, 1584, data)

class PosAmtReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1585)
		else:
			quickfix.IntField.__init__(self, 1585, data)

class NoLegPosAmt(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1586)
		else:
			quickfix.IntField.__init__(self, 1586, data)

class LegPosAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1587)
		else:
			quickfix.DoubleField.__init__(self, 1587, data)

class LegPosAmtType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1588)
		else:
			quickfix.StringField.__init__(self, 1588, data)

class LegPosCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1589)
		else:
			quickfix.StringField.__init__(self, 1589, data)

class LegPosAmtReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1590)
		else:
			quickfix.IntField.__init__(self, 1590, data)

class LegQtyType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1591)
		else:
			quickfix.IntField.__init__(self, 1591, data)

class DiscountFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1592)
		else:
			quickfix.DoubleField.__init__(self, 1592, data)

class ParentAllocID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1593)
		else:
			quickfix.StringField.__init__(self, 1593, data)

class LegSecurityGroup(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1594)
		else:
			quickfix.StringField.__init__(self, 1594, data)

class PositionContingentPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1595)
		else:
			quickfix.DoubleField.__init__(self, 1595, data)

class ClearingTradePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1596)
		else:
			quickfix.DoubleField.__init__(self, 1596, data)

class SideClearingTradePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1597)
		else:
			quickfix.DoubleField.__init__(self, 1597, data)

class SideClearingTradePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1598)
		else:
			quickfix.IntField.__init__(self, 1598, data)

class SidePriceDifferential(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1599)
		else:
			quickfix.DoubleField.__init__(self, 1599, data)

class FIXEngineName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1600)
		else:
			quickfix.StringField.__init__(self, 1600, data)

class FIXEngineVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1601)
		else:
			quickfix.StringField.__init__(self, 1601, data)

class FIXEngineVendor(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1602)
		else:
			quickfix.StringField.__init__(self, 1602, data)

class ApplicationSystemName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1603)
		else:
			quickfix.StringField.__init__(self, 1603, data)

class ApplicationSystemVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1604)
		else:
			quickfix.StringField.__init__(self, 1604, data)

class ApplicationSystemVendor(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1605)
		else:
			quickfix.StringField.__init__(self, 1605, data)

class NumOfSimpleInstruments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1606)
		else:
			quickfix.IntField.__init__(self, 1606, data)

class SecurityRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1607)
		else:
			quickfix.IntField.__init__(self, 1607, data)

class InitialDisplayQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1608)
		else:
			quickfix.DoubleField.__init__(self, 1608, data)

class ThrottleStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1609)
		else:
			quickfix.IntField.__init__(self, 1609, data)

class NoThrottles(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1610)
		else:
			quickfix.IntField.__init__(self, 1610, data)

class ThrottleAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1611)
		else:
			quickfix.IntField.__init__(self, 1611, data)

class ThrottleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1612)
		else:
			quickfix.IntField.__init__(self, 1612, data)

class ThrottleNoMsgs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1613)
		else:
			quickfix.IntField.__init__(self, 1613, data)

class ThrottleTimeInterval(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1614)
		else:
			quickfix.IntField.__init__(self, 1614, data)

class ThrottleTimeUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1615)
		else:
			quickfix.IntField.__init__(self, 1615, data)

class NoThrottleMsgType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1618)
		else:
			quickfix.IntField.__init__(self, 1618, data)

class ThrottleMsgType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1619)
		else:
			quickfix.StringField.__init__(self, 1619, data)

class ThrottleInst(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1685)
		else:
			quickfix.IntField.__init__(self, 1685, data)

class ThrottleCountIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1686)
		else:
			quickfix.IntField.__init__(self, 1686, data)

class AccountSummaryReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1699)
		else:
			quickfix.StringField.__init__(self, 1699, data)

class NoSettlementAmounts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1700)
		else:
			quickfix.IntField.__init__(self, 1700, data)

class SettlementAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1701)
		else:
			quickfix.DoubleField.__init__(self, 1701, data)

class SettlementAmountCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1702)
		else:
			quickfix.StringField.__init__(self, 1702, data)

class NoCollateralAmounts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1703)
		else:
			quickfix.IntField.__init__(self, 1703, data)

class CurrentCollateralAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1704)
		else:
			quickfix.DoubleField.__init__(self, 1704, data)

class CollateralCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1705)
		else:
			quickfix.StringField.__init__(self, 1705, data)

class CollateralType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1706)
		else:
			quickfix.StringField.__init__(self, 1706, data)

class NoPayCollects(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1707)
		else:
			quickfix.IntField.__init__(self, 1707, data)

class PayAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1710)
		else:
			quickfix.DoubleField.__init__(self, 1710, data)

class CollectAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1711)
		else:
			quickfix.DoubleField.__init__(self, 1711, data)

class PayCollectType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1708)
		else:
			quickfix.StringField.__init__(self, 1708, data)

class PayCollectCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1709)
		else:
			quickfix.StringField.__init__(self, 1709, data)

class PayCollectMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1712)
		else:
			quickfix.StringField.__init__(self, 1712, data)

class PayCollectMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1713)
		else:
			quickfix.StringField.__init__(self, 1713, data)

class MarginAmountMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1714)
		else:
			quickfix.StringField.__init__(self, 1714, data)

class MarginAmountMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1715)
		else:
			quickfix.StringField.__init__(self, 1715, data)

class FirmGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1728)
		else:
			quickfix.StringField.__init__(self, 1728, data)

class FirmMnemonic(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1729)
		else:
			quickfix.StringField.__init__(self, 1729, data)

class AllocGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1730)
		else:
			quickfix.StringField.__init__(self, 1730, data)

class AvgPxGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1731)
		else:
			quickfix.StringField.__init__(self, 1731, data)

class FirmAllocText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1732)
		else:
			quickfix.StringField.__init__(self, 1732, data)

class EncodedFirmAllocTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1733)
		else:
			quickfix.IntField.__init__(self, 1733, data)

class EncodedFirmAllocText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1734)
		else:
			quickfix.StringField.__init__(self, 1734, data)

class AllocationRollupInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1735)
		else:
			quickfix.IntField.__init__(self, 1735, data)

class AllocGroupQuantity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1736)
		else:
			quickfix.DoubleField.__init__(self, 1736, data)

class AllocGroupRemainingQuantity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1737)
		else:
			quickfix.DoubleField.__init__(self, 1737, data)

class AllocReversalStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1738)
		else:
			quickfix.IntField.__init__(self, 1738, data)

class ObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1739)
		else:
			quickfix.StringField.__init__(self, 1739, data)

class TradePriceNegotiationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1740)
		else:
			quickfix.IntField.__init__(self, 1740, data)

class UpfrontPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1741)
		else:
			quickfix.IntField.__init__(self, 1741, data)

class UpfrontPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1742)
		else:
			quickfix.DoubleField.__init__(self, 1742, data)

class LastUpfrontPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1743)
		else:
			quickfix.DoubleField.__init__(self, 1743, data)

class ShortSaleRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1687)
		else:
			quickfix.IntField.__init__(self, 1687, data)

class ShortSaleExemptionReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1688)
		else:
			quickfix.IntField.__init__(self, 1688, data)

class LegShortSaleExemptionReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1689)
		else:
			quickfix.IntField.__init__(self, 1689, data)

class SideShortSaleExemptionReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1690)
		else:
			quickfix.IntField.__init__(self, 1690, data)

class UnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1716)
		else:
			quickfix.StringField.__init__(self, 1716, data)

class PriceUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1717)
		else:
			quickfix.StringField.__init__(self, 1717, data)

class UnderlyingUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1718)
		else:
			quickfix.StringField.__init__(self, 1718, data)

class UnderlyingPriceUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1719)
		else:
			quickfix.StringField.__init__(self, 1719, data)

class LegUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1720)
		else:
			quickfix.StringField.__init__(self, 1720, data)

class LegPriceUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1721)
		else:
			quickfix.StringField.__init__(self, 1721, data)

class DerivativeUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1722)
		else:
			quickfix.StringField.__init__(self, 1722, data)

class DerivativePriceUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1723)
		else:
			quickfix.StringField.__init__(self, 1723, data)

class ApplLevelRecoveryIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1744)
		else:
			quickfix.IntField.__init__(self, 1744, data)

class BidMDEntryID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1745)
		else:
			quickfix.StringField.__init__(self, 1745, data)

class OfferMDEntryID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1746)
		else:
			quickfix.StringField.__init__(self, 1746, data)

class BidQuoteID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1747)
		else:
			quickfix.StringField.__init__(self, 1747, data)

class OfferQuoteID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1748)
		else:
			quickfix.StringField.__init__(self, 1748, data)

class TotalBidSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1749)
		else:
			quickfix.DoubleField.__init__(self, 1749, data)

class TotalOfferSize(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1750)
		else:
			quickfix.DoubleField.__init__(self, 1750, data)

class SecondaryQuoteID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1751)
		else:
			quickfix.StringField.__init__(self, 1751, data)

class CustodialLotID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1752)
		else:
			quickfix.StringField.__init__(self, 1752, data)

class VersusPurchaseDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1753)
		else:
			quickfix.StringField.__init__(self, 1753, data)

class VersusPurchasePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1754)
		else:
			quickfix.DoubleField.__init__(self, 1754, data)

class CurrentCostBasis(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1755)
		else:
			quickfix.DoubleField.__init__(self, 1755, data)

class LegCustodialLotID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1756)
		else:
			quickfix.StringField.__init__(self, 1756, data)

class LegVersusPurchaseDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1757)
		else:
			quickfix.StringField.__init__(self, 1757, data)

class LegVersusPurchasePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1758)
		else:
			quickfix.DoubleField.__init__(self, 1758, data)

class LegCurrentCostBasis(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1759)
		else:
			quickfix.DoubleField.__init__(self, 1759, data)

class RiskLimitRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1760)
		else:
			quickfix.IntField.__init__(self, 1760, data)

class RiskLimitRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1761)
		else:
			quickfix.IntField.__init__(self, 1761, data)

class RiskLimitRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1762)
		else:
			quickfix.IntField.__init__(self, 1762, data)

class RiskLimitStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1763)
		else:
			quickfix.IntField.__init__(self, 1763, data)

class RiskLimitResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1764)
		else:
			quickfix.IntField.__init__(self, 1764, data)

class RiskLimitUtilizationPercent(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1765)
		else:
			quickfix.DoubleField.__init__(self, 1765, data)

class RiskLimitUtilizationAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1766)
		else:
			quickfix.DoubleField.__init__(self, 1766, data)

class RiskLimitAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1767)
		else:
			quickfix.IntField.__init__(self, 1767, data)

class RiskWarningLevelAmount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1768)
		else:
			quickfix.IntField.__init__(self, 1768, data)

class RiskWarningLevelAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1769)
		else:
			quickfix.IntField.__init__(self, 1769, data)

class EntitlementRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1770)
		else:
			quickfix.StringField.__init__(self, 1770, data)

class EntitlementReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1771)
		else:
			quickfix.StringField.__init__(self, 1771, data)

class NoPartyEntitlements(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1772)
		else:
			quickfix.IntField.__init__(self, 1772, data)

class NoEntitlements(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1773)
		else:
			quickfix.IntField.__init__(self, 1773, data)

class EntitlementIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1774)
		else:
			quickfix.BoolField.__init__(self, 1774, data)

class EntitlementType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1775)
		else:
			quickfix.IntField.__init__(self, 1775, data)

class EntitlementID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1776)
		else:
			quickfix.StringField.__init__(self, 1776, data)

class NoEntitlementAttrib(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1777)
		else:
			quickfix.IntField.__init__(self, 1777, data)

class EntitlementAttribType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1778)
		else:
			quickfix.IntField.__init__(self, 1778, data)

class EntitlementAttribDatatype(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1779)
		else:
			quickfix.IntField.__init__(self, 1779, data)

class EntitlementAttribValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1780)
		else:
			quickfix.StringField.__init__(self, 1780, data)

class EntitlementAttribCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1781)
		else:
			quickfix.StringField.__init__(self, 1781, data)

class EntitlementStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1782)
		else:
			quickfix.StringField.__init__(self, 1782, data)

class EntitlementEndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1783)
		else:
			quickfix.StringField.__init__(self, 1783, data)

class EntitlementPlatform(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1784)
		else:
			quickfix.StringField.__init__(self, 1784, data)

class TradSesControl(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1785)
		else:
			quickfix.IntField.__init__(self, 1785, data)

class TradeVolType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1786)
		else:
			quickfix.IntField.__init__(self, 1786, data)

class RefTickTableID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1787)
		else:
			quickfix.IntField.__init__(self, 1787, data)

class LegID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1788)
		else:
			quickfix.StringField.__init__(self, 1788, data)

class NoTargetMarketSegments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1789)
		else:
			quickfix.IntField.__init__(self, 1789, data)

class TargetMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1790)
		else:
			quickfix.StringField.__init__(self, 1790, data)

class NoAffectedMarketSegments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1791)
		else:
			quickfix.IntField.__init__(self, 1791, data)

class AffectedMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1792)
		else:
			quickfix.StringField.__init__(self, 1792, data)

class NoNotAffectedMarketSegments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1793)
		else:
			quickfix.IntField.__init__(self, 1793, data)

class NotAffectedMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1794)
		else:
			quickfix.StringField.__init__(self, 1794, data)

class NoOrderEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1795)
		else:
			quickfix.IntField.__init__(self, 1795, data)

class OrderEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1796)
		else:
			quickfix.IntField.__init__(self, 1796, data)

class OrderEventExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1797)
		else:
			quickfix.StringField.__init__(self, 1797, data)

class OrderEventReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1798)
		else:
			quickfix.IntField.__init__(self, 1798, data)

class OrderEventPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1799)
		else:
			quickfix.DoubleField.__init__(self, 1799, data)

class OrderEventQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1800)
		else:
			quickfix.DoubleField.__init__(self, 1800, data)

class OrderEventLiquidityIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1801)
		else:
			quickfix.IntField.__init__(self, 1801, data)

class OrderEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1802)
		else:
			quickfix.StringField.__init__(self, 1802, data)

class AuctionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1803)
		else:
			quickfix.IntField.__init__(self, 1803, data)

class AuctionAllocationPct(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1804)
		else:
			quickfix.DoubleField.__init__(self, 1804, data)

class AuctionInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1805)
		else:
			quickfix.IntField.__init__(self, 1805, data)

class RefClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1806)
		else:
			quickfix.StringField.__init__(self, 1806, data)

class LockType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1807)
		else:
			quickfix.IntField.__init__(self, 1807, data)

class LockedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1808)
		else:
			quickfix.DoubleField.__init__(self, 1808, data)

class SecondaryLockedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1809)
		else:
			quickfix.DoubleField.__init__(self, 1809, data)

class ReleaseInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1810)
		else:
			quickfix.IntField.__init__(self, 1810, data)

class ReleaseQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1811)
		else:
			quickfix.DoubleField.__init__(self, 1811, data)

class NoDisclosureInstructions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1812)
		else:
			quickfix.IntField.__init__(self, 1812, data)

class DisclosureType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1813)
		else:
			quickfix.IntField.__init__(self, 1813, data)

class DisclosureInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1814)
		else:
			quickfix.IntField.__init__(self, 1814, data)

class TradingCapacity(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1815)
		else:
			quickfix.IntField.__init__(self, 1815, data)

class ClearingAccountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1816)
		else:
			quickfix.IntField.__init__(self, 1816, data)

class LegClearingAccountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1817)
		else:
			quickfix.IntField.__init__(self, 1817, data)

class TargetPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1818)
		else:
			quickfix.IntField.__init__(self, 1818, data)

class RelatedHighPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1819)
		else:
			quickfix.DoubleField.__init__(self, 1819, data)

class RelatedLowPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1820)
		else:
			quickfix.DoubleField.__init__(self, 1820, data)

class RelatedPriceSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1821)
		else:
			quickfix.IntField.__init__(self, 1821, data)

class MinQtyMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1822)
		else:
			quickfix.IntField.__init__(self, 1822, data)

class Triggered(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1823)
		else:
			quickfix.IntField.__init__(self, 1823, data)

class AffectedOrigClOrdID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1824)
		else:
			quickfix.StringField.__init__(self, 1824, data)

class NotAffSecondaryOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1825)
		else:
			quickfix.StringField.__init__(self, 1825, data)

class NoCrossLegs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1829)
		else:
			quickfix.IntField.__init__(self, 1829, data)

class EventTimePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1826)
		else:
			quickfix.IntField.__init__(self, 1826, data)

class EventTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1827)
		else:
			quickfix.StringField.__init__(self, 1827, data)

class LastQtyVariance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1828)
		else:
			quickfix.DoubleField.__init__(self, 1828, data)

class OrderOrigination(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1724)
		else:
			quickfix.IntField.__init__(self, 1724, data)

class OriginatingDeptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1725)
		else:
			quickfix.StringField.__init__(self, 1725, data)

class ReceivingDeptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1726)
		else:
			quickfix.StringField.__init__(self, 1726, data)

class InformationBarrierID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1727)
		else:
			quickfix.StringField.__init__(self, 1727, data)

class SettlPriceIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1830)
		else:
			quickfix.DoubleField.__init__(self, 1830, data)

class SettlPriceSecondaryIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1831)
		else:
			quickfix.DoubleField.__init__(self, 1831, data)

class ClearedIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1832)
		else:
			quickfix.IntField.__init__(self, 1832, data)

class ContractRefPosType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1833)
		else:
			quickfix.IntField.__init__(self, 1833, data)

class PositionCapacity(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1834)
		else:
			quickfix.IntField.__init__(self, 1834, data)

class PosQtyUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1835)
		else:
			quickfix.StringField.__init__(self, 1835, data)

class PosQtyUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1836)
		else:
			quickfix.StringField.__init__(self, 1836, data)

class UnderlyingContractPriceRefMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1837)
		else:
			quickfix.StringField.__init__(self, 1837, data)

class NoTradePriceConditions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1838)
		else:
			quickfix.IntField.__init__(self, 1838, data)

class TradePriceCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1839)
		else:
			quickfix.IntField.__init__(self, 1839, data)

class TradeAllocStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1840)
		else:
			quickfix.IntField.__init__(self, 1840, data)

class NoTradeQtys(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1841)
		else:
			quickfix.IntField.__init__(self, 1841, data)

class TradeQtyType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1842)
		else:
			quickfix.IntField.__init__(self, 1842, data)

class TradeQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1843)
		else:
			quickfix.DoubleField.__init__(self, 1843, data)

class NoTradeAllocAmts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1844)
		else:
			quickfix.IntField.__init__(self, 1844, data)

class TradeAllocAmtType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1845)
		else:
			quickfix.StringField.__init__(self, 1845, data)

class TradeAllocAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1846)
		else:
			quickfix.DoubleField.__init__(self, 1846, data)

class TradeAllocCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1847)
		else:
			quickfix.StringField.__init__(self, 1847, data)

class TradeAllocGroupInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1848)
		else:
			quickfix.IntField.__init__(self, 1848, data)

class OffsetInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1849)
		else:
			quickfix.IntField.__init__(self, 1849, data)

class TradeAllocAmtReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1850)
		else:
			quickfix.IntField.__init__(self, 1850, data)

class StrategyLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1851)
		else:
			quickfix.StringField.__init__(self, 1851, data)

class SideAvgPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1852)
		else:
			quickfix.DoubleField.__init__(self, 1852, data)

class SideAvgPxIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1853)
		else:
			quickfix.IntField.__init__(self, 1853, data)

class SideAvgPxGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1854)
		else:
			quickfix.StringField.__init__(self, 1854, data)

class NoRelatedTrades(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1855)
		else:
			quickfix.IntField.__init__(self, 1855, data)

class RelatedTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1856)
		else:
			quickfix.StringField.__init__(self, 1856, data)

class RelatedTradeIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1857)
		else:
			quickfix.IntField.__init__(self, 1857, data)

class RelatedTradeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1858)
		else:
			quickfix.StringField.__init__(self, 1858, data)

class RelatedTradeMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1859)
		else:
			quickfix.StringField.__init__(self, 1859, data)

class RelatedTradeQuantity(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1860)
		else:
			quickfix.DoubleField.__init__(self, 1860, data)

class NoRelatedPositions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1861)
		else:
			quickfix.IntField.__init__(self, 1861, data)

class RelatedPositionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1862)
		else:
			quickfix.StringField.__init__(self, 1862, data)

class RelatedPositionIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1863)
		else:
			quickfix.IntField.__init__(self, 1863, data)

class RelatedPositionDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1864)
		else:
			quickfix.StringField.__init__(self, 1864, data)

class OfferID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1867)
		else:
			quickfix.StringField.__init__(self, 1867, data)

class NoValueChecks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1868)
		else:
			quickfix.IntField.__init__(self, 1868, data)

class ValueCheckType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1869)
		else:
			quickfix.IntField.__init__(self, 1869, data)

class ValueCheckAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1870)
		else:
			quickfix.IntField.__init__(self, 1870, data)

class LegSecurityXMLLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1871)
		else:
			quickfix.IntField.__init__(self, 1871, data)

class LegSecurityXML(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1872)
		else:
			quickfix.StringField.__init__(self, 1872, data)

class LegSecurityXMLSchema(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1873)
		else:
			quickfix.StringField.__init__(self, 1873, data)

class UnderlyingSecurityXMLLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1874)
		else:
			quickfix.IntField.__init__(self, 1874, data)

class UnderlyingSecurityXML(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1875)
		else:
			quickfix.StringField.__init__(self, 1875, data)

class UnderlyingSecurityXMLSchema(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1876)
		else:
			quickfix.StringField.__init__(self, 1876, data)

class PartyDetailRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1877)
		else:
			quickfix.IntField.__init__(self, 1877, data)

class PartyDetailRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1878)
		else:
			quickfix.IntField.__init__(self, 1878, data)

class PartyDetailDefinitionStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1879)
		else:
			quickfix.IntField.__init__(self, 1879, data)

class PartyDetailDefinitionResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1880)
		else:
			quickfix.IntField.__init__(self, 1880, data)

class EntitlementRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1881)
		else:
			quickfix.IntField.__init__(self, 1881, data)

class EntitlementRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1882)
		else:
			quickfix.IntField.__init__(self, 1882, data)

class EntitlementStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1883)
		else:
			quickfix.IntField.__init__(self, 1883, data)

class EntitlementResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1884)
		else:
			quickfix.IntField.__init__(self, 1884, data)

class EntitlementRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1885)
		else:
			quickfix.StringField.__init__(self, 1885, data)

class SettlPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1886)
		else:
			quickfix.StringField.__init__(self, 1886, data)

class SettlPriceUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1887)
		else:
			quickfix.StringField.__init__(self, 1887, data)

class TradeMatchTimestamp(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1888)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1888, data)

class NoInstrmtMatchSides(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1889)
		else:
			quickfix.IntField.__init__(self, 1889, data)

class NoTrdMatchSides(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1890)
		else:
			quickfix.IntField.__init__(self, 1890, data)

class TrdMatchSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1891)
		else:
			quickfix.StringField.__init__(self, 1891, data)

class NoLegExecs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1892)
		else:
			quickfix.IntField.__init__(self, 1892, data)

class LegExecID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1893)
		else:
			quickfix.StringField.__init__(self, 1893, data)

class LegTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1894)
		else:
			quickfix.StringField.__init__(self, 1894, data)

class LegTradeReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1895)
		else:
			quickfix.StringField.__init__(self, 1895, data)

class TradeMatchAckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1896)
		else:
			quickfix.IntField.__init__(self, 1896, data)

class TradeMatchRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1897)
		else:
			quickfix.IntField.__init__(self, 1897, data)

class SideMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1898)
		else:
			quickfix.StringField.__init__(self, 1898, data)

class SideVenueType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 1899)
		else:
			quickfix.CharField.__init__(self, 1899, data)

class SideExecRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1900)
		else:
			quickfix.StringField.__init__(self, 1900, data)

class LegExecRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1901)
		else:
			quickfix.StringField.__init__(self, 1901, data)

class HaircutIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1902)
		else:
			quickfix.BoolField.__init__(self, 1902, data)

class NumOfCompetitors(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1913)
		else:
			quickfix.IntField.__init__(self, 1913, data)

class ResponseTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1914)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1914, data)

class QuoteDisplayTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1915)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1915, data)

class ExposureDurationUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1916)
		else:
			quickfix.IntField.__init__(self, 1916, data)

class CoverPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1917)
		else:
			quickfix.DoubleField.__init__(self, 1917, data)

class NoClearingAccountTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1918)
		else:
			quickfix.IntField.__init__(self, 1918, data)

class NoPriceMovements(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1919)
		else:
			quickfix.IntField.__init__(self, 1919, data)

class NoPriceMovementValues(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1920)
		else:
			quickfix.IntField.__init__(self, 1920, data)

class PriceMovementValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1921)
		else:
			quickfix.DoubleField.__init__(self, 1921, data)

class PriceMovementPoint(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1922)
		else:
			quickfix.IntField.__init__(self, 1922, data)

class PriceMovementType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1923)
		else:
			quickfix.IntField.__init__(self, 1923, data)

class EncodedEventTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1578)
		else:
			quickfix.IntField.__init__(self, 1578, data)

class EncodedEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1579)
		else:
			quickfix.StringField.__init__(self, 1579, data)

class RegulatoryTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1903)
		else:
			quickfix.StringField.__init__(self, 1903, data)

class RegulatoryTradeIDEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1904)
		else:
			quickfix.IntField.__init__(self, 1904, data)

class RegulatoryTradeIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1905)
		else:
			quickfix.StringField.__init__(self, 1905, data)

class RegulatoryTradeIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1906)
		else:
			quickfix.IntField.__init__(self, 1906, data)

class NoRegulatoryTradeIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1907)
		else:
			quickfix.IntField.__init__(self, 1907, data)

class NoAllocRegulatoryTradeIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1908)
		else:
			quickfix.IntField.__init__(self, 1908, data)

class AllocRegulatoryTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1909)
		else:
			quickfix.StringField.__init__(self, 1909, data)

class AllocRegulatoryTradeIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1910)
		else:
			quickfix.StringField.__init__(self, 1910, data)

class AllocRegulatoryTradeIDEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1911)
		else:
			quickfix.IntField.__init__(self, 1911, data)

class AllocRegulatoryTradeIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1912)
		else:
			quickfix.IntField.__init__(self, 1912, data)

class ClearingIntention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1924)
		else:
			quickfix.IntField.__init__(self, 1924, data)

class TradeClearingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1925)
		else:
			quickfix.IntField.__init__(self, 1925, data)

class BackloadedTradeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1926)
		else:
			quickfix.BoolField.__init__(self, 1926, data)

class ConfirmationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1927)
		else:
			quickfix.IntField.__init__(self, 1927, data)

class MandatoryClearingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1928)
		else:
			quickfix.BoolField.__init__(self, 1928, data)

class MixedSwapIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1929)
		else:
			quickfix.BoolField.__init__(self, 1929, data)

class OffMarketPriceIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1930)
		else:
			quickfix.BoolField.__init__(self, 1930, data)

class VerificationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1931)
		else:
			quickfix.IntField.__init__(self, 1931, data)

class ClearingRequirementException(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1932)
		else:
			quickfix.IntField.__init__(self, 1932, data)

class IRSDirection(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1933)
		else:
			quickfix.StringField.__init__(self, 1933, data)

class RegulatoryReportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1934)
		else:
			quickfix.IntField.__init__(self, 1934, data)

class VoluntaryRegulatoryReport(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 1935)
		else:
			quickfix.BoolField.__init__(self, 1935, data)

class TradeCollateralization(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1936)
		else:
			quickfix.IntField.__init__(self, 1936, data)

class TradeContinuation(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1937)
		else:
			quickfix.IntField.__init__(self, 1937, data)

class AssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1938)
		else:
			quickfix.IntField.__init__(self, 1938, data)

class AssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1939)
		else:
			quickfix.IntField.__init__(self, 1939, data)

class AssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1940)
		else:
			quickfix.StringField.__init__(self, 1940, data)

class SwapClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1941)
		else:
			quickfix.StringField.__init__(self, 1941, data)

class NthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1942)
		else:
			quickfix.IntField.__init__(self, 1942, data)

class MthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1943)
		else:
			quickfix.IntField.__init__(self, 1943, data)

class SettledEntityMatrixSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1944)
		else:
			quickfix.StringField.__init__(self, 1944, data)

class SettledEntityMatrixPublicationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1945)
		else:
			quickfix.StringField.__init__(self, 1945, data)

class CouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1946)
		else:
			quickfix.IntField.__init__(self, 1946, data)

class TotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1947)
		else:
			quickfix.DoubleField.__init__(self, 1947, data)

class CouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1948)
		else:
			quickfix.IntField.__init__(self, 1948, data)

class CouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1949)
		else:
			quickfix.StringField.__init__(self, 1949, data)

class CouponDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1950)
		else:
			quickfix.IntField.__init__(self, 1950, data)

class ConvertibleBondEquityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1951)
		else:
			quickfix.StringField.__init__(self, 1951, data)

class ConvertibleBondEquityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1952)
		else:
			quickfix.StringField.__init__(self, 1952, data)

class ContractPriceRefMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1953)
		else:
			quickfix.StringField.__init__(self, 1953, data)

class LienSeniority(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1954)
		else:
			quickfix.IntField.__init__(self, 1954, data)

class LoanFacility(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1955)
		else:
			quickfix.IntField.__init__(self, 1955, data)

class ReferenceEntityType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1956)
		else:
			quickfix.IntField.__init__(self, 1956, data)

class IndexSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1957)
		else:
			quickfix.IntField.__init__(self, 1957, data)

class IndexAnnexVersion(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1958)
		else:
			quickfix.IntField.__init__(self, 1958, data)

class IndexAnnexDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1959)
		else:
			quickfix.StringField.__init__(self, 1959, data)

class IndexAnnexSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1960)
		else:
			quickfix.StringField.__init__(self, 1960, data)

class AgreementVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1961)
		else:
			quickfix.StringField.__init__(self, 1961, data)

class MasterConfirmationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1962)
		else:
			quickfix.StringField.__init__(self, 1962, data)

class MasterConfirmationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1963)
		else:
			quickfix.StringField.__init__(self, 1963, data)

class MasterConfirmationAnnexDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1964)
		else:
			quickfix.StringField.__init__(self, 1964, data)

class MasterConfirmationAnnexDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1965)
		else:
			quickfix.StringField.__init__(self, 1965, data)

class BrokerConfirmationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1966)
		else:
			quickfix.StringField.__init__(self, 1966, data)

class CreditSupportAgreementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1967)
		else:
			quickfix.StringField.__init__(self, 1967, data)

class CreditSupportAgreementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1968)
		else:
			quickfix.StringField.__init__(self, 1968, data)

class CreditSupportAgreementID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1969)
		else:
			quickfix.StringField.__init__(self, 1969, data)

class GoverningLaw(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1970)
		else:
			quickfix.StringField.__init__(self, 1970, data)

class NoSideRegulatoryTradeIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1971)
		else:
			quickfix.IntField.__init__(self, 1971, data)

class SideRegulatoryTradeID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1972)
		else:
			quickfix.StringField.__init__(self, 1972, data)

class SideRegulatoryTradeIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1973)
		else:
			quickfix.StringField.__init__(self, 1973, data)

class SideRegulatoryTradeIDEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1974)
		else:
			quickfix.IntField.__init__(self, 1974, data)

class SideRegulatoryTradeIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1975)
		else:
			quickfix.IntField.__init__(self, 1975, data)

class NoSecondaryAssetClasses(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1976)
		else:
			quickfix.IntField.__init__(self, 1976, data)

class SecondaryAssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1977)
		else:
			quickfix.IntField.__init__(self, 1977, data)

class SecondaryAssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1978)
		else:
			quickfix.IntField.__init__(self, 1978, data)

class SecondaryAssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1979)
		else:
			quickfix.StringField.__init__(self, 1979, data)

class BlockTrdAllocIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1980)
		else:
			quickfix.IntField.__init__(self, 1980, data)

class NoUnderlyingEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1981)
		else:
			quickfix.IntField.__init__(self, 1981, data)

class UnderlyingEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1982)
		else:
			quickfix.IntField.__init__(self, 1982, data)

class UnderlyingEventDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1983)
		else:
			quickfix.StringField.__init__(self, 1983, data)

class UnderlyingEventTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 1984)
		else:
			quickfix.UtcTimeStampField.__init__(self, 1984, data)

class UnderlyingEventTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1985)
		else:
			quickfix.StringField.__init__(self, 1985, data)

class UnderlyingEventTimePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1986)
		else:
			quickfix.IntField.__init__(self, 1986, data)

class UnderlyingEventPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1987)
		else:
			quickfix.DoubleField.__init__(self, 1987, data)

class UnderlyingConstituentWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1988)
		else:
			quickfix.DoubleField.__init__(self, 1988, data)

class UnderlyingCouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1989)
		else:
			quickfix.IntField.__init__(self, 1989, data)

class UnderlyingTotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1990)
		else:
			quickfix.DoubleField.__init__(self, 1990, data)

class UnderlyingCouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1991)
		else:
			quickfix.IntField.__init__(self, 1991, data)

class UnderlyingCouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1992)
		else:
			quickfix.StringField.__init__(self, 1992, data)

class UnderlyingCouponDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1993)
		else:
			quickfix.IntField.__init__(self, 1993, data)

class UnderlyingObligationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1994)
		else:
			quickfix.StringField.__init__(self, 1994, data)

class UnderlyingObligationIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1995)
		else:
			quickfix.StringField.__init__(self, 1995, data)

class UnderlyingEquityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1996)
		else:
			quickfix.StringField.__init__(self, 1996, data)

class UnderlyingEquityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1997)
		else:
			quickfix.StringField.__init__(self, 1997, data)

class UnderlyingLienSeniority(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1998)
		else:
			quickfix.IntField.__init__(self, 1998, data)

class UnderlyingLoanFacility(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1999)
		else:
			quickfix.IntField.__init__(self, 1999, data)

class UnderlyingReferenceEntityType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2000)
		else:
			quickfix.IntField.__init__(self, 2000, data)

class UnderlyingProtectionTermXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41314)
		else:
			quickfix.StringField.__init__(self, 41314, data)

class UnderlyingSettlTermXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41315)
		else:
			quickfix.StringField.__init__(self, 41315, data)

class UnderlyingIndexSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2003)
		else:
			quickfix.IntField.__init__(self, 2003, data)

class UnderlyingIndexAnnexVersion(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2004)
		else:
			quickfix.IntField.__init__(self, 2004, data)

class UnderlyingIndexAnnexDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2005)
		else:
			quickfix.StringField.__init__(self, 2005, data)

class UnderlyingIndexAnnexSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2006)
		else:
			quickfix.StringField.__init__(self, 2006, data)

class UnderlyingProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2007)
		else:
			quickfix.StringField.__init__(self, 2007, data)

class UnderlyingSecurityGroup(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2008)
		else:
			quickfix.StringField.__init__(self, 2008, data)

class UnderlyingSettleOnOpenFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2009)
		else:
			quickfix.StringField.__init__(self, 2009, data)

class UnderlyingAssignmentMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2010)
		else:
			quickfix.CharField.__init__(self, 2010, data)

class UnderlyingSecurityStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2011)
		else:
			quickfix.StringField.__init__(self, 2011, data)

class UnderlyingObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2012)
		else:
			quickfix.StringField.__init__(self, 2012, data)

class UnderlyingAssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2013)
		else:
			quickfix.IntField.__init__(self, 2013, data)

class UnderlyingAssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2014)
		else:
			quickfix.IntField.__init__(self, 2014, data)

class UnderlyingAssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2015)
		else:
			quickfix.StringField.__init__(self, 2015, data)

class UnderlyingSwapClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2016)
		else:
			quickfix.StringField.__init__(self, 2016, data)

class UnderlyingNthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2017)
		else:
			quickfix.IntField.__init__(self, 2017, data)

class UnderlyingMthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2018)
		else:
			quickfix.IntField.__init__(self, 2018, data)

class UnderlyingSettledEntityMatrixSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2019)
		else:
			quickfix.StringField.__init__(self, 2019, data)

class UnderlyingSettledEntityMatrixPublicationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2020)
		else:
			quickfix.StringField.__init__(self, 2020, data)

class UnderlyingStrikeMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2021)
		else:
			quickfix.DoubleField.__init__(self, 2021, data)

class UnderlyingStrikeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2022)
		else:
			quickfix.DoubleField.__init__(self, 2022, data)

class UnderlyingStrikePriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2023)
		else:
			quickfix.IntField.__init__(self, 2023, data)

class UnderlyingStrikePriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2024)
		else:
			quickfix.IntField.__init__(self, 2024, data)

class UnderlyingStrikePriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2025)
		else:
			quickfix.DoubleField.__init__(self, 2025, data)

class UnderlyingMinPriceIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2026)
		else:
			quickfix.DoubleField.__init__(self, 2026, data)

class UnderlyingMinPriceIncrementAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2027)
		else:
			quickfix.DoubleField.__init__(self, 2027, data)

class UnderlyingOptPayoutType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2028)
		else:
			quickfix.IntField.__init__(self, 2028, data)

class UnderlyingOptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2029)
		else:
			quickfix.DoubleField.__init__(self, 2029, data)

class UnderlyingPriceQuoteMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2030)
		else:
			quickfix.StringField.__init__(self, 2030, data)

class UnderlyingValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2031)
		else:
			quickfix.StringField.__init__(self, 2031, data)

class UnderlyingListMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2032)
		else:
			quickfix.IntField.__init__(self, 2032, data)

class UnderlyingCapPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2033)
		else:
			quickfix.DoubleField.__init__(self, 2033, data)

class UnderlyingFloorPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2034)
		else:
			quickfix.DoubleField.__init__(self, 2034, data)

class UnderlyingFlexibleIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2035)
		else:
			quickfix.BoolField.__init__(self, 2035, data)

class UnderlyingFlexProductEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2036)
		else:
			quickfix.BoolField.__init__(self, 2036, data)

class UnderlyingPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2037)
		else:
			quickfix.IntField.__init__(self, 2037, data)

class UnderlyingNTPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2038)
		else:
			quickfix.IntField.__init__(self, 2038, data)

class UnderlyingPool(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2039)
		else:
			quickfix.StringField.__init__(self, 2039, data)

class UnderlyingContractSettlMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2040)
		else:
			quickfix.StringField.__init__(self, 2040, data)

class UnderlyingDatedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2041)
		else:
			quickfix.StringField.__init__(self, 2041, data)

class UnderlyingInterestAccrualDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2042)
		else:
			quickfix.StringField.__init__(self, 2042, data)

class UnderlyingShortSaleRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2043)
		else:
			quickfix.IntField.__init__(self, 2043, data)

class UnderlyingRefTickTableID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2044)
		else:
			quickfix.IntField.__init__(self, 2044, data)

class NoUnderlyingComplexEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2045)
		else:
			quickfix.IntField.__init__(self, 2045, data)

class UnderlyingComplexEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2046)
		else:
			quickfix.IntField.__init__(self, 2046, data)

class UnderlyingComplexOptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2047)
		else:
			quickfix.DoubleField.__init__(self, 2047, data)

class UnderlyingComplexEventPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2048)
		else:
			quickfix.DoubleField.__init__(self, 2048, data)

class UnderlyingComplexEventPriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2049)
		else:
			quickfix.IntField.__init__(self, 2049, data)

class UnderlyingComplexEventPriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2050)
		else:
			quickfix.DoubleField.__init__(self, 2050, data)

class UnderlyingComplexEventPriceTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2051)
		else:
			quickfix.IntField.__init__(self, 2051, data)

class UnderlyingComplexEventCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2052)
		else:
			quickfix.IntField.__init__(self, 2052, data)

class NoUnderlyingComplexEventDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2053)
		else:
			quickfix.IntField.__init__(self, 2053, data)

class UnderlyingComplexEventStartDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 2054)
		else:
			quickfix.UtcDateField.__init__(self, 2054, data)

class UnderlyingComplexEventEndDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 2055)
		else:
			quickfix.UtcDateField.__init__(self, 2055, data)

class NoUnderlyingComplexEventTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2056)
		else:
			quickfix.IntField.__init__(self, 2056, data)

class UnderlyingComplexEventStartTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2057)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2057, data)

class UnderlyingComplexEventEndTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2058)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2058, data)

class NoLegEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2059)
		else:
			quickfix.IntField.__init__(self, 2059, data)

class LegEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2060)
		else:
			quickfix.IntField.__init__(self, 2060, data)

class LegEventDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2061)
		else:
			quickfix.StringField.__init__(self, 2061, data)

class LegEventTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2062)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2062, data)

class LegEventTimeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2063)
		else:
			quickfix.StringField.__init__(self, 2063, data)

class LegEventTimePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2064)
		else:
			quickfix.IntField.__init__(self, 2064, data)

class LegEventPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2065)
		else:
			quickfix.DoubleField.__init__(self, 2065, data)

class LegEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2066)
		else:
			quickfix.StringField.__init__(self, 2066, data)

class LegAssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2067)
		else:
			quickfix.IntField.__init__(self, 2067, data)

class LegAssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2068)
		else:
			quickfix.IntField.__init__(self, 2068, data)

class LegAssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2069)
		else:
			quickfix.StringField.__init__(self, 2069, data)

class LegSwapClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2070)
		else:
			quickfix.StringField.__init__(self, 2070, data)

class UnderlyingEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2071)
		else:
			quickfix.StringField.__init__(self, 2071, data)

class EncodedUnderlyingEventTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2072)
		else:
			quickfix.IntField.__init__(self, 2072, data)

class EncodedUnderlyingEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2073)
		else:
			quickfix.StringField.__init__(self, 2073, data)

class EncodedLegEventTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2074)
		else:
			quickfix.IntField.__init__(self, 2074, data)

class EncodedLegEventText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2075)
		else:
			quickfix.StringField.__init__(self, 2075, data)

class NoLegSecondaryAssetClasses(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2076)
		else:
			quickfix.IntField.__init__(self, 2076, data)

class LegSecondaryAssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2077)
		else:
			quickfix.IntField.__init__(self, 2077, data)

class LegSecondaryAssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2078)
		else:
			quickfix.IntField.__init__(self, 2078, data)

class LegSecondaryAssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2079)
		else:
			quickfix.StringField.__init__(self, 2079, data)

class NoUnderlyingSecondaryAssetClasses(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2080)
		else:
			quickfix.IntField.__init__(self, 2080, data)

class UnderlyingSecondaryAssetClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2081)
		else:
			quickfix.IntField.__init__(self, 2081, data)

class UnderlyingSecondaryAssetSubClass(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2082)
		else:
			quickfix.IntField.__init__(self, 2082, data)

class UnderlyingSecondaryAssetType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2083)
		else:
			quickfix.StringField.__init__(self, 2083, data)

class NoAdditionalTermBondRefs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40000)
		else:
			quickfix.IntField.__init__(self, 40000, data)

class AdditionalTermBondSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40001)
		else:
			quickfix.StringField.__init__(self, 40001, data)

class AdditionalTermBondSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40002)
		else:
			quickfix.StringField.__init__(self, 40002, data)

class AdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40003)
		else:
			quickfix.StringField.__init__(self, 40003, data)

class EncodedAdditionalTermBondDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40004)
		else:
			quickfix.IntField.__init__(self, 40004, data)

class EncodedAdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40005)
		else:
			quickfix.StringField.__init__(self, 40005, data)

class AdditionalTermBondCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40006)
		else:
			quickfix.StringField.__init__(self, 40006, data)

class AdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40007)
		else:
			quickfix.StringField.__init__(self, 40007, data)

class EncodedAdditionalTermBondIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40008)
		else:
			quickfix.IntField.__init__(self, 40008, data)

class EncodedAdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40009)
		else:
			quickfix.StringField.__init__(self, 40009, data)

class AdditionalTermBondSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40010)
		else:
			quickfix.StringField.__init__(self, 40010, data)

class AdditionalTermBondCouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40011)
		else:
			quickfix.IntField.__init__(self, 40011, data)

class AdditionalTermBondCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40012)
		else:
			quickfix.DoubleField.__init__(self, 40012, data)

class AdditionalTermBondMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40013)
		else:
			quickfix.StringField.__init__(self, 40013, data)

class AdditionalTermBondParValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40014)
		else:
			quickfix.DoubleField.__init__(self, 40014, data)

class AdditionalTermBondCurrentTotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40015)
		else:
			quickfix.DoubleField.__init__(self, 40015, data)

class AdditionalTermBondCouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40016)
		else:
			quickfix.IntField.__init__(self, 40016, data)

class AdditionalTermBondCouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40017)
		else:
			quickfix.StringField.__init__(self, 40017, data)

class AdditionalTermBondDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40018)
		else:
			quickfix.IntField.__init__(self, 40018, data)

class NoAdditionalTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40019)
		else:
			quickfix.IntField.__init__(self, 40019, data)

class AdditionalTermConditionPrecedentBondIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40020)
		else:
			quickfix.BoolField.__init__(self, 40020, data)

class AdditionalTermDiscrepancyClauseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40021)
		else:
			quickfix.BoolField.__init__(self, 40021, data)

class NoCashSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40022)
		else:
			quickfix.IntField.__init__(self, 40022, data)

class CashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40023)
		else:
			quickfix.StringField.__init__(self, 40023, data)

class CashSettlValuationFirstBusinessDayOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40024)
		else:
			quickfix.IntField.__init__(self, 40024, data)

class CashSettlValuationSubsequentBusinessDaysOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40916)
		else:
			quickfix.IntField.__init__(self, 40916, data)

class CashSettlNumOfValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40917)
		else:
			quickfix.IntField.__init__(self, 40917, data)

class CashSettlValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40025)
		else:
			quickfix.StringField.__init__(self, 40025, data)

class CashSettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40026)
		else:
			quickfix.StringField.__init__(self, 40026, data)

class CashSettlQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40027)
		else:
			quickfix.IntField.__init__(self, 40027, data)

class CashSettlQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40028)
		else:
			quickfix.DoubleField.__init__(self, 40028, data)

class CashSettlQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40029)
		else:
			quickfix.StringField.__init__(self, 40029, data)

class CashSettlMinimumQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40030)
		else:
			quickfix.DoubleField.__init__(self, 40030, data)

class CashSettlMinimumQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40031)
		else:
			quickfix.StringField.__init__(self, 40031, data)

class CashSettlDealer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40032)
		else:
			quickfix.StringField.__init__(self, 40032, data)

class CashSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40033)
		else:
			quickfix.IntField.__init__(self, 40033, data)

class CashSettlAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40034)
		else:
			quickfix.DoubleField.__init__(self, 40034, data)

class CashSettlRecoveryFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40035)
		else:
			quickfix.DoubleField.__init__(self, 40035, data)

class CashSettlFixedTermIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40036)
		else:
			quickfix.BoolField.__init__(self, 40036, data)

class CashSettlAccruedInterestIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40037)
		else:
			quickfix.BoolField.__init__(self, 40037, data)

class CashSettlValuationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40038)
		else:
			quickfix.IntField.__init__(self, 40038, data)

class CashSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40039)
		else:
			quickfix.StringField.__init__(self, 40039, data)

class NoContractualDefinitions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40040)
		else:
			quickfix.IntField.__init__(self, 40040, data)

class ContractualDefinition(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40041)
		else:
			quickfix.StringField.__init__(self, 40041, data)

class NoContractualMatrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40042)
		else:
			quickfix.IntField.__init__(self, 40042, data)

class ContractualMatrixSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40043)
		else:
			quickfix.StringField.__init__(self, 40043, data)

class ContractualMatrixDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40044)
		else:
			quickfix.StringField.__init__(self, 40044, data)

class ContractualMatrixTerm(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40045)
		else:
			quickfix.StringField.__init__(self, 40045, data)

class NoFinancingTermSupplements(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40046)
		else:
			quickfix.IntField.__init__(self, 40046, data)

class FinancingTermSupplementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40047)
		else:
			quickfix.StringField.__init__(self, 40047, data)

class FinancingTermSupplementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40048)
		else:
			quickfix.StringField.__init__(self, 40048, data)

class NoStreams(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40049)
		else:
			quickfix.IntField.__init__(self, 40049, data)

class StreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40050)
		else:
			quickfix.IntField.__init__(self, 40050, data)

class StreamDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40051)
		else:
			quickfix.StringField.__init__(self, 40051, data)

class StreamPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40052)
		else:
			quickfix.IntField.__init__(self, 40052, data)

class StreamReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40053)
		else:
			quickfix.IntField.__init__(self, 40053, data)

class StreamNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40054)
		else:
			quickfix.DoubleField.__init__(self, 40054, data)

class StreamCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40055)
		else:
			quickfix.StringField.__init__(self, 40055, data)

class StreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40056)
		else:
			quickfix.StringField.__init__(self, 40056, data)

class UnderlyingStreamEffectiveDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40057)
		else:
			quickfix.StringField.__init__(self, 40057, data)

class UnderlyingStreamEffectiveDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40058)
		else:
			quickfix.IntField.__init__(self, 40058, data)

class UnderlyingStreamEffectiveDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40059)
		else:
			quickfix.StringField.__init__(self, 40059, data)

class UnderlyingStreamEffectiveDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40060)
		else:
			quickfix.IntField.__init__(self, 40060, data)

class UnderlyingStreamEffectiveDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40061)
		else:
			quickfix.IntField.__init__(self, 40061, data)

class UnderlyingStreamEffectiveDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40062)
		else:
			quickfix.StringField.__init__(self, 40062, data)

class UnderlyingStreamEffectiveDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40063)
		else:
			quickfix.IntField.__init__(self, 40063, data)

class UnderlyingStreamEffectiveDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40064)
		else:
			quickfix.StringField.__init__(self, 40064, data)

class StreamTerminationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40065)
		else:
			quickfix.StringField.__init__(self, 40065, data)

class StreamTerminationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40066)
		else:
			quickfix.IntField.__init__(self, 40066, data)

class StreamTerminationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40067)
		else:
			quickfix.StringField.__init__(self, 40067, data)

class StreamTerminationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40068)
		else:
			quickfix.IntField.__init__(self, 40068, data)

class StreamTerminationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40069)
		else:
			quickfix.IntField.__init__(self, 40069, data)

class StreamTerminationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40070)
		else:
			quickfix.StringField.__init__(self, 40070, data)

class StreamTerminationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40071)
		else:
			quickfix.IntField.__init__(self, 40071, data)

class StreamTerminationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40072)
		else:
			quickfix.StringField.__init__(self, 40072, data)

class StreamCalculationPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40073)
		else:
			quickfix.IntField.__init__(self, 40073, data)

class StreamCalculationPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40074)
		else:
			quickfix.StringField.__init__(self, 40074, data)

class StreamFirstPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40075)
		else:
			quickfix.StringField.__init__(self, 40075, data)

class StreamFirstPeriodStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40076)
		else:
			quickfix.IntField.__init__(self, 40076, data)

class StreamFirstPeriodStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40077)
		else:
			quickfix.StringField.__init__(self, 40077, data)

class StreamFirstPeriodStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40078)
		else:
			quickfix.StringField.__init__(self, 40078, data)

class StreamFirstRegularPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40079)
		else:
			quickfix.StringField.__init__(self, 40079, data)

class StreamFirstCompoundingPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40080)
		else:
			quickfix.StringField.__init__(self, 40080, data)

class StreamLastRegularPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40081)
		else:
			quickfix.StringField.__init__(self, 40081, data)

class StreamCalculationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40082)
		else:
			quickfix.IntField.__init__(self, 40082, data)

class StreamCalculationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40083)
		else:
			quickfix.StringField.__init__(self, 40083, data)

class StreamCalculationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40084)
		else:
			quickfix.StringField.__init__(self, 40084, data)

class NoSettlRateFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40085)
		else:
			quickfix.IntField.__init__(self, 40085, data)

class SettlRatePostponementMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40086)
		else:
			quickfix.IntField.__init__(self, 40086, data)

class LegPaymentStreamNonDeliverableSettlRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40087)
		else:
			quickfix.IntField.__init__(self, 40087, data)

class SettlRatePostponementSurvey(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40088)
		else:
			quickfix.BoolField.__init__(self, 40088, data)

class SettlRatePostponementCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40089)
		else:
			quickfix.IntField.__init__(self, 40089, data)

class NoProvisions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40090)
		else:
			quickfix.IntField.__init__(self, 40090, data)

class ProvisionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40091)
		else:
			quickfix.IntField.__init__(self, 40091, data)

class ProvisionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40092)
		else:
			quickfix.StringField.__init__(self, 40092, data)

class ProvisionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40093)
		else:
			quickfix.IntField.__init__(self, 40093, data)

class ProvisionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40094)
		else:
			quickfix.StringField.__init__(self, 40094, data)

class ProvisionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40095)
		else:
			quickfix.StringField.__init__(self, 40095, data)

class ProvisionDateTenorPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40096)
		else:
			quickfix.IntField.__init__(self, 40096, data)

class ProvisionDateTenorUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40097)
		else:
			quickfix.StringField.__init__(self, 40097, data)

class ProvisionCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40098)
		else:
			quickfix.IntField.__init__(self, 40098, data)

class ProvisionOptionSinglePartyBuyerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40099)
		else:
			quickfix.IntField.__init__(self, 40099, data)

class ProvisionOptionSinglePartySellerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40100)
		else:
			quickfix.IntField.__init__(self, 40100, data)

class ProvisionOptionExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40101)
		else:
			quickfix.IntField.__init__(self, 40101, data)

class ProvisionOptionExerciseMultipleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40102)
		else:
			quickfix.DoubleField.__init__(self, 40102, data)

class ProvisionOptionExerciseMinimumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40103)
		else:
			quickfix.DoubleField.__init__(self, 40103, data)

class ProvisionOptionExerciseMaximumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40104)
		else:
			quickfix.DoubleField.__init__(self, 40104, data)

class ProvisionOptionMinimumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40105)
		else:
			quickfix.IntField.__init__(self, 40105, data)

class ProvisionOptionMaximumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40106)
		else:
			quickfix.IntField.__init__(self, 40106, data)

class ProvisionOptionExerciseConfirmation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40107)
		else:
			quickfix.BoolField.__init__(self, 40107, data)

class ProvisionCashSettlMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40108)
		else:
			quickfix.IntField.__init__(self, 40108, data)

class ProvisionCashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40109)
		else:
			quickfix.StringField.__init__(self, 40109, data)

class ProvisionCashSettlCurrency2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40110)
		else:
			quickfix.StringField.__init__(self, 40110, data)

class ProvisionCashSettlQuoteType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40111)
		else:
			quickfix.IntField.__init__(self, 40111, data)

class ProvisionCashSettlQuoteSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40112)
		else:
			quickfix.IntField.__init__(self, 40112, data)

class ProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40113)
		else:
			quickfix.StringField.__init__(self, 40113, data)

class ProvisionCashSettlValueTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40114)
		else:
			quickfix.StringField.__init__(self, 40114, data)

class ProvisionCashSettlValueTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40115)
		else:
			quickfix.StringField.__init__(self, 40115, data)

class ProvisionCashSettlValueDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40116)
		else:
			quickfix.IntField.__init__(self, 40116, data)

class ProvisionCashSettlValueDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40117)
		else:
			quickfix.StringField.__init__(self, 40117, data)

class ProvisionCashSettlValueDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40118)
		else:
			quickfix.IntField.__init__(self, 40118, data)

class ProvisionCashSettlValueDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40119)
		else:
			quickfix.IntField.__init__(self, 40119, data)

class ProvisionCashSettlValueDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40120)
		else:
			quickfix.StringField.__init__(self, 40120, data)

class ProvisionCashSettlValueDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40121)
		else:
			quickfix.IntField.__init__(self, 40121, data)

class ProvisionCashSettlValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40122)
		else:
			quickfix.StringField.__init__(self, 40122, data)

class ProvisionOptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40123)
		else:
			quickfix.IntField.__init__(self, 40123, data)

class ProvisionOptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40124)
		else:
			quickfix.StringField.__init__(self, 40124, data)

class ProvisionOptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40125)
		else:
			quickfix.IntField.__init__(self, 40125, data)

class ProvisionOptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40126)
		else:
			quickfix.StringField.__init__(self, 40126, data)

class ProvisionOptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40127)
		else:
			quickfix.IntField.__init__(self, 40127, data)

class ProvisionOptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40128)
		else:
			quickfix.StringField.__init__(self, 40128, data)

class ProvisionOptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40129)
		else:
			quickfix.StringField.__init__(self, 40129, data)

class ProvisionOptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40130)
		else:
			quickfix.IntField.__init__(self, 40130, data)

class ProvisionOptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40131)
		else:
			quickfix.IntField.__init__(self, 40131, data)

class ProvisionOptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40132)
		else:
			quickfix.StringField.__init__(self, 40132, data)

class ProvisionOptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40133)
		else:
			quickfix.IntField.__init__(self, 40133, data)

class ProvisionOptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40134)
		else:
			quickfix.StringField.__init__(self, 40134, data)

class ProvisionOptionExercisePeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40135)
		else:
			quickfix.IntField.__init__(self, 40135, data)

class ProvisionOptionExerciseBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40136)
		else:
			quickfix.StringField.__init__(self, 40136, data)

class ProvisionOptionExerciseBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40137)
		else:
			quickfix.StringField.__init__(self, 40137, data)

class ProvisionOptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40138)
		else:
			quickfix.StringField.__init__(self, 40138, data)

class ProvisionOptionExerciseEarliestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40139)
		else:
			quickfix.StringField.__init__(self, 40139, data)

class ProvisionOptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40140)
		else:
			quickfix.StringField.__init__(self, 40140, data)

class ProvisionOptionExerciseLatestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40141)
		else:
			quickfix.StringField.__init__(self, 40141, data)

class NoProvisionOptionExerciseFixedDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40142)
		else:
			quickfix.IntField.__init__(self, 40142, data)

class ProvisionOptionExerciseFixedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40143)
		else:
			quickfix.StringField.__init__(self, 40143, data)

class ProvisionOptionExerciseFixedDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40144)
		else:
			quickfix.IntField.__init__(self, 40144, data)

class ProvisionOptionExpirationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40145)
		else:
			quickfix.StringField.__init__(self, 40145, data)

class ProvisionOptionExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40146)
		else:
			quickfix.IntField.__init__(self, 40146, data)

class ProvisionOptionExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40147)
		else:
			quickfix.StringField.__init__(self, 40147, data)

class ProvisionOptionExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40148)
		else:
			quickfix.IntField.__init__(self, 40148, data)

class ProvisionOptionExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40149)
		else:
			quickfix.IntField.__init__(self, 40149, data)

class ProvisionOptionExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40150)
		else:
			quickfix.StringField.__init__(self, 40150, data)

class ProvisionOptionExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40151)
		else:
			quickfix.IntField.__init__(self, 40151, data)

class ProvisionOptionExpirationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40152)
		else:
			quickfix.StringField.__init__(self, 40152, data)

class ProvisionOptionExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40153)
		else:
			quickfix.StringField.__init__(self, 40153, data)

class ProvisionOptionExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40154)
		else:
			quickfix.StringField.__init__(self, 40154, data)

class ProvisionOptionRelevantUnderlyingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40155)
		else:
			quickfix.StringField.__init__(self, 40155, data)

class ProvisionOptionRelevantUnderlyingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40156)
		else:
			quickfix.IntField.__init__(self, 40156, data)

class ProvisionOptionRelevantUnderlyingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40157)
		else:
			quickfix.StringField.__init__(self, 40157, data)

class ProvisionOptionRelevantUnderlyingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40158)
		else:
			quickfix.IntField.__init__(self, 40158, data)

class ProvisionOptionRelevantUnderlyingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40159)
		else:
			quickfix.IntField.__init__(self, 40159, data)

class ProvisionOptionRelevantUnderlyingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40160)
		else:
			quickfix.StringField.__init__(self, 40160, data)

class ProvisionOptionRelevantUnderlyingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40161)
		else:
			quickfix.IntField.__init__(self, 40161, data)

class ProvisionOptionRelevantUnderlyingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40162)
		else:
			quickfix.StringField.__init__(self, 40162, data)

class ProvisionCashSettlPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40163)
		else:
			quickfix.IntField.__init__(self, 40163, data)

class ProvisionCashSettlPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40164)
		else:
			quickfix.StringField.__init__(self, 40164, data)

class ProvisionCashSettlPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40165)
		else:
			quickfix.IntField.__init__(self, 40165, data)

class ProvisionCashSettlPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40166)
		else:
			quickfix.IntField.__init__(self, 40166, data)

class ProvisionCashSettlPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40167)
		else:
			quickfix.StringField.__init__(self, 40167, data)

class ProvisionCashSettlPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40168)
		else:
			quickfix.IntField.__init__(self, 40168, data)

class ProvisionCashSettlPaymentDateRangeFirst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40169)
		else:
			quickfix.StringField.__init__(self, 40169, data)

class ProvisionCashSettlPaymentDateRangeLast(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40170)
		else:
			quickfix.StringField.__init__(self, 40170, data)

class NoProvisionCashSettlPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40171)
		else:
			quickfix.IntField.__init__(self, 40171, data)

class ProvisionCashSettlPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40172)
		else:
			quickfix.StringField.__init__(self, 40172, data)

class ProvisionCashSettlPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40173)
		else:
			quickfix.IntField.__init__(self, 40173, data)

class NoProvisionPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40174)
		else:
			quickfix.IntField.__init__(self, 40174, data)

class ProvisionPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40175)
		else:
			quickfix.StringField.__init__(self, 40175, data)

class ProvisionPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40176)
		else:
			quickfix.CharField.__init__(self, 40176, data)

class ProvisionPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40177)
		else:
			quickfix.IntField.__init__(self, 40177, data)

class NoProvisionPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40178)
		else:
			quickfix.IntField.__init__(self, 40178, data)

class ProvisionPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40179)
		else:
			quickfix.StringField.__init__(self, 40179, data)

class ProvisionPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40180)
		else:
			quickfix.IntField.__init__(self, 40180, data)

class NoProtectionTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40181)
		else:
			quickfix.IntField.__init__(self, 40181, data)

class ProtectionTermNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40182)
		else:
			quickfix.DoubleField.__init__(self, 40182, data)

class ProtectionTermCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40183)
		else:
			quickfix.StringField.__init__(self, 40183, data)

class ProtectionTermSellerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40184)
		else:
			quickfix.BoolField.__init__(self, 40184, data)

class ProtectionTermBuyerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40185)
		else:
			quickfix.BoolField.__init__(self, 40185, data)

class ProtectionTermEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40186)
		else:
			quickfix.StringField.__init__(self, 40186, data)

class ProtectionTermStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40187)
		else:
			quickfix.BoolField.__init__(self, 40187, data)

class ProtectionTermEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40188)
		else:
			quickfix.IntField.__init__(self, 40188, data)

class ProtectionTermEventNewsSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40189)
		else:
			quickfix.StringField.__init__(self, 40189, data)

class ProtectionTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40190)
		else:
			quickfix.StringField.__init__(self, 40190, data)

class NoProtectionTermEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40191)
		else:
			quickfix.IntField.__init__(self, 40191, data)

class ProtectionTermEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40192)
		else:
			quickfix.StringField.__init__(self, 40192, data)

class ProtectionTermEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40193)
		else:
			quickfix.StringField.__init__(self, 40193, data)

class ProtectionTermEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40194)
		else:
			quickfix.StringField.__init__(self, 40194, data)

class ProtectionTermEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40195)
		else:
			quickfix.IntField.__init__(self, 40195, data)

class ProtectionTermEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40196)
		else:
			quickfix.StringField.__init__(self, 40196, data)

class ProtectionTermEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40197)
		else:
			quickfix.IntField.__init__(self, 40197, data)

class ProtectionTermEventRateSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40198)
		else:
			quickfix.StringField.__init__(self, 40198, data)

class NoProtectionTermEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40199)
		else:
			quickfix.IntField.__init__(self, 40199, data)

class ProtectionTermEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40200)
		else:
			quickfix.CharField.__init__(self, 40200, data)

class NoProtectionTermObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40201)
		else:
			quickfix.IntField.__init__(self, 40201, data)

class ProtectionTermObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40202)
		else:
			quickfix.StringField.__init__(self, 40202, data)

class ProtectionTermObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40203)
		else:
			quickfix.StringField.__init__(self, 40203, data)

class NoPhysicalSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40204)
		else:
			quickfix.IntField.__init__(self, 40204, data)

class PhysicalSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40205)
		else:
			quickfix.StringField.__init__(self, 40205, data)

class PhysicalSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40206)
		else:
			quickfix.IntField.__init__(self, 40206, data)

class PhysicalSettlMaximumBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40207)
		else:
			quickfix.IntField.__init__(self, 40207, data)

class PhysicalSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40208)
		else:
			quickfix.StringField.__init__(self, 40208, data)

class NoPhysicalSettlDeliverableObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40209)
		else:
			quickfix.IntField.__init__(self, 40209, data)

class PhysicalSettlDeliverableObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40210)
		else:
			quickfix.StringField.__init__(self, 40210, data)

class PhysicalSettlDeliverableObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40211)
		else:
			quickfix.StringField.__init__(self, 40211, data)

class NoPayments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40212)
		else:
			quickfix.IntField.__init__(self, 40212, data)

class PaymentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40213)
		else:
			quickfix.IntField.__init__(self, 40213, data)

class PaymentPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40214)
		else:
			quickfix.IntField.__init__(self, 40214, data)

class PaymentReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40215)
		else:
			quickfix.IntField.__init__(self, 40215, data)

class PaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40216)
		else:
			quickfix.StringField.__init__(self, 40216, data)

class PaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40217)
		else:
			quickfix.DoubleField.__init__(self, 40217, data)

class PaymentPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40218)
		else:
			quickfix.DoubleField.__init__(self, 40218, data)

class PaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40219)
		else:
			quickfix.StringField.__init__(self, 40219, data)

class PaymentBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40220)
		else:
			quickfix.IntField.__init__(self, 40220, data)

class PaymentBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40221)
		else:
			quickfix.StringField.__init__(self, 40221, data)

class PaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40222)
		else:
			quickfix.StringField.__init__(self, 40222, data)

class PaymentDiscountFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40224)
		else:
			quickfix.DoubleField.__init__(self, 40224, data)

class PaymentPresentValueAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40225)
		else:
			quickfix.DoubleField.__init__(self, 40225, data)

class PaymentPresentValueCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40226)
		else:
			quickfix.StringField.__init__(self, 40226, data)

class PaymentSettlStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40227)
		else:
			quickfix.IntField.__init__(self, 40227, data)

class LegPaymentStreamNonDeliverableSettlReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40228)
		else:
			quickfix.StringField.__init__(self, 40228, data)

class PaymentText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40229)
		else:
			quickfix.StringField.__init__(self, 40229, data)

class NoPaymentSettls(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40230)
		else:
			quickfix.IntField.__init__(self, 40230, data)

class PaymentSettlAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40231)
		else:
			quickfix.DoubleField.__init__(self, 40231, data)

class PaymentSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40232)
		else:
			quickfix.StringField.__init__(self, 40232, data)

class NoPaymentSettlPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40233)
		else:
			quickfix.IntField.__init__(self, 40233, data)

class PaymentSettlPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40234)
		else:
			quickfix.StringField.__init__(self, 40234, data)

class PaymentSettlPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40235)
		else:
			quickfix.CharField.__init__(self, 40235, data)

class PaymentSettlPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40236)
		else:
			quickfix.IntField.__init__(self, 40236, data)

class PaymentSettlPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40237)
		else:
			quickfix.IntField.__init__(self, 40237, data)

class NoPaymentSettlPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40238)
		else:
			quickfix.IntField.__init__(self, 40238, data)

class PaymentSettlPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40239)
		else:
			quickfix.StringField.__init__(self, 40239, data)

class PaymentSettlPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40240)
		else:
			quickfix.IntField.__init__(self, 40240, data)

class NoLegStreams(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40241)
		else:
			quickfix.IntField.__init__(self, 40241, data)

class LegStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40242)
		else:
			quickfix.IntField.__init__(self, 40242, data)

class LegStreamDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40243)
		else:
			quickfix.StringField.__init__(self, 40243, data)

class LegStreamPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40244)
		else:
			quickfix.IntField.__init__(self, 40244, data)

class LegStreamReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40245)
		else:
			quickfix.IntField.__init__(self, 40245, data)

class LegStreamNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40246)
		else:
			quickfix.DoubleField.__init__(self, 40246, data)

class LegStreamCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40247)
		else:
			quickfix.StringField.__init__(self, 40247, data)

class LegStreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40248)
		else:
			quickfix.StringField.__init__(self, 40248, data)

class LegStreamEffectiveDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40249)
		else:
			quickfix.StringField.__init__(self, 40249, data)

class LegStreamEffectiveDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40250)
		else:
			quickfix.IntField.__init__(self, 40250, data)

class LegStreamEffectiveDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40251)
		else:
			quickfix.StringField.__init__(self, 40251, data)

class LegStreamEffectiveDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40252)
		else:
			quickfix.IntField.__init__(self, 40252, data)

class LegStreamEffectiveDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40253)
		else:
			quickfix.IntField.__init__(self, 40253, data)

class LegStreamEffectiveDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40254)
		else:
			quickfix.StringField.__init__(self, 40254, data)

class LegStreamEffectiveDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40255)
		else:
			quickfix.IntField.__init__(self, 40255, data)

class LegStreamEffectiveDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40256)
		else:
			quickfix.StringField.__init__(self, 40256, data)

class LegStreamTerminationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40257)
		else:
			quickfix.StringField.__init__(self, 40257, data)

class LegStreamTerminationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40258)
		else:
			quickfix.IntField.__init__(self, 40258, data)

class LegStreamTerminationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40259)
		else:
			quickfix.StringField.__init__(self, 40259, data)

class LegStreamTerminationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40260)
		else:
			quickfix.IntField.__init__(self, 40260, data)

class LegStreamTerminationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40261)
		else:
			quickfix.IntField.__init__(self, 40261, data)

class LegStreamTerminationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40262)
		else:
			quickfix.StringField.__init__(self, 40262, data)

class LegStreamTerminationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40263)
		else:
			quickfix.IntField.__init__(self, 40263, data)

class LegStreamTerminationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40264)
		else:
			quickfix.StringField.__init__(self, 40264, data)

class LegStreamCalculationPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40265)
		else:
			quickfix.IntField.__init__(self, 40265, data)

class LegStreamCalculationPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40266)
		else:
			quickfix.StringField.__init__(self, 40266, data)

class LegStreamFirstPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40267)
		else:
			quickfix.StringField.__init__(self, 40267, data)

class LegStreamFirstPeriodStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40268)
		else:
			quickfix.IntField.__init__(self, 40268, data)

class LegStreamFirstPeriodStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40269)
		else:
			quickfix.StringField.__init__(self, 40269, data)

class LegStreamFirstPeriodStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40270)
		else:
			quickfix.StringField.__init__(self, 40270, data)

class LegStreamFirstRegularPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40271)
		else:
			quickfix.StringField.__init__(self, 40271, data)

class LegStreamFirstCompoundingPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40272)
		else:
			quickfix.StringField.__init__(self, 40272, data)

class LegStreamLastRegularPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40273)
		else:
			quickfix.StringField.__init__(self, 40273, data)

class LegStreamCalculationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40274)
		else:
			quickfix.IntField.__init__(self, 40274, data)

class LegStreamCalculationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40275)
		else:
			quickfix.StringField.__init__(self, 40275, data)

class LegStreamCalculationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40276)
		else:
			quickfix.StringField.__init__(self, 40276, data)

class NoCashSettlDealers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40277)
		else:
			quickfix.IntField.__init__(self, 40277, data)

class NoBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40278)
		else:
			quickfix.IntField.__init__(self, 40278, data)

class LegPaymentStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40279)
		else:
			quickfix.IntField.__init__(self, 40279, data)

class LegPaymentStreamMarketRate(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40280)
		else:
			quickfix.IntField.__init__(self, 40280, data)

class LegPaymentStreamDelayIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40281)
		else:
			quickfix.BoolField.__init__(self, 40281, data)

class LegPaymentStreamSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40282)
		else:
			quickfix.StringField.__init__(self, 40282, data)

class LegPaymentStreamDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40283)
		else:
			quickfix.IntField.__init__(self, 40283, data)

class LegPaymentStreamAccrualDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40284)
		else:
			quickfix.IntField.__init__(self, 40284, data)

class LegPaymentStreamDiscountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40285)
		else:
			quickfix.IntField.__init__(self, 40285, data)

class LegPaymentStreamDiscountRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40286)
		else:
			quickfix.DoubleField.__init__(self, 40286, data)

class LegPaymentStreamDiscountRateDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40287)
		else:
			quickfix.IntField.__init__(self, 40287, data)

class LegPaymentStreamCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40288)
		else:
			quickfix.IntField.__init__(self, 40288, data)

class LegPaymentStreamInitialPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40289)
		else:
			quickfix.BoolField.__init__(self, 40289, data)

class LegPaymentStreamInterimPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40290)
		else:
			quickfix.BoolField.__init__(self, 40290, data)

class LegPaymentStreamFinalPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40291)
		else:
			quickfix.BoolField.__init__(self, 40291, data)

class LegPaymentStreamPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40292)
		else:
			quickfix.IntField.__init__(self, 40292, data)

class LegPaymentStreamPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40293)
		else:
			quickfix.StringField.__init__(self, 40293, data)

class LegPaymentStreamPaymentFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40294)
		else:
			quickfix.IntField.__init__(self, 40294, data)

class LegPaymentStreamPaymentFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40295)
		else:
			quickfix.StringField.__init__(self, 40295, data)

class LegPaymentStreamPaymentRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40296)
		else:
			quickfix.StringField.__init__(self, 40296, data)

class LegPaymentStreamFirstPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40297)
		else:
			quickfix.StringField.__init__(self, 40297, data)

class LegPaymentStreamLastRegularPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40298)
		else:
			quickfix.StringField.__init__(self, 40298, data)

class LegPaymentStreamPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40299)
		else:
			quickfix.IntField.__init__(self, 40299, data)

class LegPaymentStreamPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40300)
		else:
			quickfix.IntField.__init__(self, 40300, data)

class LegPaymentStreamPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40301)
		else:
			quickfix.StringField.__init__(self, 40301, data)

class LegPaymentStreamPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40302)
		else:
			quickfix.IntField.__init__(self, 40302, data)

class LegPaymentStreamResetDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40303)
		else:
			quickfix.IntField.__init__(self, 40303, data)

class LegPaymentStreamResetDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40304)
		else:
			quickfix.IntField.__init__(self, 40304, data)

class LegPaymentStreamResetDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40305)
		else:
			quickfix.StringField.__init__(self, 40305, data)

class LegPaymentStreamResetFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40306)
		else:
			quickfix.IntField.__init__(self, 40306, data)

class LegPaymentStreamResetFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40307)
		else:
			quickfix.StringField.__init__(self, 40307, data)

class LegPaymentStreamResetWeeklyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40308)
		else:
			quickfix.StringField.__init__(self, 40308, data)

class LegPaymentStreamInitialFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40309)
		else:
			quickfix.IntField.__init__(self, 40309, data)

class LegPaymentStreamInitialFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40310)
		else:
			quickfix.IntField.__init__(self, 40310, data)

class LegPaymentStreamInitialFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40311)
		else:
			quickfix.StringField.__init__(self, 40311, data)

class LegPaymentStreamInitialFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40312)
		else:
			quickfix.IntField.__init__(self, 40312, data)

class LegPaymentStreamInitialFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40313)
		else:
			quickfix.StringField.__init__(self, 40313, data)

class LegPaymentStreamInitialFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40314)
		else:
			quickfix.IntField.__init__(self, 40314, data)

class LegPaymentStreamInitialFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40315)
		else:
			quickfix.StringField.__init__(self, 40315, data)

class LegPaymentStreamFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40316)
		else:
			quickfix.IntField.__init__(self, 40316, data)

class LegPaymentStreamFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40317)
		else:
			quickfix.IntField.__init__(self, 40317, data)

class LegPaymentStreamFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40318)
		else:
			quickfix.StringField.__init__(self, 40318, data)

class LegPaymentStreamFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40319)
		else:
			quickfix.IntField.__init__(self, 40319, data)

class LegPaymentStreamFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40320)
		else:
			quickfix.StringField.__init__(self, 40320, data)

class LegPaymentStreamFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40321)
		else:
			quickfix.IntField.__init__(self, 40321, data)

class LegPaymentStreamFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40322)
		else:
			quickfix.StringField.__init__(self, 40322, data)

class LegPaymentStreamRateCutoffDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40323)
		else:
			quickfix.IntField.__init__(self, 40323, data)

class LegPaymentStreamRateCutoffDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40324)
		else:
			quickfix.StringField.__init__(self, 40324, data)

class LegPaymentStreamRateCutoffDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40325)
		else:
			quickfix.IntField.__init__(self, 40325, data)

class LegPaymentStreamRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40326)
		else:
			quickfix.DoubleField.__init__(self, 40326, data)

class LegPaymentStreamFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40327)
		else:
			quickfix.DoubleField.__init__(self, 40327, data)

class LegPaymentStreamRateOrAmountCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40328)
		else:
			quickfix.StringField.__init__(self, 40328, data)

class LegPaymentStreamFutureValueNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40329)
		else:
			quickfix.DoubleField.__init__(self, 40329, data)

class LegPaymentStreamFutureValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40330)
		else:
			quickfix.StringField.__init__(self, 40330, data)

class LegPaymentStreamRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40331)
		else:
			quickfix.StringField.__init__(self, 40331, data)

class LegPaymentStreamRateIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40332)
		else:
			quickfix.IntField.__init__(self, 40332, data)

class LegPaymentStreamRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40333)
		else:
			quickfix.StringField.__init__(self, 40333, data)

class LegPaymentStreamRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40334)
		else:
			quickfix.IntField.__init__(self, 40334, data)

class LegPaymentStreamRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40335)
		else:
			quickfix.DoubleField.__init__(self, 40335, data)

class LegPaymentStreamRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40336)
		else:
			quickfix.DoubleField.__init__(self, 40336, data)

class LegPaymentStreamRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40337)
		else:
			quickfix.IntField.__init__(self, 40337, data)

class LegPaymentStreamRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40338)
		else:
			quickfix.IntField.__init__(self, 40338, data)

class LegPaymentStreamCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40339)
		else:
			quickfix.DoubleField.__init__(self, 40339, data)

class LegPaymentStreamCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40340)
		else:
			quickfix.IntField.__init__(self, 40340, data)

class LegPaymentStreamCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40341)
		else:
			quickfix.IntField.__init__(self, 40341, data)

class LegPaymentStreamFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40342)
		else:
			quickfix.DoubleField.__init__(self, 40342, data)

class LegPaymentStreamFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40343)
		else:
			quickfix.IntField.__init__(self, 40343, data)

class LegPaymentStreamFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40344)
		else:
			quickfix.IntField.__init__(self, 40344, data)

class LegPaymentStreamInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40345)
		else:
			quickfix.DoubleField.__init__(self, 40345, data)

class LegPaymentStreamFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40346)
		else:
			quickfix.CharField.__init__(self, 40346, data)

class LegPaymentStreamFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40347)
		else:
			quickfix.IntField.__init__(self, 40347, data)

class LegPaymentStreamAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40348)
		else:
			quickfix.IntField.__init__(self, 40348, data)

class LegPaymentStreamNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40349)
		else:
			quickfix.IntField.__init__(self, 40349, data)

class LegPaymentStreamInflationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40350)
		else:
			quickfix.IntField.__init__(self, 40350, data)

class LegPaymentStreamInflationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40351)
		else:
			quickfix.StringField.__init__(self, 40351, data)

class LegPaymentStreamInflationLagDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40352)
		else:
			quickfix.IntField.__init__(self, 40352, data)

class LegPaymentStreamInflationInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40353)
		else:
			quickfix.IntField.__init__(self, 40353, data)

class LegPaymentStreamInflationIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40354)
		else:
			quickfix.IntField.__init__(self, 40354, data)

class LegPaymentStreamInflationPublicationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40355)
		else:
			quickfix.StringField.__init__(self, 40355, data)

class LegPaymentStreamInflationInitialIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40356)
		else:
			quickfix.DoubleField.__init__(self, 40356, data)

class LegPaymentStreamInflationFallbackBondApplicable(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40357)
		else:
			quickfix.BoolField.__init__(self, 40357, data)

class LegPaymentStreamFRADiscounting(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40358)
		else:
			quickfix.IntField.__init__(self, 40358, data)

class LegPaymentStreamNonDeliverableRefCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40359)
		else:
			quickfix.StringField.__init__(self, 40359, data)

class LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40360)
		else:
			quickfix.IntField.__init__(self, 40360, data)

class LegPaymentStreamNonDeliverableFixingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40361)
		else:
			quickfix.StringField.__init__(self, 40361, data)

class LegPaymentStreamNonDeliverableFixingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40362)
		else:
			quickfix.IntField.__init__(self, 40362, data)

class LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40363)
		else:
			quickfix.IntField.__init__(self, 40363, data)

class LegPaymentStreamNonDeliverableFixingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40364)
		else:
			quickfix.StringField.__init__(self, 40364, data)

class LegPaymentStreamNonDeliverableFixingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40365)
		else:
			quickfix.IntField.__init__(self, 40365, data)

class LegSettlRateFallbackRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40366)
		else:
			quickfix.IntField.__init__(self, 40366, data)

class NoLegNonDeliverableFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40367)
		else:
			quickfix.IntField.__init__(self, 40367, data)

class LegNonDeliverableFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40368)
		else:
			quickfix.StringField.__init__(self, 40368, data)

class LegNonDeliverableFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40369)
		else:
			quickfix.IntField.__init__(self, 40369, data)

class LegSettlRateFallbackReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40370)
		else:
			quickfix.StringField.__init__(self, 40370, data)

class PaymentStreamNonDeliverableSettlRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40371)
		else:
			quickfix.IntField.__init__(self, 40371, data)

class PaymentStreamNonDeliverableSettlReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40372)
		else:
			quickfix.StringField.__init__(self, 40372, data)

class SettlRateFallbackRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40373)
		else:
			quickfix.IntField.__init__(self, 40373, data)

class NoLegPaymentSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40374)
		else:
			quickfix.IntField.__init__(self, 40374, data)

class LegPaymentScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40375)
		else:
			quickfix.IntField.__init__(self, 40375, data)

class LegPaymentScheduleStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40376)
		else:
			quickfix.IntField.__init__(self, 40376, data)

class LegPaymentScheduleStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40377)
		else:
			quickfix.StringField.__init__(self, 40377, data)

class LegPaymentScheduleEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40378)
		else:
			quickfix.StringField.__init__(self, 40378, data)

class LegPaymentSchedulePaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40379)
		else:
			quickfix.IntField.__init__(self, 40379, data)

class LegPaymentScheduleReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40380)
		else:
			quickfix.IntField.__init__(self, 40380, data)

class LegPaymentScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40381)
		else:
			quickfix.DoubleField.__init__(self, 40381, data)

class LegPaymentScheduleCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40382)
		else:
			quickfix.StringField.__init__(self, 40382, data)

class LegPaymentScheduleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40383)
		else:
			quickfix.DoubleField.__init__(self, 40383, data)

class LegPaymentScheduleRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40384)
		else:
			quickfix.DoubleField.__init__(self, 40384, data)

class LegPaymentScheduleRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40385)
		else:
			quickfix.DoubleField.__init__(self, 40385, data)

class LegPaymentScheduleRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40386)
		else:
			quickfix.IntField.__init__(self, 40386, data)

class LegPaymentScheduleRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40387)
		else:
			quickfix.IntField.__init__(self, 40387, data)

class LegPaymentScheduleFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40388)
		else:
			quickfix.DoubleField.__init__(self, 40388, data)

class LegPaymentScheduleFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40389)
		else:
			quickfix.StringField.__init__(self, 40389, data)

class LegPaymentScheduleStepFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40390)
		else:
			quickfix.IntField.__init__(self, 40390, data)

class LegPaymentScheduleStepFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40391)
		else:
			quickfix.StringField.__init__(self, 40391, data)

class LegPaymentScheduleStepOffsetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40392)
		else:
			quickfix.DoubleField.__init__(self, 40392, data)

class LegPaymentScheduleStepRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40393)
		else:
			quickfix.DoubleField.__init__(self, 40393, data)

class LegPaymentScheduleStepOffsetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40394)
		else:
			quickfix.DoubleField.__init__(self, 40394, data)

class LegPaymentScheduleStepRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40395)
		else:
			quickfix.IntField.__init__(self, 40395, data)

class LegPaymentScheduleFixingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40396)
		else:
			quickfix.StringField.__init__(self, 40396, data)

class LegPaymentScheduleWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40397)
		else:
			quickfix.DoubleField.__init__(self, 40397, data)

class LegPaymentScheduleFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40398)
		else:
			quickfix.IntField.__init__(self, 40398, data)

class LegPaymentScheduleFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40399)
		else:
			quickfix.IntField.__init__(self, 40399, data)

class LegPaymentScheduleFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40400)
		else:
			quickfix.StringField.__init__(self, 40400, data)

class LegPaymentScheduleFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40401)
		else:
			quickfix.IntField.__init__(self, 40401, data)

class LegPaymentScheduleFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40402)
		else:
			quickfix.StringField.__init__(self, 40402, data)

class LegPaymentScheduleFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40403)
		else:
			quickfix.IntField.__init__(self, 40403, data)

class LegPaymentScheduleFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40404)
		else:
			quickfix.StringField.__init__(self, 40404, data)

class LegPaymentScheduleFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40405)
		else:
			quickfix.StringField.__init__(self, 40405, data)

class LegPaymentScheduleFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40406)
		else:
			quickfix.StringField.__init__(self, 40406, data)

class LegPaymentScheduleInterimExchangePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40407)
		else:
			quickfix.IntField.__init__(self, 40407, data)

class LegPaymentScheduleInterimExchangeDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40408)
		else:
			quickfix.IntField.__init__(self, 40408, data)

class LegPaymentScheduleInterimExchangeDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40409)
		else:
			quickfix.StringField.__init__(self, 40409, data)

class LegPaymentScheduleInterimExchangeDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40410)
		else:
			quickfix.IntField.__init__(self, 40410, data)

class LegPaymentScheduleInterimExchangeDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40411)
		else:
			quickfix.StringField.__init__(self, 40411, data)

class LegPaymentScheduleInterimExchangeDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40412)
		else:
			quickfix.IntField.__init__(self, 40412, data)

class LegPaymentScheduleInterimExchangeDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40413)
		else:
			quickfix.StringField.__init__(self, 40413, data)

class NoLegPaymentScheduleRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40414)
		else:
			quickfix.IntField.__init__(self, 40414, data)

class LegPaymentScheduleRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40415)
		else:
			quickfix.IntField.__init__(self, 40415, data)

class LegPaymentScheduleRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40416)
		else:
			quickfix.IntField.__init__(self, 40416, data)

class LegPaymentScheduleReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40417)
		else:
			quickfix.StringField.__init__(self, 40417, data)

class NoLegPaymentStubs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40418)
		else:
			quickfix.IntField.__init__(self, 40418, data)

class LegPaymentStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40419)
		else:
			quickfix.IntField.__init__(self, 40419, data)

class LegPaymentStubLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40420)
		else:
			quickfix.IntField.__init__(self, 40420, data)

class LegPaymentStubRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40421)
		else:
			quickfix.DoubleField.__init__(self, 40421, data)

class LegPaymentStubFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40422)
		else:
			quickfix.DoubleField.__init__(self, 40422, data)

class LegPaymentStubFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40423)
		else:
			quickfix.StringField.__init__(self, 40423, data)

class LegPaymentStubIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40424)
		else:
			quickfix.StringField.__init__(self, 40424, data)

class LegPaymentStubIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40425)
		else:
			quickfix.IntField.__init__(self, 40425, data)

class LegPaymentStubIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40426)
		else:
			quickfix.IntField.__init__(self, 40426, data)

class LegPaymentStubIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40427)
		else:
			quickfix.StringField.__init__(self, 40427, data)

class LegPaymentStubIndexRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40428)
		else:
			quickfix.DoubleField.__init__(self, 40428, data)

class LegPaymentStubIndexRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40429)
		else:
			quickfix.DoubleField.__init__(self, 40429, data)

class LegPaymentStubIndexRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40430)
		else:
			quickfix.IntField.__init__(self, 40430, data)

class LegPaymentStubIndexRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40431)
		else:
			quickfix.IntField.__init__(self, 40431, data)

class LegPaymentStubIndexCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40432)
		else:
			quickfix.DoubleField.__init__(self, 40432, data)

class LegPaymentStubIndexCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40433)
		else:
			quickfix.IntField.__init__(self, 40433, data)

class LegPaymentStubIndexCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40434)
		else:
			quickfix.IntField.__init__(self, 40434, data)

class LegPaymentStubIndexFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40435)
		else:
			quickfix.DoubleField.__init__(self, 40435, data)

class LegPaymentStubIndexFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40436)
		else:
			quickfix.IntField.__init__(self, 40436, data)

class LegPaymentStubIndexFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40437)
		else:
			quickfix.IntField.__init__(self, 40437, data)

class LegPaymentStubIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40438)
		else:
			quickfix.StringField.__init__(self, 40438, data)

class LegPaymentStubIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40439)
		else:
			quickfix.IntField.__init__(self, 40439, data)

class LegPaymentStubIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40440)
		else:
			quickfix.IntField.__init__(self, 40440, data)

class LegPaymentStubIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40441)
		else:
			quickfix.StringField.__init__(self, 40441, data)

class LegPaymentStubIndex2RateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40442)
		else:
			quickfix.DoubleField.__init__(self, 40442, data)

class LegPaymentStubIndex2RateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40443)
		else:
			quickfix.DoubleField.__init__(self, 40443, data)

class LegPaymentStubIndex2RateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40444)
		else:
			quickfix.IntField.__init__(self, 40444, data)

class LegPaymentStubIndex2RateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40445)
		else:
			quickfix.IntField.__init__(self, 40445, data)

class LegPaymentStubIndex2CapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40446)
		else:
			quickfix.DoubleField.__init__(self, 40446, data)

class LegPaymentStubIndex2FloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40447)
		else:
			quickfix.DoubleField.__init__(self, 40447, data)

class NoLegProvisions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40448)
		else:
			quickfix.IntField.__init__(self, 40448, data)

class LegProvisionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40449)
		else:
			quickfix.IntField.__init__(self, 40449, data)

class LegProvisionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40450)
		else:
			quickfix.StringField.__init__(self, 40450, data)

class LegProvisionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40451)
		else:
			quickfix.IntField.__init__(self, 40451, data)

class LegProvisionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40452)
		else:
			quickfix.StringField.__init__(self, 40452, data)

class LegProvisionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40453)
		else:
			quickfix.StringField.__init__(self, 40453, data)

class LegProvisionDateTenorPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40454)
		else:
			quickfix.IntField.__init__(self, 40454, data)

class LegProvisionDateTenorUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40455)
		else:
			quickfix.StringField.__init__(self, 40455, data)

class LegProvisionCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40456)
		else:
			quickfix.IntField.__init__(self, 40456, data)

class LegProvisionOptionSinglePartyBuyerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40457)
		else:
			quickfix.IntField.__init__(self, 40457, data)

class LegProvisionOptionSinglePartySellerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40458)
		else:
			quickfix.IntField.__init__(self, 40458, data)

class LegProvisionOptionExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40459)
		else:
			quickfix.IntField.__init__(self, 40459, data)

class LegProvisionOptionExerciseMultipleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40460)
		else:
			quickfix.DoubleField.__init__(self, 40460, data)

class LegProvisionOptionExerciseMinimumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40461)
		else:
			quickfix.DoubleField.__init__(self, 40461, data)

class LegProvisionOptionExerciseMaximumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40462)
		else:
			quickfix.DoubleField.__init__(self, 40462, data)

class LegProvisionOptionMinimumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40463)
		else:
			quickfix.IntField.__init__(self, 40463, data)

class LegProvisionOptionMaximumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40464)
		else:
			quickfix.IntField.__init__(self, 40464, data)

class LegProvisionOptionExerciseConfirmation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40465)
		else:
			quickfix.BoolField.__init__(self, 40465, data)

class LegProvisionCashSettlMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40466)
		else:
			quickfix.IntField.__init__(self, 40466, data)

class LegProvisionCashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40467)
		else:
			quickfix.StringField.__init__(self, 40467, data)

class LegProvisionCashSettlCurrency2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40468)
		else:
			quickfix.StringField.__init__(self, 40468, data)

class LegProvisionCashSettlQuoteType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40469)
		else:
			quickfix.IntField.__init__(self, 40469, data)

class LegProvisionCashSettlQuoteSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40470)
		else:
			quickfix.IntField.__init__(self, 40470, data)

class BusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40471)
		else:
			quickfix.StringField.__init__(self, 40471, data)

class LegProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40472)
		else:
			quickfix.StringField.__init__(self, 40472, data)

class NoLegProvisionCashSettlPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40473)
		else:
			quickfix.IntField.__init__(self, 40473, data)

class LegProvisionCashSettlPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40474)
		else:
			quickfix.StringField.__init__(self, 40474, data)

class LegProvisionCashSettlPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40475)
		else:
			quickfix.IntField.__init__(self, 40475, data)

class LegProvisionOptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40476)
		else:
			quickfix.IntField.__init__(self, 40476, data)

class LegProvisionOptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40477)
		else:
			quickfix.StringField.__init__(self, 40477, data)

class LegProvisionOptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40478)
		else:
			quickfix.IntField.__init__(self, 40478, data)

class LegProvisionOptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40479)
		else:
			quickfix.StringField.__init__(self, 40479, data)

class LegProvisionOptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40480)
		else:
			quickfix.IntField.__init__(self, 40480, data)

class LegProvisionOptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40481)
		else:
			quickfix.StringField.__init__(self, 40481, data)

class LegProvisionOptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40482)
		else:
			quickfix.StringField.__init__(self, 40482, data)

class LegProvisionOptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40483)
		else:
			quickfix.IntField.__init__(self, 40483, data)

class LegProvisionOptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40484)
		else:
			quickfix.IntField.__init__(self, 40484, data)

class LegProvisionOptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40485)
		else:
			quickfix.StringField.__init__(self, 40485, data)

class LegProvisionOptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40486)
		else:
			quickfix.IntField.__init__(self, 40486, data)

class LegProvisionOptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40487)
		else:
			quickfix.StringField.__init__(self, 40487, data)

class LegProvisionOptionExercisePeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40488)
		else:
			quickfix.IntField.__init__(self, 40488, data)

class LegProvisionOptionExerciseBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40489)
		else:
			quickfix.StringField.__init__(self, 40489, data)

class LegProvisionOptionExerciseBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40490)
		else:
			quickfix.StringField.__init__(self, 40490, data)

class LegProvisionOptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40491)
		else:
			quickfix.StringField.__init__(self, 40491, data)

class LegProvisionOptionExerciseEarliestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40492)
		else:
			quickfix.StringField.__init__(self, 40492, data)

class LegProvisionOptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40493)
		else:
			quickfix.StringField.__init__(self, 40493, data)

class LegProvisionOptionExerciseLatestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40494)
		else:
			quickfix.StringField.__init__(self, 40494, data)

class NoLegProvisionOptionExerciseFixedDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40495)
		else:
			quickfix.IntField.__init__(self, 40495, data)

class LegProvisionOptionExerciseFixedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40496)
		else:
			quickfix.StringField.__init__(self, 40496, data)

class LegProvisionOptionExerciseFixedDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40497)
		else:
			quickfix.IntField.__init__(self, 40497, data)

class LegProvisionOptionExpirationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40498)
		else:
			quickfix.StringField.__init__(self, 40498, data)

class LegProvisionOptionExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40499)
		else:
			quickfix.IntField.__init__(self, 40499, data)

class LegProvisionOptionExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40500)
		else:
			quickfix.StringField.__init__(self, 40500, data)

class LegProvisionOptionExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40501)
		else:
			quickfix.IntField.__init__(self, 40501, data)

class LegProvisionOptionExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40502)
		else:
			quickfix.IntField.__init__(self, 40502, data)

class LegProvisionOptionExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40503)
		else:
			quickfix.StringField.__init__(self, 40503, data)

class LegProvisionOptionExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40504)
		else:
			quickfix.IntField.__init__(self, 40504, data)

class LegProvisionOptionExpirationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40505)
		else:
			quickfix.StringField.__init__(self, 40505, data)

class LegProvisionOptionExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40506)
		else:
			quickfix.StringField.__init__(self, 40506, data)

class LegProvisionOptionExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40507)
		else:
			quickfix.StringField.__init__(self, 40507, data)

class LegProvisionOptionRelevantUnderlyingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40508)
		else:
			quickfix.StringField.__init__(self, 40508, data)

class LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40509)
		else:
			quickfix.IntField.__init__(self, 40509, data)

class LegProvisionOptionRelevantUnderlyingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40510)
		else:
			quickfix.StringField.__init__(self, 40510, data)

class LegProvisionOptionRelevantUnderlyingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40511)
		else:
			quickfix.IntField.__init__(self, 40511, data)

class LegProvisionOptionRelevantUnderlyingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40512)
		else:
			quickfix.IntField.__init__(self, 40512, data)

class LegProvisionOptionRelevantUnderlyingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40513)
		else:
			quickfix.StringField.__init__(self, 40513, data)

class LegProvisionOptionRelevantUnderlyingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40514)
		else:
			quickfix.IntField.__init__(self, 40514, data)

class LegProvisionOptionRelevantUnderlyingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40515)
		else:
			quickfix.StringField.__init__(self, 40515, data)

class LegProvisionCashSettlPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40516)
		else:
			quickfix.IntField.__init__(self, 40516, data)

class LegProvisionCashSettlPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40517)
		else:
			quickfix.StringField.__init__(self, 40517, data)

class LegProvisionCashSettlPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40518)
		else:
			quickfix.IntField.__init__(self, 40518, data)

class LegProvisionCashSettlPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40519)
		else:
			quickfix.IntField.__init__(self, 40519, data)

class LegProvisionCashSettlPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40520)
		else:
			quickfix.StringField.__init__(self, 40520, data)

class LegProvisionCashSettlPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40521)
		else:
			quickfix.IntField.__init__(self, 40521, data)

class LegProvisionCashSettlPaymentDateRangeFirst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40522)
		else:
			quickfix.StringField.__init__(self, 40522, data)

class LegProvisionCashSettlPaymentDateRangeLast(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40523)
		else:
			quickfix.StringField.__init__(self, 40523, data)

class LegProvisionCashSettlValueTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40524)
		else:
			quickfix.StringField.__init__(self, 40524, data)

class LegProvisionCashSettlValueTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40525)
		else:
			quickfix.StringField.__init__(self, 40525, data)

class LegProvisionCashSettlValueDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40526)
		else:
			quickfix.IntField.__init__(self, 40526, data)

class LegProvisionCashSettlValueDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40527)
		else:
			quickfix.StringField.__init__(self, 40527, data)

class LegProvisionCashSettlValueDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40528)
		else:
			quickfix.IntField.__init__(self, 40528, data)

class LegProvisionCashSettlValueDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40529)
		else:
			quickfix.IntField.__init__(self, 40529, data)

class LegProvisionCashSettlValueDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40530)
		else:
			quickfix.StringField.__init__(self, 40530, data)

class LegProvisionCashSettlValueDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40531)
		else:
			quickfix.IntField.__init__(self, 40531, data)

class LegProvisionCashSettlValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40532)
		else:
			quickfix.StringField.__init__(self, 40532, data)

class NoLegProvisionPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40533)
		else:
			quickfix.IntField.__init__(self, 40533, data)

class LegProvisionPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40534)
		else:
			quickfix.StringField.__init__(self, 40534, data)

class LegProvisionPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40535)
		else:
			quickfix.CharField.__init__(self, 40535, data)

class LegProvisionPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40536)
		else:
			quickfix.IntField.__init__(self, 40536, data)

class NoLegProvisionPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40537)
		else:
			quickfix.IntField.__init__(self, 40537, data)

class LegProvisionPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40538)
		else:
			quickfix.StringField.__init__(self, 40538, data)

class LegProvisionPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40539)
		else:
			quickfix.IntField.__init__(self, 40539, data)

class NoUnderlyingStreams(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40540)
		else:
			quickfix.IntField.__init__(self, 40540, data)

class UnderlyingStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40541)
		else:
			quickfix.IntField.__init__(self, 40541, data)

class UnderlyingStreamDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40542)
		else:
			quickfix.StringField.__init__(self, 40542, data)

class UnderlyingStreamPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40543)
		else:
			quickfix.IntField.__init__(self, 40543, data)

class UnderlyingStreamReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40544)
		else:
			quickfix.IntField.__init__(self, 40544, data)

class UnderlyingStreamNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40545)
		else:
			quickfix.DoubleField.__init__(self, 40545, data)

class UnderlyingStreamCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40546)
		else:
			quickfix.StringField.__init__(self, 40546, data)

class UnderlyingStreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40547)
		else:
			quickfix.StringField.__init__(self, 40547, data)

class UnderlyingStreamTerminationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40548)
		else:
			quickfix.StringField.__init__(self, 40548, data)

class UnderlyingStreamTerminationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40549)
		else:
			quickfix.IntField.__init__(self, 40549, data)

class UnderlyingStreamTerminationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40550)
		else:
			quickfix.StringField.__init__(self, 40550, data)

class UnderlyingStreamTerminationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40551)
		else:
			quickfix.IntField.__init__(self, 40551, data)

class UnderlyingStreamTerminationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40552)
		else:
			quickfix.IntField.__init__(self, 40552, data)

class UnderlyingStreamTerminationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40553)
		else:
			quickfix.StringField.__init__(self, 40553, data)

class UnderlyingStreamTerminationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40554)
		else:
			quickfix.IntField.__init__(self, 40554, data)

class UnderlyingStreamTerminationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40555)
		else:
			quickfix.StringField.__init__(self, 40555, data)

class UnderlyingStreamCalculationPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40556)
		else:
			quickfix.IntField.__init__(self, 40556, data)

class UnderlyingStreamCalculationPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40557)
		else:
			quickfix.StringField.__init__(self, 40557, data)

class UnderlyingStreamFirstPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40558)
		else:
			quickfix.StringField.__init__(self, 40558, data)

class UnderlyingStreamFirstPeriodStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40559)
		else:
			quickfix.IntField.__init__(self, 40559, data)

class UnderlyingStreamFirstPeriodStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40560)
		else:
			quickfix.StringField.__init__(self, 40560, data)

class UnderlyingStreamFirstPeriodStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40561)
		else:
			quickfix.StringField.__init__(self, 40561, data)

class UnderlyingStreamFirstRegularPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40562)
		else:
			quickfix.StringField.__init__(self, 40562, data)

class UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40563)
		else:
			quickfix.StringField.__init__(self, 40563, data)

class UnderlyingStreamLastRegularPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40564)
		else:
			quickfix.StringField.__init__(self, 40564, data)

class UnderlyingStreamCalculationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40565)
		else:
			quickfix.IntField.__init__(self, 40565, data)

class UnderlyingStreamCalculationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40566)
		else:
			quickfix.StringField.__init__(self, 40566, data)

class UnderlyingStreamCalculationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40567)
		else:
			quickfix.StringField.__init__(self, 40567, data)

class UnderlyingPaymentStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40568)
		else:
			quickfix.IntField.__init__(self, 40568, data)

class UnderlyingPaymentStreamMarketRate(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40569)
		else:
			quickfix.IntField.__init__(self, 40569, data)

class UnderlyingPaymentStreamDelayIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40570)
		else:
			quickfix.BoolField.__init__(self, 40570, data)

class UnderlyingPaymentStreamSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40571)
		else:
			quickfix.StringField.__init__(self, 40571, data)

class UnderlyingPaymentStreamDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40572)
		else:
			quickfix.IntField.__init__(self, 40572, data)

class UnderlyingPaymentStreamAccrualDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40573)
		else:
			quickfix.IntField.__init__(self, 40573, data)

class UnderlyingPaymentStreamDiscountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40574)
		else:
			quickfix.IntField.__init__(self, 40574, data)

class UnderlyingPaymentStreamDiscountRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40575)
		else:
			quickfix.DoubleField.__init__(self, 40575, data)

class UnderlyingPaymentStreamDiscountRateDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40576)
		else:
			quickfix.IntField.__init__(self, 40576, data)

class UnderlyingPaymentStreamCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40577)
		else:
			quickfix.IntField.__init__(self, 40577, data)

class UnderlyingPaymentStreamInitialPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40578)
		else:
			quickfix.BoolField.__init__(self, 40578, data)

class UnderlyingPaymentStreamInterimPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40579)
		else:
			quickfix.BoolField.__init__(self, 40579, data)

class UnderlyingPaymentStreamFinalPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40580)
		else:
			quickfix.BoolField.__init__(self, 40580, data)

class UnderlyingPaymentStreamPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40581)
		else:
			quickfix.IntField.__init__(self, 40581, data)

class UnderlyingPaymentStreamPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40582)
		else:
			quickfix.StringField.__init__(self, 40582, data)

class UnderlyingPaymentStreamPaymentFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40583)
		else:
			quickfix.IntField.__init__(self, 40583, data)

class UnderlyingPaymentStreamPaymentFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40584)
		else:
			quickfix.StringField.__init__(self, 40584, data)

class UnderlyingPaymentStreamPaymentRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40585)
		else:
			quickfix.StringField.__init__(self, 40585, data)

class UnderlyingPaymentStreamFirstPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40586)
		else:
			quickfix.StringField.__init__(self, 40586, data)

class UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40587)
		else:
			quickfix.StringField.__init__(self, 40587, data)

class UnderlyingPaymentStreamPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40588)
		else:
			quickfix.IntField.__init__(self, 40588, data)

class UnderlyingPaymentStreamPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40589)
		else:
			quickfix.IntField.__init__(self, 40589, data)

class UnderlyingPaymentStreamPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40590)
		else:
			quickfix.StringField.__init__(self, 40590, data)

class UnderlyingPaymentStreamPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40591)
		else:
			quickfix.IntField.__init__(self, 40591, data)

class UnderlyingPaymentStreamResetDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40592)
		else:
			quickfix.IntField.__init__(self, 40592, data)

class UnderlyingPaymentStreamResetDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40593)
		else:
			quickfix.IntField.__init__(self, 40593, data)

class UnderlyingPaymentStreamResetDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40594)
		else:
			quickfix.StringField.__init__(self, 40594, data)

class UnderlyingPaymentStreamResetFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40595)
		else:
			quickfix.IntField.__init__(self, 40595, data)

class UnderlyingPaymentStreamResetFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40596)
		else:
			quickfix.StringField.__init__(self, 40596, data)

class UnderlyingPaymentStreamResetWeeklyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40597)
		else:
			quickfix.StringField.__init__(self, 40597, data)

class UnderlyingPaymentStreamInitialFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40598)
		else:
			quickfix.IntField.__init__(self, 40598, data)

class UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40599)
		else:
			quickfix.IntField.__init__(self, 40599, data)

class UnderlyingPaymentStreamInitialFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40600)
		else:
			quickfix.StringField.__init__(self, 40600, data)

class UnderlyingPaymentStreamInitialFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40601)
		else:
			quickfix.IntField.__init__(self, 40601, data)

class UnderlyingPaymentStreamInitialFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40602)
		else:
			quickfix.StringField.__init__(self, 40602, data)

class UnderlyingPaymentStreamInitialFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40603)
		else:
			quickfix.IntField.__init__(self, 40603, data)

class UnderlyingPaymentStreamInitialFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40604)
		else:
			quickfix.StringField.__init__(self, 40604, data)

class UnderlyingPaymentStreamFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40605)
		else:
			quickfix.IntField.__init__(self, 40605, data)

class UnderlyingPaymentStreamFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40606)
		else:
			quickfix.IntField.__init__(self, 40606, data)

class UnderlyingPaymentStreamFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40607)
		else:
			quickfix.StringField.__init__(self, 40607, data)

class UnderlyingPaymentStreamFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40608)
		else:
			quickfix.IntField.__init__(self, 40608, data)

class UnderlyingPaymentStreamFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40609)
		else:
			quickfix.StringField.__init__(self, 40609, data)

class UnderlyingPaymentStreamFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40610)
		else:
			quickfix.IntField.__init__(self, 40610, data)

class UnderlyingPaymentStreamFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40611)
		else:
			quickfix.StringField.__init__(self, 40611, data)

class UnderlyingPaymentStreamRateCutoffDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40612)
		else:
			quickfix.IntField.__init__(self, 40612, data)

class UnderlyingPaymentStreamRateCutoffDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40613)
		else:
			quickfix.StringField.__init__(self, 40613, data)

class UnderlyingPaymentStreamRateCutoffDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40614)
		else:
			quickfix.IntField.__init__(self, 40614, data)

class UnderlyingPaymentStreamRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40615)
		else:
			quickfix.DoubleField.__init__(self, 40615, data)

class UnderlyingPaymentStreamFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40616)
		else:
			quickfix.DoubleField.__init__(self, 40616, data)

class UnderlyingPaymentStreamRateOrAmountCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40617)
		else:
			quickfix.StringField.__init__(self, 40617, data)

class UnderlyingPaymentStreamFutureValueNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40618)
		else:
			quickfix.DoubleField.__init__(self, 40618, data)

class UnderlyingPaymentStreamFutureValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40619)
		else:
			quickfix.StringField.__init__(self, 40619, data)

class UnderlyingPaymentStreamRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40620)
		else:
			quickfix.StringField.__init__(self, 40620, data)

class UnderlyingPaymentStreamRateIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40621)
		else:
			quickfix.IntField.__init__(self, 40621, data)

class UnderlyingPaymentStreamRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40622)
		else:
			quickfix.StringField.__init__(self, 40622, data)

class UnderlyingPaymentStreamRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40623)
		else:
			quickfix.IntField.__init__(self, 40623, data)

class UnderlyingPaymentStreamRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40624)
		else:
			quickfix.DoubleField.__init__(self, 40624, data)

class UnderlyingPaymentStreamRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40625)
		else:
			quickfix.DoubleField.__init__(self, 40625, data)

class UnderlyingPaymentStreamRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40626)
		else:
			quickfix.IntField.__init__(self, 40626, data)

class UnderlyingPaymentStreamRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40627)
		else:
			quickfix.IntField.__init__(self, 40627, data)

class UnderlyingPaymentStreamCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40628)
		else:
			quickfix.DoubleField.__init__(self, 40628, data)

class UnderlyingPaymentStreamCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40629)
		else:
			quickfix.IntField.__init__(self, 40629, data)

class UnderlyingPaymentStreamCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40630)
		else:
			quickfix.IntField.__init__(self, 40630, data)

class UnderlyingPaymentStreamFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40631)
		else:
			quickfix.DoubleField.__init__(self, 40631, data)

class UnderlyingPaymentStreamFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40632)
		else:
			quickfix.IntField.__init__(self, 40632, data)

class UnderlyingPaymentStreamFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40633)
		else:
			quickfix.IntField.__init__(self, 40633, data)

class UnderlyingPaymentStreamInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40634)
		else:
			quickfix.DoubleField.__init__(self, 40634, data)

class UnderlyingPaymentStreamFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40635)
		else:
			quickfix.CharField.__init__(self, 40635, data)

class UnderlyingPaymentStreamFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40636)
		else:
			quickfix.IntField.__init__(self, 40636, data)

class UnderlyingPaymentStreamAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40637)
		else:
			quickfix.IntField.__init__(self, 40637, data)

class UnderlyingPaymentStreamNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40638)
		else:
			quickfix.IntField.__init__(self, 40638, data)

class UnderlyingPaymentStreamInflationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40639)
		else:
			quickfix.IntField.__init__(self, 40639, data)

class UnderlyingPaymentStreamInflationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40640)
		else:
			quickfix.StringField.__init__(self, 40640, data)

class UnderlyingPaymentStreamInflationLagDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40641)
		else:
			quickfix.IntField.__init__(self, 40641, data)

class UnderlyingPaymentStreamInflationInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40642)
		else:
			quickfix.IntField.__init__(self, 40642, data)

class UnderlyingPaymentStreamInflationIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40643)
		else:
			quickfix.IntField.__init__(self, 40643, data)

class UnderlyingPaymentStreamInflationPublicationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40644)
		else:
			quickfix.StringField.__init__(self, 40644, data)

class UnderlyingPaymentStreamInflationInitialIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40645)
		else:
			quickfix.DoubleField.__init__(self, 40645, data)

class UnderlyingPaymentStreamInflationFallbackBondApplicable(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40646)
		else:
			quickfix.BoolField.__init__(self, 40646, data)

class UnderlyingPaymentStreamFRADiscounting(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40647)
		else:
			quickfix.IntField.__init__(self, 40647, data)

class UnderlyingPaymentStreamNonDeliverableRefCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40648)
		else:
			quickfix.StringField.__init__(self, 40648, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesBizDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40649)
		else:
			quickfix.IntField.__init__(self, 40649, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40650)
		else:
			quickfix.StringField.__init__(self, 40650, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40651)
		else:
			quickfix.IntField.__init__(self, 40651, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40652)
		else:
			quickfix.IntField.__init__(self, 40652, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40653)
		else:
			quickfix.StringField.__init__(self, 40653, data)

class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40654)
		else:
			quickfix.IntField.__init__(self, 40654, data)

class SettlRateFallbackReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40655)
		else:
			quickfix.StringField.__init__(self, 40655, data)

class NoUnderlyingNonDeliverableFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40656)
		else:
			quickfix.IntField.__init__(self, 40656, data)

class UnderlyingNonDeliverableFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40657)
		else:
			quickfix.StringField.__init__(self, 40657, data)

class UnderlyingNonDeliverableFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40658)
		else:
			quickfix.IntField.__init__(self, 40658, data)

class NoUnderlyingSettlRateFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40659)
		else:
			quickfix.IntField.__init__(self, 40659, data)

class UnderlyingSettlRatePostponementMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40660)
		else:
			quickfix.IntField.__init__(self, 40660, data)

class UnderlyingPaymentStreamNonDeliverableSettlRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40661)
		else:
			quickfix.IntField.__init__(self, 40661, data)

class UnderlyingSettlRatePostponementSurvey(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40662)
		else:
			quickfix.BoolField.__init__(self, 40662, data)

class UnderlyingSettlRatePostponementCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40663)
		else:
			quickfix.IntField.__init__(self, 40663, data)

class NoUnderlyingPaymentSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40664)
		else:
			quickfix.IntField.__init__(self, 40664, data)

class UnderlyingPaymentScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40665)
		else:
			quickfix.IntField.__init__(self, 40665, data)

class UnderlyingPaymentScheduleStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40666)
		else:
			quickfix.IntField.__init__(self, 40666, data)

class UnderlyingPaymentScheduleStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40667)
		else:
			quickfix.StringField.__init__(self, 40667, data)

class UnderlyingPaymentScheduleEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40668)
		else:
			quickfix.StringField.__init__(self, 40668, data)

class UnderlyingPaymentSchedulePaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40669)
		else:
			quickfix.IntField.__init__(self, 40669, data)

class UnderlyingPaymentScheduleReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40670)
		else:
			quickfix.IntField.__init__(self, 40670, data)

class UnderlyingPaymentScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40671)
		else:
			quickfix.DoubleField.__init__(self, 40671, data)

class UnderlyingPaymentScheduleCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40672)
		else:
			quickfix.StringField.__init__(self, 40672, data)

class UnderlyingPaymentScheduleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40673)
		else:
			quickfix.DoubleField.__init__(self, 40673, data)

class UnderlyingPaymentScheduleRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40674)
		else:
			quickfix.DoubleField.__init__(self, 40674, data)

class UnderlyingPaymentScheduleRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40675)
		else:
			quickfix.DoubleField.__init__(self, 40675, data)

class UnderlyingPaymentScheduleRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40676)
		else:
			quickfix.IntField.__init__(self, 40676, data)

class UnderlyingPaymentScheduleRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40677)
		else:
			quickfix.IntField.__init__(self, 40677, data)

class UnderlyingPaymentScheduleFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40678)
		else:
			quickfix.DoubleField.__init__(self, 40678, data)

class UnderlyingPaymentScheduleFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40679)
		else:
			quickfix.StringField.__init__(self, 40679, data)

class UnderlyingPaymentScheduleStepFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40680)
		else:
			quickfix.IntField.__init__(self, 40680, data)

class UnderlyingPaymentScheduleStepFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40681)
		else:
			quickfix.StringField.__init__(self, 40681, data)

class UnderlyingPaymentScheduleStepOffsetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40682)
		else:
			quickfix.DoubleField.__init__(self, 40682, data)

class UnderlyingPaymentScheduleStepRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40683)
		else:
			quickfix.DoubleField.__init__(self, 40683, data)

class UnderlyingPaymentScheduleStepOffsetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40684)
		else:
			quickfix.DoubleField.__init__(self, 40684, data)

class UnderlyingPaymentScheduleStepRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40685)
		else:
			quickfix.IntField.__init__(self, 40685, data)

class UnderlyingPaymentScheduleFixingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40686)
		else:
			quickfix.StringField.__init__(self, 40686, data)

class UnderlyingPaymentScheduleWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40687)
		else:
			quickfix.DoubleField.__init__(self, 40687, data)

class UnderlyingPaymentScheduleFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40688)
		else:
			quickfix.IntField.__init__(self, 40688, data)

class UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40689)
		else:
			quickfix.IntField.__init__(self, 40689, data)

class UnderlyingPaymentScheduleFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40690)
		else:
			quickfix.StringField.__init__(self, 40690, data)

class UnderlyingPaymentScheduleFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40691)
		else:
			quickfix.IntField.__init__(self, 40691, data)

class UnderlyingPaymentScheduleFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40692)
		else:
			quickfix.StringField.__init__(self, 40692, data)

class UnderlyingPaymentScheduleFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40693)
		else:
			quickfix.IntField.__init__(self, 40693, data)

class UnderlyingPaymentScheduleFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40694)
		else:
			quickfix.StringField.__init__(self, 40694, data)

class UnderlyingPaymentScheduleFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40695)
		else:
			quickfix.StringField.__init__(self, 40695, data)

class UnderlyingPaymentScheduleFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40696)
		else:
			quickfix.StringField.__init__(self, 40696, data)

class UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40697)
		else:
			quickfix.IntField.__init__(self, 40697, data)

class UnderlyingPaymentScheduleInterimExchangeDatesBizDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40698)
		else:
			quickfix.IntField.__init__(self, 40698, data)

class UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40699)
		else:
			quickfix.StringField.__init__(self, 40699, data)

class UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40700)
		else:
			quickfix.IntField.__init__(self, 40700, data)

class UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40701)
		else:
			quickfix.StringField.__init__(self, 40701, data)

class UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40702)
		else:
			quickfix.IntField.__init__(self, 40702, data)

class UnderlyingPaymentScheduleInterimExchangeDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40703)
		else:
			quickfix.StringField.__init__(self, 40703, data)

class NoUnderlyingPaymentScheduleRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40704)
		else:
			quickfix.IntField.__init__(self, 40704, data)

class UnderlyingPaymentScheduleRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40705)
		else:
			quickfix.IntField.__init__(self, 40705, data)

class UnderlyingPaymentScheduleRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40706)
		else:
			quickfix.IntField.__init__(self, 40706, data)

class UnderlyingPaymentScheduleReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40707)
		else:
			quickfix.StringField.__init__(self, 40707, data)

class NoUnderlyingPaymentStubs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40708)
		else:
			quickfix.IntField.__init__(self, 40708, data)

class UnderlyingPaymentStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40709)
		else:
			quickfix.IntField.__init__(self, 40709, data)

class UnderlyingPaymentStubLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40710)
		else:
			quickfix.IntField.__init__(self, 40710, data)

class UnderlyingPaymentStubRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40711)
		else:
			quickfix.DoubleField.__init__(self, 40711, data)

class UnderlyingPaymentStubFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40712)
		else:
			quickfix.DoubleField.__init__(self, 40712, data)

class UnderlyingPaymentStubFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40713)
		else:
			quickfix.StringField.__init__(self, 40713, data)

class UnderlyingPaymentStubIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40714)
		else:
			quickfix.StringField.__init__(self, 40714, data)

class UnderlyingPaymentStubIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40715)
		else:
			quickfix.IntField.__init__(self, 40715, data)

class UnderlyingPaymentStubIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40716)
		else:
			quickfix.IntField.__init__(self, 40716, data)

class UnderlyingPaymentStubIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40717)
		else:
			quickfix.StringField.__init__(self, 40717, data)

class UnderlyingPaymentStubIndexRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40718)
		else:
			quickfix.DoubleField.__init__(self, 40718, data)

class UnderlyingPaymentStubIndexRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40719)
		else:
			quickfix.DoubleField.__init__(self, 40719, data)

class UnderlyingPaymentStubIndexRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40720)
		else:
			quickfix.IntField.__init__(self, 40720, data)

class UnderlyingPaymentStubIndexRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40721)
		else:
			quickfix.IntField.__init__(self, 40721, data)

class UnderlyingPaymentStubIndexCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40722)
		else:
			quickfix.DoubleField.__init__(self, 40722, data)

class UnderlyingPaymentStubIndexCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40723)
		else:
			quickfix.IntField.__init__(self, 40723, data)

class UnderlyingPaymentStubIndexCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40724)
		else:
			quickfix.IntField.__init__(self, 40724, data)

class UnderlyingPaymentStubIndexFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40725)
		else:
			quickfix.DoubleField.__init__(self, 40725, data)

class UnderlyingPaymentStubIndexFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40726)
		else:
			quickfix.IntField.__init__(self, 40726, data)

class UnderlyingPaymentStubIndexFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40727)
		else:
			quickfix.IntField.__init__(self, 40727, data)

class UnderlyingPaymentStubIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40728)
		else:
			quickfix.StringField.__init__(self, 40728, data)

class UnderlyingPaymentStubIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40729)
		else:
			quickfix.IntField.__init__(self, 40729, data)

class UnderlyingPaymentStubIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40730)
		else:
			quickfix.IntField.__init__(self, 40730, data)

class UnderlyingPaymentStubIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40731)
		else:
			quickfix.StringField.__init__(self, 40731, data)

class UnderlyingPaymentStubIndex2RateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40732)
		else:
			quickfix.DoubleField.__init__(self, 40732, data)

class UnderlyingPaymentStubIndex2RateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40733)
		else:
			quickfix.DoubleField.__init__(self, 40733, data)

class UnderlyingPaymentStubIndex2RateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40734)
		else:
			quickfix.IntField.__init__(self, 40734, data)

class UnderlyingPaymentStubIndex2RateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40735)
		else:
			quickfix.IntField.__init__(self, 40735, data)

class UnderlyingPaymentStubIndex2CapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40736)
		else:
			quickfix.DoubleField.__init__(self, 40736, data)

class UnderlyingPaymentStubIndex2FloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40737)
		else:
			quickfix.DoubleField.__init__(self, 40737, data)

class PaymentStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40738)
		else:
			quickfix.IntField.__init__(self, 40738, data)

class PaymentStreamMarketRate(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40739)
		else:
			quickfix.IntField.__init__(self, 40739, data)

class PaymentStreamDelayIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40740)
		else:
			quickfix.BoolField.__init__(self, 40740, data)

class PaymentStreamSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40741)
		else:
			quickfix.StringField.__init__(self, 40741, data)

class PaymentStreamDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40742)
		else:
			quickfix.IntField.__init__(self, 40742, data)

class PaymentStreamAccrualDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40743)
		else:
			quickfix.IntField.__init__(self, 40743, data)

class PaymentStreamDiscountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40744)
		else:
			quickfix.IntField.__init__(self, 40744, data)

class PaymentStreamDiscountRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40745)
		else:
			quickfix.DoubleField.__init__(self, 40745, data)

class PaymentStreamDiscountRateDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40746)
		else:
			quickfix.IntField.__init__(self, 40746, data)

class PaymentStreamCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40747)
		else:
			quickfix.IntField.__init__(self, 40747, data)

class PaymentStreamInitialPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40748)
		else:
			quickfix.BoolField.__init__(self, 40748, data)

class PaymentStreamInterimPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40749)
		else:
			quickfix.BoolField.__init__(self, 40749, data)

class PaymentStreamFinalPrincipalExchangeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40750)
		else:
			quickfix.BoolField.__init__(self, 40750, data)

class PaymentStreamPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40751)
		else:
			quickfix.IntField.__init__(self, 40751, data)

class PaymentStreamPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40752)
		else:
			quickfix.StringField.__init__(self, 40752, data)

class PaymentStreamPaymentFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40753)
		else:
			quickfix.IntField.__init__(self, 40753, data)

class PaymentStreamPaymentFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40754)
		else:
			quickfix.StringField.__init__(self, 40754, data)

class PaymentStreamPaymentRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40755)
		else:
			quickfix.StringField.__init__(self, 40755, data)

class PaymentStreamFirstPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40756)
		else:
			quickfix.StringField.__init__(self, 40756, data)

class PaymentStreamLastRegularPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40757)
		else:
			quickfix.StringField.__init__(self, 40757, data)

class PaymentStreamPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40758)
		else:
			quickfix.IntField.__init__(self, 40758, data)

class PaymentStreamPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40759)
		else:
			quickfix.IntField.__init__(self, 40759, data)

class PaymentStreamPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40760)
		else:
			quickfix.StringField.__init__(self, 40760, data)

class PaymentStreamResetDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40761)
		else:
			quickfix.IntField.__init__(self, 40761, data)

class PaymentStreamResetDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40762)
		else:
			quickfix.IntField.__init__(self, 40762, data)

class PaymentStreamResetDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40763)
		else:
			quickfix.StringField.__init__(self, 40763, data)

class PaymentStreamResetFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40764)
		else:
			quickfix.IntField.__init__(self, 40764, data)

class PaymentStreamResetFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40765)
		else:
			quickfix.StringField.__init__(self, 40765, data)

class PaymentStreamResetWeeklyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40766)
		else:
			quickfix.StringField.__init__(self, 40766, data)

class PaymentStreamInitialFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40767)
		else:
			quickfix.IntField.__init__(self, 40767, data)

class PaymentStreamInitialFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40768)
		else:
			quickfix.IntField.__init__(self, 40768, data)

class PaymentStreamInitialFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40769)
		else:
			quickfix.StringField.__init__(self, 40769, data)

class PaymentStreamInitialFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40770)
		else:
			quickfix.IntField.__init__(self, 40770, data)

class PaymentStreamInitialFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40771)
		else:
			quickfix.StringField.__init__(self, 40771, data)

class PaymentStreamInitialFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40772)
		else:
			quickfix.IntField.__init__(self, 40772, data)

class PaymentStreamInitialFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40773)
		else:
			quickfix.StringField.__init__(self, 40773, data)

class PaymentStreamFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40774)
		else:
			quickfix.IntField.__init__(self, 40774, data)

class PaymentStreamFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40775)
		else:
			quickfix.IntField.__init__(self, 40775, data)

class PaymentStreamFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40776)
		else:
			quickfix.StringField.__init__(self, 40776, data)

class PaymentStreamFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40777)
		else:
			quickfix.IntField.__init__(self, 40777, data)

class PaymentStreamFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40778)
		else:
			quickfix.StringField.__init__(self, 40778, data)

class PaymentStreamFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40779)
		else:
			quickfix.IntField.__init__(self, 40779, data)

class PaymentStreamFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40780)
		else:
			quickfix.StringField.__init__(self, 40780, data)

class PaymentStreamRateCutoffDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40781)
		else:
			quickfix.IntField.__init__(self, 40781, data)

class PaymentStreamRateCutoffDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40782)
		else:
			quickfix.StringField.__init__(self, 40782, data)

class PaymentStreamRateCutoffDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40783)
		else:
			quickfix.IntField.__init__(self, 40783, data)

class PaymentStreamRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40784)
		else:
			quickfix.DoubleField.__init__(self, 40784, data)

class PaymentStreamFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40785)
		else:
			quickfix.DoubleField.__init__(self, 40785, data)

class PaymentStreamRateOrAmountCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40786)
		else:
			quickfix.StringField.__init__(self, 40786, data)

class PaymentStreamFutureValueNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40787)
		else:
			quickfix.DoubleField.__init__(self, 40787, data)

class PaymentStreamFutureValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40788)
		else:
			quickfix.StringField.__init__(self, 40788, data)

class PaymentStreamRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40789)
		else:
			quickfix.StringField.__init__(self, 40789, data)

class PaymentStreamRateIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40790)
		else:
			quickfix.IntField.__init__(self, 40790, data)

class PaymentStreamRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40791)
		else:
			quickfix.StringField.__init__(self, 40791, data)

class PaymentStreamRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40792)
		else:
			quickfix.IntField.__init__(self, 40792, data)

class PaymentStreamRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40793)
		else:
			quickfix.DoubleField.__init__(self, 40793, data)

class PaymentStreamRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40794)
		else:
			quickfix.DoubleField.__init__(self, 40794, data)

class PaymentStreamRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40795)
		else:
			quickfix.IntField.__init__(self, 40795, data)

class PaymentStreamRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40796)
		else:
			quickfix.IntField.__init__(self, 40796, data)

class PaymentStreamCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40797)
		else:
			quickfix.DoubleField.__init__(self, 40797, data)

class PaymentStreamCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40798)
		else:
			quickfix.IntField.__init__(self, 40798, data)

class PaymentStreamCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40799)
		else:
			quickfix.IntField.__init__(self, 40799, data)

class PaymentStreamFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40800)
		else:
			quickfix.DoubleField.__init__(self, 40800, data)

class PaymentStreamFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40801)
		else:
			quickfix.IntField.__init__(self, 40801, data)

class PaymentStreamFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40802)
		else:
			quickfix.IntField.__init__(self, 40802, data)

class PaymentStreamInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40803)
		else:
			quickfix.DoubleField.__init__(self, 40803, data)

class PaymentStreamFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 40804)
		else:
			quickfix.CharField.__init__(self, 40804, data)

class PaymentStreamFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40805)
		else:
			quickfix.IntField.__init__(self, 40805, data)

class PaymentStreamAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40806)
		else:
			quickfix.IntField.__init__(self, 40806, data)

class PaymentStreamNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40807)
		else:
			quickfix.IntField.__init__(self, 40807, data)

class PaymentStreamInflationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40808)
		else:
			quickfix.IntField.__init__(self, 40808, data)

class PaymentStreamInflationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40809)
		else:
			quickfix.StringField.__init__(self, 40809, data)

class PaymentStreamInflationLagDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40810)
		else:
			quickfix.IntField.__init__(self, 40810, data)

class PaymentStreamInflationInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40811)
		else:
			quickfix.IntField.__init__(self, 40811, data)

class PaymentStreamInflationIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40812)
		else:
			quickfix.IntField.__init__(self, 40812, data)

class PaymentStreamInflationPublicationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40813)
		else:
			quickfix.StringField.__init__(self, 40813, data)

class PaymentStreamInflationInitialIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40814)
		else:
			quickfix.DoubleField.__init__(self, 40814, data)

class PaymentStreamInflationFallbackBondApplicable(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40815)
		else:
			quickfix.BoolField.__init__(self, 40815, data)

class PaymentStreamFRADiscounting(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40816)
		else:
			quickfix.IntField.__init__(self, 40816, data)

class PaymentStreamNonDeliverableRefCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40817)
		else:
			quickfix.StringField.__init__(self, 40817, data)

class PaymentStreamNonDeliverableFixingDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40818)
		else:
			quickfix.IntField.__init__(self, 40818, data)

class PaymentStreamNonDeliverableFixingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40819)
		else:
			quickfix.StringField.__init__(self, 40819, data)

class PaymentStreamNonDeliverableFixingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40820)
		else:
			quickfix.IntField.__init__(self, 40820, data)

class PaymentStreamNonDeliverableFixingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40821)
		else:
			quickfix.IntField.__init__(self, 40821, data)

class PaymentStreamNonDeliverableFixingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40822)
		else:
			quickfix.StringField.__init__(self, 40822, data)

class PaymentStreamNonDeliverableFixingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40823)
		else:
			quickfix.IntField.__init__(self, 40823, data)

class UnderlyingPaymentStreamNonDeliverableSettlReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40824)
		else:
			quickfix.StringField.__init__(self, 40824, data)

class NoNonDeliverableFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40825)
		else:
			quickfix.IntField.__init__(self, 40825, data)

class NonDeliverableFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40826)
		else:
			quickfix.StringField.__init__(self, 40826, data)

class NonDeliverableFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40827)
		else:
			quickfix.IntField.__init__(self, 40827, data)

class NoPaymentSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40828)
		else:
			quickfix.IntField.__init__(self, 40828, data)

class PaymentScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40829)
		else:
			quickfix.IntField.__init__(self, 40829, data)

class PaymentScheduleStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40830)
		else:
			quickfix.IntField.__init__(self, 40830, data)

class PaymentScheduleStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40831)
		else:
			quickfix.StringField.__init__(self, 40831, data)

class PaymentScheduleEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40832)
		else:
			quickfix.StringField.__init__(self, 40832, data)

class PaymentSchedulePaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40833)
		else:
			quickfix.IntField.__init__(self, 40833, data)

class PaymentScheduleReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40834)
		else:
			quickfix.IntField.__init__(self, 40834, data)

class PaymentScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40835)
		else:
			quickfix.DoubleField.__init__(self, 40835, data)

class PaymentScheduleCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40836)
		else:
			quickfix.StringField.__init__(self, 40836, data)

class PaymentScheduleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40837)
		else:
			quickfix.DoubleField.__init__(self, 40837, data)

class PaymentScheduleRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40838)
		else:
			quickfix.DoubleField.__init__(self, 40838, data)

class PaymentScheduleRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40839)
		else:
			quickfix.DoubleField.__init__(self, 40839, data)

class PaymentScheduleRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40840)
		else:
			quickfix.IntField.__init__(self, 40840, data)

class PaymentScheduleRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40841)
		else:
			quickfix.IntField.__init__(self, 40841, data)

class PaymentScheduleFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40842)
		else:
			quickfix.DoubleField.__init__(self, 40842, data)

class PaymentScheduleFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40843)
		else:
			quickfix.StringField.__init__(self, 40843, data)

class PaymentScheduleStepFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40844)
		else:
			quickfix.IntField.__init__(self, 40844, data)

class PaymentScheduleStepFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40845)
		else:
			quickfix.StringField.__init__(self, 40845, data)

class PaymentScheduleStepOffsetValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40846)
		else:
			quickfix.DoubleField.__init__(self, 40846, data)

class PaymentScheduleStepRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40847)
		else:
			quickfix.DoubleField.__init__(self, 40847, data)

class PaymentScheduleStepOffsetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40848)
		else:
			quickfix.DoubleField.__init__(self, 40848, data)

class PaymentScheduleStepRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40849)
		else:
			quickfix.IntField.__init__(self, 40849, data)

class PaymentScheduleFixingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40850)
		else:
			quickfix.StringField.__init__(self, 40850, data)

class PaymentScheduleWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40851)
		else:
			quickfix.DoubleField.__init__(self, 40851, data)

class PaymentScheduleFixingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40852)
		else:
			quickfix.IntField.__init__(self, 40852, data)

class PaymentScheduleFixingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40853)
		else:
			quickfix.IntField.__init__(self, 40853, data)

class PaymentScheduleFixingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40854)
		else:
			quickfix.StringField.__init__(self, 40854, data)

class PaymentScheduleFixingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40855)
		else:
			quickfix.IntField.__init__(self, 40855, data)

class PaymentScheduleFixingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40856)
		else:
			quickfix.StringField.__init__(self, 40856, data)

class PaymentScheduleFixingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40857)
		else:
			quickfix.IntField.__init__(self, 40857, data)

class PaymentScheduleFixingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40858)
		else:
			quickfix.StringField.__init__(self, 40858, data)

class PaymentScheduleFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40859)
		else:
			quickfix.StringField.__init__(self, 40859, data)

class PaymentScheduleFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40860)
		else:
			quickfix.StringField.__init__(self, 40860, data)

class PaymentScheduleInterimExchangePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40861)
		else:
			quickfix.IntField.__init__(self, 40861, data)

class PaymentScheduleInterimExchangeDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40862)
		else:
			quickfix.IntField.__init__(self, 40862, data)

class PaymentScheduleInterimExchangeDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40863)
		else:
			quickfix.StringField.__init__(self, 40863, data)

class PaymentScheduleInterimExchangeDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40864)
		else:
			quickfix.IntField.__init__(self, 40864, data)

class PaymentScheduleInterimExchangeDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40865)
		else:
			quickfix.StringField.__init__(self, 40865, data)

class PaymentScheduleInterimExchangeDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40866)
		else:
			quickfix.IntField.__init__(self, 40866, data)

class PaymentScheduleInterimExchangeDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40867)
		else:
			quickfix.StringField.__init__(self, 40867, data)

class NoPaymentScheduleRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40868)
		else:
			quickfix.IntField.__init__(self, 40868, data)

class PaymentScheduleRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40869)
		else:
			quickfix.IntField.__init__(self, 40869, data)

class PaymentScheduleRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40870)
		else:
			quickfix.IntField.__init__(self, 40870, data)

class PaymentScheduleReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40871)
		else:
			quickfix.StringField.__init__(self, 40871, data)

class NoPaymentStubs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40872)
		else:
			quickfix.IntField.__init__(self, 40872, data)

class PaymentStubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40873)
		else:
			quickfix.IntField.__init__(self, 40873, data)

class PaymentStubLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40874)
		else:
			quickfix.IntField.__init__(self, 40874, data)

class PaymentStubRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40875)
		else:
			quickfix.DoubleField.__init__(self, 40875, data)

class PaymentStubFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40876)
		else:
			quickfix.DoubleField.__init__(self, 40876, data)

class PaymentStubFixedCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40877)
		else:
			quickfix.StringField.__init__(self, 40877, data)

class PaymentStubIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40878)
		else:
			quickfix.StringField.__init__(self, 40878, data)

class PaymentStubIndexSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40879)
		else:
			quickfix.IntField.__init__(self, 40879, data)

class PaymentStubIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40880)
		else:
			quickfix.IntField.__init__(self, 40880, data)

class PaymentStubIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40881)
		else:
			quickfix.StringField.__init__(self, 40881, data)

class PaymentStubIndexRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40882)
		else:
			quickfix.DoubleField.__init__(self, 40882, data)

class PaymentStubIndexRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40883)
		else:
			quickfix.DoubleField.__init__(self, 40883, data)

class PaymentStubIndexRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40884)
		else:
			quickfix.IntField.__init__(self, 40884, data)

class PaymentStubIndexRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40885)
		else:
			quickfix.IntField.__init__(self, 40885, data)

class PaymentStubIndexCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40886)
		else:
			quickfix.DoubleField.__init__(self, 40886, data)

class PaymentStubIndexCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40887)
		else:
			quickfix.IntField.__init__(self, 40887, data)

class PaymentStubIndexCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40888)
		else:
			quickfix.IntField.__init__(self, 40888, data)

class PaymentStubIndexFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40889)
		else:
			quickfix.DoubleField.__init__(self, 40889, data)

class PaymentStubIndexFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40890)
		else:
			quickfix.IntField.__init__(self, 40890, data)

class PaymentStubIndexFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40891)
		else:
			quickfix.IntField.__init__(self, 40891, data)

class PaymentStubIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40892)
		else:
			quickfix.StringField.__init__(self, 40892, data)

class PaymentStubIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40893)
		else:
			quickfix.IntField.__init__(self, 40893, data)

class PaymentStubIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40894)
		else:
			quickfix.IntField.__init__(self, 40894, data)

class PaymentStubIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40895)
		else:
			quickfix.StringField.__init__(self, 40895, data)

class PaymentStubIndex2RateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40896)
		else:
			quickfix.DoubleField.__init__(self, 40896, data)

class PaymentStubIndex2RateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40897)
		else:
			quickfix.DoubleField.__init__(self, 40897, data)

class PaymentStubIndex2RateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40898)
		else:
			quickfix.IntField.__init__(self, 40898, data)

class PaymentStubIndex2RateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40899)
		else:
			quickfix.IntField.__init__(self, 40899, data)

class PaymentStubIndex2CapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40900)
		else:
			quickfix.DoubleField.__init__(self, 40900, data)

class PaymentStubIndex2FloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40901)
		else:
			quickfix.DoubleField.__init__(self, 40901, data)

class NoLegSettlRateFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40902)
		else:
			quickfix.IntField.__init__(self, 40902, data)

class LegSettlRatePostponementMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40903)
		else:
			quickfix.IntField.__init__(self, 40903, data)

class UnderlyingSettlRateFallbackRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40904)
		else:
			quickfix.IntField.__init__(self, 40904, data)

class LegSettlRatePostponementSurvey(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 40905)
		else:
			quickfix.BoolField.__init__(self, 40905, data)

class LegSettlRatePostponementCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40906)
		else:
			quickfix.IntField.__init__(self, 40906, data)

class StreamEffectiveDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40907)
		else:
			quickfix.StringField.__init__(self, 40907, data)

class StreamEffectiveDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40908)
		else:
			quickfix.IntField.__init__(self, 40908, data)

class StreamEffectiveDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40909)
		else:
			quickfix.StringField.__init__(self, 40909, data)

class StreamEffectiveDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40910)
		else:
			quickfix.IntField.__init__(self, 40910, data)

class StreamEffectiveDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40911)
		else:
			quickfix.IntField.__init__(self, 40911, data)

class StreamEffectiveDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40912)
		else:
			quickfix.StringField.__init__(self, 40912, data)

class StreamEffectiveDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40913)
		else:
			quickfix.IntField.__init__(self, 40913, data)

class StreamEffectiveDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40914)
		else:
			quickfix.StringField.__init__(self, 40914, data)

class UnderlyingSettlRateFallbackReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40915)
		else:
			quickfix.StringField.__init__(self, 40915, data)

class PaymentPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40919)
		else:
			quickfix.IntField.__init__(self, 40919, data)

class PaymentStreamPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40920)
		else:
			quickfix.IntField.__init__(self, 40920, data)

class BusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40921)
		else:
			quickfix.IntField.__init__(self, 40921, data)

class DateRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40922)
		else:
			quickfix.StringField.__init__(self, 40922, data)

class NoLegBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40923)
		else:
			quickfix.IntField.__init__(self, 40923, data)

class LegBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40924)
		else:
			quickfix.StringField.__init__(self, 40924, data)

class LegBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40925)
		else:
			quickfix.IntField.__init__(self, 40925, data)

class LegDateRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40926)
		else:
			quickfix.StringField.__init__(self, 40926, data)

class NoLegPaymentScheduleFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40927)
		else:
			quickfix.IntField.__init__(self, 40927, data)

class NoLegPaymentScheduleInterimExchangeDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40928)
		else:
			quickfix.IntField.__init__(self, 40928, data)

class NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40929)
		else:
			quickfix.IntField.__init__(self, 40929, data)

class NoLegPaymentStreamPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40930)
		else:
			quickfix.IntField.__init__(self, 40930, data)

class NoLegPaymentStreamResetDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40931)
		else:
			quickfix.IntField.__init__(self, 40931, data)

class NoLegPaymentStreamInitialFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40932)
		else:
			quickfix.IntField.__init__(self, 40932, data)

class NoLegPaymentStreamFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40933)
		else:
			quickfix.IntField.__init__(self, 40933, data)

class NoLegProvisionCashSettlPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40934)
		else:
			quickfix.IntField.__init__(self, 40934, data)

class NoLegProvisionCashSettlValueDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40935)
		else:
			quickfix.IntField.__init__(self, 40935, data)

class NoLegProvisionOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40936)
		else:
			quickfix.IntField.__init__(self, 40936, data)

class NoLegProvisionOptionExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40937)
		else:
			quickfix.IntField.__init__(self, 40937, data)

class NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40938)
		else:
			quickfix.IntField.__init__(self, 40938, data)

class NoLegProvisionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40939)
		else:
			quickfix.IntField.__init__(self, 40939, data)

class NoLegStreamCalculationPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40940)
		else:
			quickfix.IntField.__init__(self, 40940, data)

class NoLegStreamFirstPeriodStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40941)
		else:
			quickfix.IntField.__init__(self, 40941, data)

class NoLegStreamEffectiveDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40942)
		else:
			quickfix.IntField.__init__(self, 40942, data)

class NoLegStreamTerminationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40943)
		else:
			quickfix.IntField.__init__(self, 40943, data)

class NoPaymentBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40944)
		else:
			quickfix.IntField.__init__(self, 40944, data)

class NoPaymentScheduleInterimExchangeDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40945)
		else:
			quickfix.IntField.__init__(self, 40945, data)

class NoPaymentStreamNonDeliverableFixingDatesBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40946)
		else:
			quickfix.IntField.__init__(self, 40946, data)

class NoPaymentStreamPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40947)
		else:
			quickfix.IntField.__init__(self, 40947, data)

class NoPaymentStreamResetDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40948)
		else:
			quickfix.IntField.__init__(self, 40948, data)

class NoPaymentStreamInitialFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40949)
		else:
			quickfix.IntField.__init__(self, 40949, data)

class NoPaymentStreamFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40950)
		else:
			quickfix.IntField.__init__(self, 40950, data)

class NoProtectionTermEventNewsSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40951)
		else:
			quickfix.IntField.__init__(self, 40951, data)

class NoProvisionCashSettlPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40952)
		else:
			quickfix.IntField.__init__(self, 40952, data)

class NoProvisionCashSettlValueDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40953)
		else:
			quickfix.IntField.__init__(self, 40953, data)

class NoProvisionOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40954)
		else:
			quickfix.IntField.__init__(self, 40954, data)

class NoProvisionOptionExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40955)
		else:
			quickfix.IntField.__init__(self, 40955, data)

class NoProvisionOptionRelevantUnderlyingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40956)
		else:
			quickfix.IntField.__init__(self, 40956, data)

class NoProvisionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40957)
		else:
			quickfix.IntField.__init__(self, 40957, data)

class NoStreamCalculationPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40958)
		else:
			quickfix.IntField.__init__(self, 40958, data)

class NoStreamFirstPeriodStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40959)
		else:
			quickfix.IntField.__init__(self, 40959, data)

class NoStreamEffectiveDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40960)
		else:
			quickfix.IntField.__init__(self, 40960, data)

class NoStreamTerminationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40961)
		else:
			quickfix.IntField.__init__(self, 40961, data)

class NoUnderlyingBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40962)
		else:
			quickfix.IntField.__init__(self, 40962, data)

class UnderlyingBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40963)
		else:
			quickfix.StringField.__init__(self, 40963, data)

class UnderlyingBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40964)
		else:
			quickfix.IntField.__init__(self, 40964, data)

class UnderlyingDateRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40965)
		else:
			quickfix.StringField.__init__(self, 40965, data)

class NoUnderlyingPaymentScheduleFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40966)
		else:
			quickfix.IntField.__init__(self, 40966, data)

class NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40967)
		else:
			quickfix.IntField.__init__(self, 40967, data)

class NoUnderlyingPaymentStreamNonDeliverableFixingDatesBizCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40968)
		else:
			quickfix.IntField.__init__(self, 40968, data)

class NoUnderlyingPaymentStreamPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40969)
		else:
			quickfix.IntField.__init__(self, 40969, data)

class NoUnderlyingPaymentStreamResetDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40970)
		else:
			quickfix.IntField.__init__(self, 40970, data)

class NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40971)
		else:
			quickfix.IntField.__init__(self, 40971, data)

class NoUnderlyingPaymentStreamFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40972)
		else:
			quickfix.IntField.__init__(self, 40972, data)

class NoUnderlyingStreamCalculationPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40973)
		else:
			quickfix.IntField.__init__(self, 40973, data)

class NoUnderlyingStreamFirstPeriodStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40974)
		else:
			quickfix.IntField.__init__(self, 40974, data)

class NoUnderlyingStreamEffectiveDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40975)
		else:
			quickfix.IntField.__init__(self, 40975, data)

class NoUnderlyingStreamTerminationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40976)
		else:
			quickfix.IntField.__init__(self, 40976, data)

class NoPaymentScheduleFixingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40977)
		else:
			quickfix.IntField.__init__(self, 40977, data)

class EncodedLegStreamTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40978)
		else:
			quickfix.IntField.__init__(self, 40978, data)

class EncodedLegStreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40979)
		else:
			quickfix.StringField.__init__(self, 40979, data)

class EncodedLegProvisionTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40980)
		else:
			quickfix.IntField.__init__(self, 40980, data)

class EncodedLegProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40981)
		else:
			quickfix.StringField.__init__(self, 40981, data)

class EncodedStreamTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40982)
		else:
			quickfix.IntField.__init__(self, 40982, data)

class EncodedStreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40983)
		else:
			quickfix.StringField.__init__(self, 40983, data)

class EncodedPaymentTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40984)
		else:
			quickfix.IntField.__init__(self, 40984, data)

class EncodedPaymentText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40985)
		else:
			quickfix.StringField.__init__(self, 40985, data)

class EncodedProvisionTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40986)
		else:
			quickfix.IntField.__init__(self, 40986, data)

class EncodedProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40987)
		else:
			quickfix.StringField.__init__(self, 40987, data)

class EncodedUnderlyingStreamTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40988)
		else:
			quickfix.IntField.__init__(self, 40988, data)

class EncodedUnderlyingStreamText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40989)
		else:
			quickfix.StringField.__init__(self, 40989, data)

class ProvisionCashSettlQuoteReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41406)
		else:
			quickfix.StringField.__init__(self, 41406, data)

class LegProvisionCashSettlQuoteReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41407)
		else:
			quickfix.StringField.__init__(self, 41407, data)

class EventMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2340)
		else:
			quickfix.StringField.__init__(self, 2340, data)

class LegEventMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2341)
		else:
			quickfix.StringField.__init__(self, 2341, data)

class UnderlyingEventMonthYear(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2342)
		else:
			quickfix.StringField.__init__(self, 2342, data)

class PreviousClearingBusinessDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2084)
		else:
			quickfix.StringField.__init__(self, 2084, data)

class ValuationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2085)
		else:
			quickfix.StringField.__init__(self, 2085, data)

class ValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2086)
		else:
			quickfix.StringField.__init__(self, 2086, data)

class ValuationBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2087)
		else:
			quickfix.StringField.__init__(self, 2087, data)

class MarginAmtFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2088)
		else:
			quickfix.DoubleField.__init__(self, 2088, data)

class MarginAmtFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2089)
		else:
			quickfix.CharField.__init__(self, 2089, data)

class CollateralFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2090)
		else:
			quickfix.DoubleField.__init__(self, 2090, data)

class CollateralFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2091)
		else:
			quickfix.CharField.__init__(self, 2091, data)

class CollateralAmountMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2092)
		else:
			quickfix.StringField.__init__(self, 2092, data)

class CollateralAmountMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2093)
		else:
			quickfix.StringField.__init__(self, 2093, data)

class PayCollectFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2094)
		else:
			quickfix.DoubleField.__init__(self, 2094, data)

class PayCollectFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2095)
		else:
			quickfix.CharField.__init__(self, 2095, data)

class PosAmtStreamDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2096)
		else:
			quickfix.StringField.__init__(self, 2096, data)

class PositionFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2097)
		else:
			quickfix.DoubleField.__init__(self, 2097, data)

class PositionFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2098)
		else:
			quickfix.CharField.__init__(self, 2098, data)

class PosAmtMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2099)
		else:
			quickfix.StringField.__init__(self, 2099, data)

class PosAmtMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2100)
		else:
			quickfix.StringField.__init__(self, 2100, data)

class TerminatedIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2101)
		else:
			quickfix.BoolField.__init__(self, 2101, data)

class ShortMarkingExemptIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2102)
		else:
			quickfix.BoolField.__init__(self, 2102, data)

class RelatedRegulatoryTradeIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2103)
		else:
			quickfix.StringField.__init__(self, 2103, data)

class NoAttachments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2104)
		else:
			quickfix.IntField.__init__(self, 2104, data)

class AttachmentName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2105)
		else:
			quickfix.StringField.__init__(self, 2105, data)

class AttachmentMediaType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2106)
		else:
			quickfix.StringField.__init__(self, 2106, data)

class AttachmentClassification(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2107)
		else:
			quickfix.StringField.__init__(self, 2107, data)

class AttachmentExternalURL(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2108)
		else:
			quickfix.StringField.__init__(self, 2108, data)

class AttachmentEncodingType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2109)
		else:
			quickfix.IntField.__init__(self, 2109, data)

class UnencodedAttachmentLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2110)
		else:
			quickfix.IntField.__init__(self, 2110, data)

class EncodedAttachmentLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2111)
		else:
			quickfix.IntField.__init__(self, 2111, data)

class EncodedAttachment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2112)
		else:
			quickfix.StringField.__init__(self, 2112, data)

class NoAttachmentKeywords(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2113)
		else:
			quickfix.IntField.__init__(self, 2113, data)

class AttachmentKeyword(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2114)
		else:
			quickfix.StringField.__init__(self, 2114, data)

class NegotiationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2115)
		else:
			quickfix.IntField.__init__(self, 2115, data)

class NextAuctionTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2116)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2116, data)

class NoAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2304)
		else:
			quickfix.IntField.__init__(self, 2304, data)

class AssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2305)
		else:
			quickfix.StringField.__init__(self, 2305, data)

class AssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2306)
		else:
			quickfix.StringField.__init__(self, 2306, data)

class AssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2307)
		else:
			quickfix.StringField.__init__(self, 2307, data)

class CommRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 1233)
		else:
			quickfix.DoubleField.__init__(self, 1233, data)

class CommUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1238)
		else:
			quickfix.StringField.__init__(self, 1238, data)

class NoComplexEventAveragingObservations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40994)
		else:
			quickfix.IntField.__init__(self, 40994, data)

class ComplexEventAveragingObservationNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40995)
		else:
			quickfix.IntField.__init__(self, 40995, data)

class ComplexEventAveragingWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 40996)
		else:
			quickfix.DoubleField.__init__(self, 40996, data)

class NoComplexEventCreditEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40997)
		else:
			quickfix.IntField.__init__(self, 40997, data)

class ComplexEventCreditEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40998)
		else:
			quickfix.StringField.__init__(self, 40998, data)

class ComplexEventCreditEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40999)
		else:
			quickfix.StringField.__init__(self, 40999, data)

class ComplexEventCreditEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41000)
		else:
			quickfix.StringField.__init__(self, 41000, data)

class ComplexEventCreditEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41001)
		else:
			quickfix.IntField.__init__(self, 41001, data)

class ComplexEventCreditEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41002)
		else:
			quickfix.StringField.__init__(self, 41002, data)

class ComplexEventCreditEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41003)
		else:
			quickfix.IntField.__init__(self, 41003, data)

class ComplexEventCreditEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41004)
		else:
			quickfix.IntField.__init__(self, 41004, data)

class NoComplexEventCreditEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41005)
		else:
			quickfix.IntField.__init__(self, 41005, data)

class ComplexEventCreditEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 41006)
		else:
			quickfix.CharField.__init__(self, 41006, data)

class NoComplexEventPeriodDateTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41007)
		else:
			quickfix.IntField.__init__(self, 41007, data)

class ComplexEventPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41008)
		else:
			quickfix.StringField.__init__(self, 41008, data)

class ComplexEventPeriodTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41009)
		else:
			quickfix.StringField.__init__(self, 41009, data)

class NoComplexEventPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41010)
		else:
			quickfix.IntField.__init__(self, 41010, data)

class ComplexEventPeriodType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41011)
		else:
			quickfix.IntField.__init__(self, 41011, data)

class ComplexEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41012)
		else:
			quickfix.StringField.__init__(self, 41012, data)

class NoComplexEventRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41013)
		else:
			quickfix.IntField.__init__(self, 41013, data)

class ComplexEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41014)
		else:
			quickfix.IntField.__init__(self, 41014, data)

class ComplexEventRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41015)
		else:
			quickfix.IntField.__init__(self, 41015, data)

class ComplexEventReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41016)
		else:
			quickfix.StringField.__init__(self, 41016, data)

class ComplexEventReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41017)
		else:
			quickfix.StringField.__init__(self, 41017, data)

class NoComplexEventDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41018)
		else:
			quickfix.IntField.__init__(self, 41018, data)

class ComplexEventDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41019)
		else:
			quickfix.StringField.__init__(self, 41019, data)

class ComplexEventDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41020)
		else:
			quickfix.StringField.__init__(self, 41020, data)

class ComplexEventDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41021)
		else:
			quickfix.IntField.__init__(self, 41021, data)

class ComplexEventDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41022)
		else:
			quickfix.IntField.__init__(self, 41022, data)

class ComplexEventDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41023)
		else:
			quickfix.StringField.__init__(self, 41023, data)

class ComplexEventDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41024)
		else:
			quickfix.IntField.__init__(self, 41024, data)

class ComplexEventDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41025)
		else:
			quickfix.IntField.__init__(self, 41025, data)

class ComplexEventDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41026)
		else:
			quickfix.StringField.__init__(self, 41026, data)

class ComplexEventFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41027)
		else:
			quickfix.StringField.__init__(self, 41027, data)

class ComplexEventFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41028)
		else:
			quickfix.StringField.__init__(self, 41028, data)

class NoComplexEventCreditEventSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41029)
		else:
			quickfix.IntField.__init__(self, 41029, data)

class ComplexEventCreditEventSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41030)
		else:
			quickfix.StringField.__init__(self, 41030, data)

class ComplexOptPayoutPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2117)
		else:
			quickfix.IntField.__init__(self, 2117, data)

class ComplexOptPayoutReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2118)
		else:
			quickfix.IntField.__init__(self, 2118, data)

class ComplexOptPayoutUnderlier(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2119)
		else:
			quickfix.StringField.__init__(self, 2119, data)

class ComplexOptPayoutPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2120)
		else:
			quickfix.DoubleField.__init__(self, 2120, data)

class ComplexOptPayoutTime(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2121)
		else:
			quickfix.IntField.__init__(self, 2121, data)

class ComplexOptPayoutCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2122)
		else:
			quickfix.StringField.__init__(self, 2122, data)

class ComplexEventPricePercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2123)
		else:
			quickfix.DoubleField.__init__(self, 2123, data)

class ComplexEventCurrencyOne(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2124)
		else:
			quickfix.StringField.__init__(self, 2124, data)

class ComplexEventCurrencyTwo(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2125)
		else:
			quickfix.StringField.__init__(self, 2125, data)

class ComplexEventQuoteBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2126)
		else:
			quickfix.IntField.__init__(self, 2126, data)

class ComplexEventFixedFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2127)
		else:
			quickfix.DoubleField.__init__(self, 2127, data)

class ComplexEventDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2128)
		else:
			quickfix.StringField.__init__(self, 2128, data)

class ComplexEventCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2129)
		else:
			quickfix.IntField.__init__(self, 2129, data)

class ComplexEventStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2130)
		else:
			quickfix.DoubleField.__init__(self, 2130, data)

class ComplexEventStrikeFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2131)
		else:
			quickfix.DoubleField.__init__(self, 2131, data)

class ComplexEventStrikeNumberOfOptions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2132)
		else:
			quickfix.IntField.__init__(self, 2132, data)

class ComplexEventCreditEventsXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2133)
		else:
			quickfix.StringField.__init__(self, 2133, data)

class ComplexEventCreditEventNotifyingParty(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2134)
		else:
			quickfix.IntField.__init__(self, 2134, data)

class ComplexEventCreditEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2135)
		else:
			quickfix.StringField.__init__(self, 2135, data)

class ComplexEventCreditEventStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2136)
		else:
			quickfix.BoolField.__init__(self, 2136, data)

class ComplexEventCreditEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2137)
		else:
			quickfix.IntField.__init__(self, 2137, data)

class ComplexEventXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2138)
		else:
			quickfix.StringField.__init__(self, 2138, data)

class ComplexEventXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2139)
		else:
			quickfix.StringField.__init__(self, 2139, data)

class NoComplexEventSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41031)
		else:
			quickfix.IntField.__init__(self, 41031, data)

class ComplexEventScheduleStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41032)
		else:
			quickfix.StringField.__init__(self, 41032, data)

class ComplexEventScheduleEndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41033)
		else:
			quickfix.StringField.__init__(self, 41033, data)

class ComplexEventScheduleFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41034)
		else:
			quickfix.IntField.__init__(self, 41034, data)

class ComplexEventScheduleFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41035)
		else:
			quickfix.StringField.__init__(self, 41035, data)

class ComplexEventScheduleRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41036)
		else:
			quickfix.StringField.__init__(self, 41036, data)

class NoDeliverySchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41037)
		else:
			quickfix.IntField.__init__(self, 41037, data)

class DeliveryScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41038)
		else:
			quickfix.IntField.__init__(self, 41038, data)

class DeliveryScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41039)
		else:
			quickfix.StringField.__init__(self, 41039, data)

class DeliveryScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41040)
		else:
			quickfix.DoubleField.__init__(self, 41040, data)

class DeliveryScheduleNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41041)
		else:
			quickfix.StringField.__init__(self, 41041, data)

class DeliveryScheduleNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41042)
		else:
			quickfix.IntField.__init__(self, 41042, data)

class DeliveryScheduleNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41043)
		else:
			quickfix.DoubleField.__init__(self, 41043, data)

class DeliverySchedulePositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41044)
		else:
			quickfix.DoubleField.__init__(self, 41044, data)

class DeliveryScheduleToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41045)
		else:
			quickfix.StringField.__init__(self, 41045, data)

class DeliveryScheduleToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41046)
		else:
			quickfix.IntField.__init__(self, 41046, data)

class DeliveryScheduleSettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41047)
		else:
			quickfix.StringField.__init__(self, 41047, data)

class DeliveryScheduleSettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41048)
		else:
			quickfix.StringField.__init__(self, 41048, data)

class DeliveryScheduleSettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41049)
		else:
			quickfix.IntField.__init__(self, 41049, data)

class DeliveryScheduleSettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41050)
		else:
			quickfix.IntField.__init__(self, 41050, data)

class NoDeliveryScheduleSettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41051)
		else:
			quickfix.IntField.__init__(self, 41051, data)

class DeliveryScheduleSettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41052)
		else:
			quickfix.IntField.__init__(self, 41052, data)

class DeliveryScheduleSettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41053)
		else:
			quickfix.IntField.__init__(self, 41053, data)

class NoDeliveryScheduleSettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41054)
		else:
			quickfix.IntField.__init__(self, 41054, data)

class DeliveryScheduleSettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41055)
		else:
			quickfix.StringField.__init__(self, 41055, data)

class DeliveryScheduleSettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41056)
		else:
			quickfix.StringField.__init__(self, 41056, data)

class DeliveryScheduleSettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41057)
		else:
			quickfix.IntField.__init__(self, 41057, data)

class DeliveryStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41058)
		else:
			quickfix.IntField.__init__(self, 41058, data)

class DeliveryStreamPipeline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41059)
		else:
			quickfix.StringField.__init__(self, 41059, data)

class DeliveryStreamEntryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41060)
		else:
			quickfix.StringField.__init__(self, 41060, data)

class DeliveryStreamWithdrawalPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41061)
		else:
			quickfix.StringField.__init__(self, 41061, data)

class DeliveryStreamDeliveryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41062)
		else:
			quickfix.StringField.__init__(self, 41062, data)

class DeliveryStreamDeliveryRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41063)
		else:
			quickfix.IntField.__init__(self, 41063, data)

class DeliveryStreamDeliveryContingency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41064)
		else:
			quickfix.StringField.__init__(self, 41064, data)

class DeliveryStreamDeliveryContingentPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41065)
		else:
			quickfix.IntField.__init__(self, 41065, data)

class DeliveryStreamDeliverAtSourceIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41066)
		else:
			quickfix.BoolField.__init__(self, 41066, data)

class DeliveryStreamRiskApportionment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41067)
		else:
			quickfix.StringField.__init__(self, 41067, data)

class DeliveryStreamRiskApportionmentSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41218)
		else:
			quickfix.StringField.__init__(self, 41218, data)

class DeliveryStreamTitleTransferLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41068)
		else:
			quickfix.StringField.__init__(self, 41068, data)

class DeliveryStreamTitleTransferCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41069)
		else:
			quickfix.IntField.__init__(self, 41069, data)

class DeliveryStreamImporterOfRecord(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41070)
		else:
			quickfix.StringField.__init__(self, 41070, data)

class DeliveryStreamNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41071)
		else:
			quickfix.DoubleField.__init__(self, 41071, data)

class DeliveryStreamPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41072)
		else:
			quickfix.DoubleField.__init__(self, 41072, data)

class DeliveryStreamToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41073)
		else:
			quickfix.StringField.__init__(self, 41073, data)

class DeliveryStreamToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41074)
		else:
			quickfix.IntField.__init__(self, 41074, data)

class DeliveryStreamToleranceOptionSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41075)
		else:
			quickfix.IntField.__init__(self, 41075, data)

class DeliveryStreamTotalPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41076)
		else:
			quickfix.DoubleField.__init__(self, 41076, data)

class DeliveryStreamTotalNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41077)
		else:
			quickfix.DoubleField.__init__(self, 41077, data)

class DeliveryStreamNotionalConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41078)
		else:
			quickfix.DoubleField.__init__(self, 41078, data)

class DeliveryStreamTransportEquipment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41079)
		else:
			quickfix.StringField.__init__(self, 41079, data)

class DeliveryStreamElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41080)
		else:
			quickfix.IntField.__init__(self, 41080, data)

class NoDeliveryStreamCycles(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41081)
		else:
			quickfix.IntField.__init__(self, 41081, data)

class DeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41082)
		else:
			quickfix.StringField.__init__(self, 41082, data)

class EncodedDeliveryStreamCycleDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41083)
		else:
			quickfix.IntField.__init__(self, 41083, data)

class EncodedDeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41084)
		else:
			quickfix.StringField.__init__(self, 41084, data)

class NoDeliveryStreamCommoditySources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41085)
		else:
			quickfix.IntField.__init__(self, 41085, data)

class DeliveryStreamCommoditySource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41086)
		else:
			quickfix.StringField.__init__(self, 41086, data)

class DocumentationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1513)
		else:
			quickfix.StringField.__init__(self, 1513, data)

class EncodedDocumentationTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1525)
		else:
			quickfix.IntField.__init__(self, 1525, data)

class EncodedDocumentationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1527)
		else:
			quickfix.StringField.__init__(self, 1527, data)

class SwapSubClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1575)
		else:
			quickfix.StringField.__init__(self, 1575, data)

class SettlRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1577)
		else:
			quickfix.StringField.__init__(self, 1577, data)

class SettlRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1580)
		else:
			quickfix.StringField.__init__(self, 1580, data)

class OptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1581)
		else:
			quickfix.StringField.__init__(self, 1581, data)

class EncodedOptionExpirationDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 1678)
		else:
			quickfix.IntField.__init__(self, 1678, data)

class EncodedOptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1697)
		else:
			quickfix.StringField.__init__(self, 1697, data)

class StrikeUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1698)
		else:
			quickfix.StringField.__init__(self, 1698, data)

class StrikeIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 1866)
		else:
			quickfix.StringField.__init__(self, 1866, data)

class StrikeIndexSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2001)
		else:
			quickfix.DoubleField.__init__(self, 2001, data)

class ValuationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2002)
		else:
			quickfix.StringField.__init__(self, 2002, data)

class ValuationReferenceModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2140)
		else:
			quickfix.StringField.__init__(self, 2140, data)

class StrategyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2141)
		else:
			quickfix.StringField.__init__(self, 2141, data)

class CommonPricingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2142)
		else:
			quickfix.BoolField.__init__(self, 2142, data)

class SettlDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2143)
		else:
			quickfix.IntField.__init__(self, 2143, data)

class InstrumentRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2144)
		else:
			quickfix.CharField.__init__(self, 2144, data)

class InstrumentRoundingPrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2145)
		else:
			quickfix.IntField.__init__(self, 2145, data)

class LegSettleOnOpenFlag(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2146)
		else:
			quickfix.StringField.__init__(self, 2146, data)

class LegInstrmtAssignmentMethod(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2147)
		else:
			quickfix.CharField.__init__(self, 2147, data)

class LegSecurityStatus(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2148)
		else:
			quickfix.StringField.__init__(self, 2148, data)

class LegRestructuringType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2149)
		else:
			quickfix.StringField.__init__(self, 2149, data)

class LegSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2150)
		else:
			quickfix.StringField.__init__(self, 2150, data)

class LegNotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2151)
		else:
			quickfix.DoubleField.__init__(self, 2151, data)

class LegOriginalNotionalPercentageOutstanding(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2152)
		else:
			quickfix.DoubleField.__init__(self, 2152, data)

class LegAttachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2153)
		else:
			quickfix.DoubleField.__init__(self, 2153, data)

class LegDetachmentPoint(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2154)
		else:
			quickfix.DoubleField.__init__(self, 2154, data)

class LegObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2155)
		else:
			quickfix.StringField.__init__(self, 2155, data)

class LegSwapSubClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2156)
		else:
			quickfix.StringField.__init__(self, 2156, data)

class LegNthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2157)
		else:
			quickfix.IntField.__init__(self, 2157, data)

class LegMthToDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2158)
		else:
			quickfix.IntField.__init__(self, 2158, data)

class LegSettledEntityMatrixSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2159)
		else:
			quickfix.StringField.__init__(self, 2159, data)

class LegSettledEntityMatrixPublicationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2160)
		else:
			quickfix.StringField.__init__(self, 2160, data)

class LegCouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2161)
		else:
			quickfix.IntField.__init__(self, 2161, data)

class LegTotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2162)
		else:
			quickfix.DoubleField.__init__(self, 2162, data)

class LegCouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2163)
		else:
			quickfix.IntField.__init__(self, 2163, data)

class LegCouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2164)
		else:
			quickfix.StringField.__init__(self, 2164, data)

class LegCouponDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2165)
		else:
			quickfix.IntField.__init__(self, 2165, data)

class LegConvertibleBondEquityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2166)
		else:
			quickfix.StringField.__init__(self, 2166, data)

class LegConvertibleBondEquityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2167)
		else:
			quickfix.StringField.__init__(self, 2167, data)

class LegContractPriceRefMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2168)
		else:
			quickfix.StringField.__init__(self, 2168, data)

class LegLienSeniority(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2169)
		else:
			quickfix.IntField.__init__(self, 2169, data)

class LegLoanFacility(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2170)
		else:
			quickfix.IntField.__init__(self, 2170, data)

class LegReferenceEntityType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2171)
		else:
			quickfix.IntField.__init__(self, 2171, data)

class LegIndexSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2172)
		else:
			quickfix.IntField.__init__(self, 2172, data)

class LegIndexAnnexVersion(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2173)
		else:
			quickfix.IntField.__init__(self, 2173, data)

class LegIndexAnnexDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2174)
		else:
			quickfix.StringField.__init__(self, 2174, data)

class LegIndexAnnexSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2175)
		else:
			quickfix.StringField.__init__(self, 2175, data)

class LegSettlRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2176)
		else:
			quickfix.StringField.__init__(self, 2176, data)

class LegSettlRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2177)
		else:
			quickfix.StringField.__init__(self, 2177, data)

class LegOptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2178)
		else:
			quickfix.StringField.__init__(self, 2178, data)

class EncodedLegOptionExpirationDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2179)
		else:
			quickfix.IntField.__init__(self, 2179, data)

class EncodedLegOptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2180)
		else:
			quickfix.StringField.__init__(self, 2180, data)

class LegStrikeMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2181)
		else:
			quickfix.DoubleField.__init__(self, 2181, data)

class LegStrikeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2182)
		else:
			quickfix.DoubleField.__init__(self, 2182, data)

class LegStrikeUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2183)
		else:
			quickfix.StringField.__init__(self, 2183, data)

class LegStrikeIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2184)
		else:
			quickfix.StringField.__init__(self, 2184, data)

class LegStrikeIndexSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2185)
		else:
			quickfix.DoubleField.__init__(self, 2185, data)

class LegStrikePriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2186)
		else:
			quickfix.IntField.__init__(self, 2186, data)

class LegStrikePriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2187)
		else:
			quickfix.IntField.__init__(self, 2187, data)

class LegStrikePriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2188)
		else:
			quickfix.DoubleField.__init__(self, 2188, data)

class LegUnderlyingPriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2189)
		else:
			quickfix.IntField.__init__(self, 2189, data)

class LegMinPriceIncrement(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2190)
		else:
			quickfix.DoubleField.__init__(self, 2190, data)

class LegMinPriceIncrementAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2191)
		else:
			quickfix.DoubleField.__init__(self, 2191, data)

class LegSettlMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2192)
		else:
			quickfix.StringField.__init__(self, 2192, data)

class LegOptPayoutType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2193)
		else:
			quickfix.IntField.__init__(self, 2193, data)

class LegOptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2194)
		else:
			quickfix.DoubleField.__init__(self, 2194, data)

class LegPriceQuoteMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2195)
		else:
			quickfix.StringField.__init__(self, 2195, data)

class LegValuationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2196)
		else:
			quickfix.StringField.__init__(self, 2196, data)

class LegValuationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2197)
		else:
			quickfix.StringField.__init__(self, 2197, data)

class LegValuationReferenceModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2198)
		else:
			quickfix.StringField.__init__(self, 2198, data)

class LegListMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2199)
		else:
			quickfix.IntField.__init__(self, 2199, data)

class LegCapPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2200)
		else:
			quickfix.DoubleField.__init__(self, 2200, data)

class LegFloorPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2201)
		else:
			quickfix.DoubleField.__init__(self, 2201, data)

class LegFlexibleIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2202)
		else:
			quickfix.BoolField.__init__(self, 2202, data)

class LegFlexProductEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2203)
		else:
			quickfix.BoolField.__init__(self, 2203, data)

class LegPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2205)
		else:
			quickfix.IntField.__init__(self, 2205, data)

class LegNTPositionLimit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2206)
		else:
			quickfix.IntField.__init__(self, 2206, data)

class LegCPProgram(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2207)
		else:
			quickfix.IntField.__init__(self, 2207, data)

class LegCPRegType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2208)
		else:
			quickfix.StringField.__init__(self, 2208, data)

class LegShortSaleRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2209)
		else:
			quickfix.IntField.__init__(self, 2209, data)

class LegStrategyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2211)
		else:
			quickfix.StringField.__init__(self, 2211, data)

class LegCommonPricingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2212)
		else:
			quickfix.BoolField.__init__(self, 2212, data)

class LegSettlDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2213)
		else:
			quickfix.IntField.__init__(self, 2213, data)

class LegInstrumentRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2214)
		else:
			quickfix.CharField.__init__(self, 2214, data)

class LegInstrumentRoundingPrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2215)
		else:
			quickfix.IntField.__init__(self, 2215, data)

class MarketDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41087)
		else:
			quickfix.IntField.__init__(self, 41087, data)

class MarketDisruptionFallbackProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41088)
		else:
			quickfix.IntField.__init__(self, 41088, data)

class MarketDisruptionMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41089)
		else:
			quickfix.IntField.__init__(self, 41089, data)

class MarketDisruptionMaterialityPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41090)
		else:
			quickfix.DoubleField.__init__(self, 41090, data)

class MarketDisruptionMinimumFuturesContracts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41091)
		else:
			quickfix.IntField.__init__(self, 41091, data)

class NoMarketDisruptionEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41092)
		else:
			quickfix.IntField.__init__(self, 41092, data)

class MarketDisruptionEvent(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41093)
		else:
			quickfix.StringField.__init__(self, 41093, data)

class NoMarketDisruptionFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41094)
		else:
			quickfix.IntField.__init__(self, 41094, data)

class MarketDisruptionFallbackType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41095)
		else:
			quickfix.StringField.__init__(self, 41095, data)

class NoMarketDisruptionFallbackReferencePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41096)
		else:
			quickfix.IntField.__init__(self, 41096, data)

class MarketDisruptionFallbackUnderlierType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41097)
		else:
			quickfix.IntField.__init__(self, 41097, data)

class MarketDisruptionFallbackUnderlierSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41098)
		else:
			quickfix.StringField.__init__(self, 41098, data)

class MarketDisruptionFallbackUnderlierSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41099)
		else:
			quickfix.StringField.__init__(self, 41099, data)

class MarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41100)
		else:
			quickfix.StringField.__init__(self, 41100, data)

class EncodedMarketDisruptionFallbackUnderlierSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41101)
		else:
			quickfix.IntField.__init__(self, 41101, data)

class EncodedMarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41102)
		else:
			quickfix.StringField.__init__(self, 41102, data)

class MarketDisruptionFallbackOpenUnits(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41103)
		else:
			quickfix.DoubleField.__init__(self, 41103, data)

class MarketDisruptionFallbackBasketCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41104)
		else:
			quickfix.StringField.__init__(self, 41104, data)

class MarketDisruptionFallbackBasketDivisor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41105)
		else:
			quickfix.DoubleField.__init__(self, 41105, data)

class MiscFeeRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2216)
		else:
			quickfix.DoubleField.__init__(self, 2216, data)

class MiscFeeAmountDue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2217)
		else:
			quickfix.DoubleField.__init__(self, 2217, data)

class ExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41106)
		else:
			quickfix.StringField.__init__(self, 41106, data)

class EncodedExerciseDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41107)
		else:
			quickfix.IntField.__init__(self, 41107, data)

class EncodedExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41108)
		else:
			quickfix.StringField.__init__(self, 41108, data)

class AutomaticExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41109)
		else:
			quickfix.BoolField.__init__(self, 41109, data)

class AutomaticExerciseThresholdRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41110)
		else:
			quickfix.DoubleField.__init__(self, 41110, data)

class ExerciseConfirmationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41111)
		else:
			quickfix.IntField.__init__(self, 41111, data)

class ManualNoticeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41112)
		else:
			quickfix.StringField.__init__(self, 41112, data)

class FallbackExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41113)
		else:
			quickfix.BoolField.__init__(self, 41113, data)

class LimitedRightToConfirmIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41114)
		else:
			quickfix.BoolField.__init__(self, 41114, data)

class ExerciseSplitTicketIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41115)
		else:
			quickfix.BoolField.__init__(self, 41115, data)

class NoOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41116)
		else:
			quickfix.IntField.__init__(self, 41116, data)

class OptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41117)
		else:
			quickfix.StringField.__init__(self, 41117, data)

class OptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41118)
		else:
			quickfix.IntField.__init__(self, 41118, data)

class OptionExerciseEarliestDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41119)
		else:
			quickfix.IntField.__init__(self, 41119, data)

class OptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41120)
		else:
			quickfix.IntField.__init__(self, 41120, data)

class OptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41121)
		else:
			quickfix.StringField.__init__(self, 41121, data)

class OptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41122)
		else:
			quickfix.IntField.__init__(self, 41122, data)

class OptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41123)
		else:
			quickfix.StringField.__init__(self, 41123, data)

class OptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41124)
		else:
			quickfix.StringField.__init__(self, 41124, data)

class OptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41125)
		else:
			quickfix.IntField.__init__(self, 41125, data)

class OptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41126)
		else:
			quickfix.IntField.__init__(self, 41126, data)

class OptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41127)
		else:
			quickfix.StringField.__init__(self, 41127, data)

class OptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41128)
		else:
			quickfix.IntField.__init__(self, 41128, data)

class OptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41129)
		else:
			quickfix.StringField.__init__(self, 41129, data)

class OptionExerciseSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41130)
		else:
			quickfix.IntField.__init__(self, 41130, data)

class OptionExerciseNominationDeadline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41131)
		else:
			quickfix.StringField.__init__(self, 41131, data)

class OptionExerciseFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41132)
		else:
			quickfix.StringField.__init__(self, 41132, data)

class OptionExerciseLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41133)
		else:
			quickfix.StringField.__init__(self, 41133, data)

class OptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41134)
		else:
			quickfix.StringField.__init__(self, 41134, data)

class OptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41135)
		else:
			quickfix.StringField.__init__(self, 41135, data)

class OptionExerciseTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41136)
		else:
			quickfix.StringField.__init__(self, 41136, data)

class NoOptionExerciseDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41137)
		else:
			quickfix.IntField.__init__(self, 41137, data)

class OptionExerciseDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41138)
		else:
			quickfix.StringField.__init__(self, 41138, data)

class OptionExerciseDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41139)
		else:
			quickfix.IntField.__init__(self, 41139, data)

class NoOptionExerciseExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41140)
		else:
			quickfix.IntField.__init__(self, 41140, data)

class OptionExerciseExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41141)
		else:
			quickfix.StringField.__init__(self, 41141, data)

class OptionExerciseExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41142)
		else:
			quickfix.IntField.__init__(self, 41142, data)

class OptionExerciseExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41143)
		else:
			quickfix.IntField.__init__(self, 41143, data)

class OptionExerciseExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41144)
		else:
			quickfix.IntField.__init__(self, 41144, data)

class OptionExerciseExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41145)
		else:
			quickfix.StringField.__init__(self, 41145, data)

class OptionExerciseExpirationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41146)
		else:
			quickfix.IntField.__init__(self, 41146, data)

class OptionExerciseExpirationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41147)
		else:
			quickfix.StringField.__init__(self, 41147, data)

class OptionExerciseExpirationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41148)
		else:
			quickfix.StringField.__init__(self, 41148, data)

class OptionExerciseExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41149)
		else:
			quickfix.IntField.__init__(self, 41149, data)

class OptionExerciseExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41150)
		else:
			quickfix.StringField.__init__(self, 41150, data)

class OptionExerciseExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41151)
		else:
			quickfix.StringField.__init__(self, 41151, data)

class NoOptionExerciseExpirationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41152)
		else:
			quickfix.IntField.__init__(self, 41152, data)

class OptionExerciseExpirationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41153)
		else:
			quickfix.StringField.__init__(self, 41153, data)

class OptionExerciseExpirationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41154)
		else:
			quickfix.IntField.__init__(self, 41154, data)

class PaymentUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41155)
		else:
			quickfix.StringField.__init__(self, 41155, data)

class PaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41156)
		else:
			quickfix.IntField.__init__(self, 41156, data)

class PaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41157)
		else:
			quickfix.IntField.__init__(self, 41157, data)

class PaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41158)
		else:
			quickfix.StringField.__init__(self, 41158, data)

class PaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41159)
		else:
			quickfix.IntField.__init__(self, 41159, data)

class PaymentForwardStartType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41160)
		else:
			quickfix.IntField.__init__(self, 41160, data)

class NoPaymentScheduleFixingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41161)
		else:
			quickfix.IntField.__init__(self, 41161, data)

class PaymentScheduleFixingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41162)
		else:
			quickfix.IntField.__init__(self, 41162, data)

class PaymentScheduleFixingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41163)
		else:
			quickfix.IntField.__init__(self, 41163, data)

class PaymentScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41164)
		else:
			quickfix.StringField.__init__(self, 41164, data)

class PaymentScheduleXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41165)
		else:
			quickfix.StringField.__init__(self, 41165, data)

class PaymentScheduleRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41166)
		else:
			quickfix.StringField.__init__(self, 41166, data)

class PaymentScheduleRateUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41167)
		else:
			quickfix.StringField.__init__(self, 41167, data)

class PaymentScheduleRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41168)
		else:
			quickfix.DoubleField.__init__(self, 41168, data)

class PaymentScheduleRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41169)
		else:
			quickfix.IntField.__init__(self, 41169, data)

class PaymentScheduleSettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41170)
		else:
			quickfix.DoubleField.__init__(self, 41170, data)

class PaymentScheduleSettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41171)
		else:
			quickfix.StringField.__init__(self, 41171, data)

class PaymentScheduleSettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41172)
		else:
			quickfix.StringField.__init__(self, 41172, data)

class PaymentScheduleStepUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41173)
		else:
			quickfix.StringField.__init__(self, 41173, data)

class PaymentScheduleFixingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41174)
		else:
			quickfix.IntField.__init__(self, 41174, data)

class PaymentScheduleFixingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41175)
		else:
			quickfix.IntField.__init__(self, 41175, data)

class PaymentScheduleFixingLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41176)
		else:
			quickfix.IntField.__init__(self, 41176, data)

class PaymentScheduleFixingLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41177)
		else:
			quickfix.StringField.__init__(self, 41177, data)

class PaymentScheduleFixingFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41178)
		else:
			quickfix.IntField.__init__(self, 41178, data)

class PaymentScheduleFixingFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41179)
		else:
			quickfix.StringField.__init__(self, 41179, data)

class PaymentStreamFlatRateIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41180)
		else:
			quickfix.BoolField.__init__(self, 41180, data)

class PaymentStreamFlatRateAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41181)
		else:
			quickfix.DoubleField.__init__(self, 41181, data)

class PaymentStreamFlatRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41182)
		else:
			quickfix.StringField.__init__(self, 41182, data)

class PaymentStreamMaximumPaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41183)
		else:
			quickfix.DoubleField.__init__(self, 41183, data)

class PaymentStreamMaximumPaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41184)
		else:
			quickfix.StringField.__init__(self, 41184, data)

class PaymentStreamMaximumTransactionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41185)
		else:
			quickfix.DoubleField.__init__(self, 41185, data)

class PaymentStreamMaximumTransactionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41186)
		else:
			quickfix.StringField.__init__(self, 41186, data)

class PaymentStreamFixedAmountUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41187)
		else:
			quickfix.StringField.__init__(self, 41187, data)

class PaymentStreamTotalFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41188)
		else:
			quickfix.DoubleField.__init__(self, 41188, data)

class PaymentStreamWorldScaleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41189)
		else:
			quickfix.DoubleField.__init__(self, 41189, data)

class PaymentStreamContractPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41190)
		else:
			quickfix.DoubleField.__init__(self, 41190, data)

class PaymentStreamContractPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41191)
		else:
			quickfix.StringField.__init__(self, 41191, data)

class NoPaymentStreamPricingBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41192)
		else:
			quickfix.IntField.__init__(self, 41192, data)

class PaymentStreamPricingBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41193)
		else:
			quickfix.StringField.__init__(self, 41193, data)

class PaymentStreamRateIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41194)
		else:
			quickfix.IntField.__init__(self, 41194, data)

class PaymentStreamRateIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41195)
		else:
			quickfix.StringField.__init__(self, 41195, data)

class PaymentStreamRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41196)
		else:
			quickfix.StringField.__init__(self, 41196, data)

class PaymentStreamRateIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41197)
		else:
			quickfix.DoubleField.__init__(self, 41197, data)

class PaymentStreamRateIndexUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41198)
		else:
			quickfix.StringField.__init__(self, 41198, data)

class PaymentStreamSettlLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41199)
		else:
			quickfix.IntField.__init__(self, 41199, data)

class PaymentStreamReferenceLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41200)
		else:
			quickfix.DoubleField.__init__(self, 41200, data)

class PaymentStreamReferenceLevelUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41201)
		else:
			quickfix.StringField.__init__(self, 41201, data)

class PaymentStreamReferenceLevelEqualsZeroIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41202)
		else:
			quickfix.BoolField.__init__(self, 41202, data)

class PaymentStreamRateSpreadCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41203)
		else:
			quickfix.StringField.__init__(self, 41203, data)

class PaymentStreamRateSpreadUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41204)
		else:
			quickfix.StringField.__init__(self, 41204, data)

class PaymentStreamRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41205)
		else:
			quickfix.DoubleField.__init__(self, 41205, data)

class PaymentStreamRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41206)
		else:
			quickfix.IntField.__init__(self, 41206, data)

class PaymentStreamLastResetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41207)
		else:
			quickfix.DoubleField.__init__(self, 41207, data)

class PaymentStreamFinalRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41208)
		else:
			quickfix.DoubleField.__init__(self, 41208, data)

class PaymentStreamCalculationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41209)
		else:
			quickfix.IntField.__init__(self, 41209, data)

class PaymentStreamCalculationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41210)
		else:
			quickfix.StringField.__init__(self, 41210, data)

class PaymentStreamFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41211)
		else:
			quickfix.IntField.__init__(self, 41211, data)

class PaymentStreamFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41212)
		else:
			quickfix.StringField.__init__(self, 41212, data)

class PaymentStreamPricingDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41213)
		else:
			quickfix.IntField.__init__(self, 41213, data)

class PaymentStreamPricingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41214)
		else:
			quickfix.IntField.__init__(self, 41214, data)

class PaymentStreamPricingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41215)
		else:
			quickfix.IntField.__init__(self, 41215, data)

class PaymentStreamPricingBusinessCalendar(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41216)
		else:
			quickfix.StringField.__init__(self, 41216, data)

class PaymentStreamPricingBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41217)
		else:
			quickfix.IntField.__init__(self, 41217, data)

class NoPaymentStreamPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41220)
		else:
			quickfix.IntField.__init__(self, 41220, data)

class PaymentStreamPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41221)
		else:
			quickfix.StringField.__init__(self, 41221, data)

class PaymentStreamPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41222)
		else:
			quickfix.IntField.__init__(self, 41222, data)

class PaymentStreamMasterAgreementPaymentDatesIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41223)
		else:
			quickfix.BoolField.__init__(self, 41223, data)

class NoPaymentStreamPricingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41224)
		else:
			quickfix.IntField.__init__(self, 41224, data)

class PaymentStreamPricingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41225)
		else:
			quickfix.StringField.__init__(self, 41225, data)

class PaymentStreamPricingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41226)
		else:
			quickfix.IntField.__init__(self, 41226, data)

class NoPaymentStreamPricingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41227)
		else:
			quickfix.IntField.__init__(self, 41227, data)

class PaymentStreamPricingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41228)
		else:
			quickfix.IntField.__init__(self, 41228, data)

class PaymentStreamPricingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41229)
		else:
			quickfix.IntField.__init__(self, 41229, data)

class NoPricingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41230)
		else:
			quickfix.IntField.__init__(self, 41230, data)

class PricingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41231)
		else:
			quickfix.StringField.__init__(self, 41231, data)

class PricingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41232)
		else:
			quickfix.StringField.__init__(self, 41232, data)

class PricingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41233)
		else:
			quickfix.IntField.__init__(self, 41233, data)

class PricingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41234)
		else:
			quickfix.StringField.__init__(self, 41234, data)

class PricingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41235)
		else:
			quickfix.StringField.__init__(self, 41235, data)

class PricingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41236)
		else:
			quickfix.StringField.__init__(self, 41236, data)

class NoStreamAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41237)
		else:
			quickfix.IntField.__init__(self, 41237, data)

class StreamAssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41238)
		else:
			quickfix.StringField.__init__(self, 41238, data)

class StreamAssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41239)
		else:
			quickfix.StringField.__init__(self, 41239, data)

class StreamAssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41240)
		else:
			quickfix.StringField.__init__(self, 41240, data)

class NoStreamCalculationPeriodDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41241)
		else:
			quickfix.IntField.__init__(self, 41241, data)

class StreamCalculationPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41242)
		else:
			quickfix.StringField.__init__(self, 41242, data)

class StreamCalculationPeriodDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41243)
		else:
			quickfix.IntField.__init__(self, 41243, data)

class StreamCalculationPeriodDatesXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41244)
		else:
			quickfix.StringField.__init__(self, 41244, data)

class StreamCalculationPeriodDatesXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41245)
		else:
			quickfix.StringField.__init__(self, 41245, data)

class StreamCalculationBalanceOfFirstPeriod(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41246)
		else:
			quickfix.BoolField.__init__(self, 41246, data)

class StreamCalculationCorrectionPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41247)
		else:
			quickfix.IntField.__init__(self, 41247, data)

class StreamCalculationCorrectionUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41248)
		else:
			quickfix.StringField.__init__(self, 41248, data)

class NoStreamCommoditySettlBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41249)
		else:
			quickfix.IntField.__init__(self, 41249, data)

class StreamCommoditySettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41250)
		else:
			quickfix.StringField.__init__(self, 41250, data)

class StreamCommodityBase(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41251)
		else:
			quickfix.StringField.__init__(self, 41251, data)

class StreamCommodityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41252)
		else:
			quickfix.StringField.__init__(self, 41252, data)

class StreamCommoditySecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41253)
		else:
			quickfix.StringField.__init__(self, 41253, data)

class StreamCommoditySecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41254)
		else:
			quickfix.StringField.__init__(self, 41254, data)

class StreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41255)
		else:
			quickfix.StringField.__init__(self, 41255, data)

class EncodedStreamCommodityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41256)
		else:
			quickfix.IntField.__init__(self, 41256, data)

class EncodedStreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41257)
		else:
			quickfix.StringField.__init__(self, 41257, data)

class StreamCommodityUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41258)
		else:
			quickfix.StringField.__init__(self, 41258, data)

class StreamCommodityCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41259)
		else:
			quickfix.StringField.__init__(self, 41259, data)

class StreamCommodityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41260)
		else:
			quickfix.StringField.__init__(self, 41260, data)

class StreamCommodityRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41261)
		else:
			quickfix.IntField.__init__(self, 41261, data)

class StreamCommodityRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41262)
		else:
			quickfix.StringField.__init__(self, 41262, data)

class StreamCommodityRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41263)
		else:
			quickfix.StringField.__init__(self, 41263, data)

class StreamDataProvider(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41264)
		else:
			quickfix.StringField.__init__(self, 41264, data)

class StreamCommodityPricingType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41265)
		else:
			quickfix.StringField.__init__(self, 41265, data)

class StreamCommodityNearbySettlDayPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41266)
		else:
			quickfix.IntField.__init__(self, 41266, data)

class StreamCommodityNearbySettlDayUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41267)
		else:
			quickfix.StringField.__init__(self, 41267, data)

class StreamCommoditySettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41268)
		else:
			quickfix.StringField.__init__(self, 41268, data)

class StreamCommoditySettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41269)
		else:
			quickfix.IntField.__init__(self, 41269, data)

class StreamCommoditySettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41270)
		else:
			quickfix.StringField.__init__(self, 41270, data)

class StreamCommoditySettlMonth(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41271)
		else:
			quickfix.IntField.__init__(self, 41271, data)

class StreamCommoditySettlDateRollPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41272)
		else:
			quickfix.IntField.__init__(self, 41272, data)

class StreamCommoditySettlDateRollUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41273)
		else:
			quickfix.StringField.__init__(self, 41273, data)

class StreamCommoditySettlDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41274)
		else:
			quickfix.IntField.__init__(self, 41274, data)

class StreamCommodityXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41275)
		else:
			quickfix.StringField.__init__(self, 41275, data)

class StreamCommodityXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41276)
		else:
			quickfix.StringField.__init__(self, 41276, data)

class NoStreamCommodityAltIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41277)
		else:
			quickfix.IntField.__init__(self, 41277, data)

class StreamCommodityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41278)
		else:
			quickfix.StringField.__init__(self, 41278, data)

class StreamCommodityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41279)
		else:
			quickfix.StringField.__init__(self, 41279, data)

class NoStreamCommodityDataSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41280)
		else:
			quickfix.IntField.__init__(self, 41280, data)

class StreamCommodityDataSourceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41281)
		else:
			quickfix.StringField.__init__(self, 41281, data)

class StreamCommodityDataSourceIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41282)
		else:
			quickfix.IntField.__init__(self, 41282, data)

class NoStreamCommoditySettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41283)
		else:
			quickfix.IntField.__init__(self, 41283, data)

class StreamCommoditySettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41284)
		else:
			quickfix.IntField.__init__(self, 41284, data)

class StreamCommoditySettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41285)
		else:
			quickfix.IntField.__init__(self, 41285, data)

class NoStreamCommoditySettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41286)
		else:
			quickfix.IntField.__init__(self, 41286, data)

class StreamCommoditySettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41287)
		else:
			quickfix.StringField.__init__(self, 41287, data)

class StreamCommoditySettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41288)
		else:
			quickfix.StringField.__init__(self, 41288, data)

class StreamCommoditySettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41588)
		else:
			quickfix.IntField.__init__(self, 41588, data)

class NoStreamCommoditySettlPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41289)
		else:
			quickfix.IntField.__init__(self, 41289, data)

class StreamCommoditySettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41290)
		else:
			quickfix.StringField.__init__(self, 41290, data)

class StreamCommoditySettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41291)
		else:
			quickfix.StringField.__init__(self, 41291, data)

class StreamCommoditySettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41292)
		else:
			quickfix.IntField.__init__(self, 41292, data)

class StreamCommoditySettlPeriodNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41293)
		else:
			quickfix.DoubleField.__init__(self, 41293, data)

class StreamCommoditySettlPeriodNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41294)
		else:
			quickfix.StringField.__init__(self, 41294, data)

class StreamCommoditySettlPeriodFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41295)
		else:
			quickfix.IntField.__init__(self, 41295, data)

class StreamCommoditySettlPeriodFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41296)
		else:
			quickfix.StringField.__init__(self, 41296, data)

class StreamCommoditySettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41297)
		else:
			quickfix.DoubleField.__init__(self, 41297, data)

class StreamCommoditySettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41298)
		else:
			quickfix.StringField.__init__(self, 41298, data)

class StreamCommoditySettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41299)
		else:
			quickfix.StringField.__init__(self, 41299, data)

class StreamCommoditySettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41300)
		else:
			quickfix.IntField.__init__(self, 41300, data)

class StreamCommoditySettlPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41301)
		else:
			quickfix.StringField.__init__(self, 41301, data)

class StreamCommoditySettlPeriodXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41302)
		else:
			quickfix.StringField.__init__(self, 41302, data)

class StreamXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41303)
		else:
			quickfix.StringField.__init__(self, 41303, data)

class StreamNotionalXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41305)
		else:
			quickfix.StringField.__init__(self, 41305, data)

class StreamNotionalFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41306)
		else:
			quickfix.IntField.__init__(self, 41306, data)

class StreamNotionalFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41307)
		else:
			quickfix.StringField.__init__(self, 41307, data)

class StreamNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41308)
		else:
			quickfix.IntField.__init__(self, 41308, data)

class StreamNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41309)
		else:
			quickfix.StringField.__init__(self, 41309, data)

class StreamTotalNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41310)
		else:
			quickfix.DoubleField.__init__(self, 41310, data)

class StreamTotalNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41311)
		else:
			quickfix.StringField.__init__(self, 41311, data)

class NoMandatoryClearingJurisdictions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41312)
		else:
			quickfix.IntField.__init__(self, 41312, data)

class MandatoryClearingJurisdiction(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41313)
		else:
			quickfix.StringField.__init__(self, 41313, data)

class LastQtyChanged(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2301)
		else:
			quickfix.DoubleField.__init__(self, 2301, data)

class TradeVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2302)
		else:
			quickfix.StringField.__init__(self, 2302, data)

class HistoricalReportIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2303)
		else:
			quickfix.BoolField.__init__(self, 2303, data)

class NoLegAdditionalTermBondRefs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41316)
		else:
			quickfix.IntField.__init__(self, 41316, data)

class LegAdditionalTermBondSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41317)
		else:
			quickfix.StringField.__init__(self, 41317, data)

class LegAdditionalTermBondSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41318)
		else:
			quickfix.StringField.__init__(self, 41318, data)

class LegAdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41319)
		else:
			quickfix.StringField.__init__(self, 41319, data)

class EncodedLegAdditionalTermBondDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41320)
		else:
			quickfix.IntField.__init__(self, 41320, data)

class EncodedLegAdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41321)
		else:
			quickfix.StringField.__init__(self, 41321, data)

class LegAdditionalTermBondCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41322)
		else:
			quickfix.StringField.__init__(self, 41322, data)

class LegAdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41323)
		else:
			quickfix.StringField.__init__(self, 41323, data)

class EncodedLegAdditionalTermBondIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41324)
		else:
			quickfix.IntField.__init__(self, 41324, data)

class EncodedLegAdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41325)
		else:
			quickfix.StringField.__init__(self, 41325, data)

class LegAdditionalTermBondSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41326)
		else:
			quickfix.StringField.__init__(self, 41326, data)

class LegAdditionalTermBondCouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41327)
		else:
			quickfix.IntField.__init__(self, 41327, data)

class LegAdditionalTermBondCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41328)
		else:
			quickfix.DoubleField.__init__(self, 41328, data)

class LegAdditionalTermBondMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41329)
		else:
			quickfix.StringField.__init__(self, 41329, data)

class LegAdditionalTermBondParValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41330)
		else:
			quickfix.DoubleField.__init__(self, 41330, data)

class LegAdditionalTermBondCurrentTotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41331)
		else:
			quickfix.DoubleField.__init__(self, 41331, data)

class LegAdditionalTermBondCouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41332)
		else:
			quickfix.IntField.__init__(self, 41332, data)

class LegAdditionalTermBondCouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41333)
		else:
			quickfix.StringField.__init__(self, 41333, data)

class LegAdditionalTermBondDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41334)
		else:
			quickfix.IntField.__init__(self, 41334, data)

class NoLegAdditionalTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41335)
		else:
			quickfix.IntField.__init__(self, 41335, data)

class LegAdditionalTermConditionPrecedentBondIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41336)
		else:
			quickfix.BoolField.__init__(self, 41336, data)

class LegAdditionalTermDiscrepancyClauseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41337)
		else:
			quickfix.BoolField.__init__(self, 41337, data)

class NoLegAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2308)
		else:
			quickfix.IntField.__init__(self, 2308, data)

class LegAssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2309)
		else:
			quickfix.StringField.__init__(self, 2309, data)

class LegAssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2310)
		else:
			quickfix.StringField.__init__(self, 2310, data)

class LegAssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2311)
		else:
			quickfix.StringField.__init__(self, 2311, data)

class NoLegCashSettlDealers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41342)
		else:
			quickfix.IntField.__init__(self, 41342, data)

class LegCashSettlDealer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41343)
		else:
			quickfix.StringField.__init__(self, 41343, data)

class NoLegCashSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41344)
		else:
			quickfix.IntField.__init__(self, 41344, data)

class LegCashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41345)
		else:
			quickfix.StringField.__init__(self, 41345, data)

class LegCasSettlValuationFirstBusinessDayOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41346)
		else:
			quickfix.IntField.__init__(self, 41346, data)

class LegCashSettlValuationSubsequentBusinessDaysOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41347)
		else:
			quickfix.IntField.__init__(self, 41347, data)

class LegCashSettlNumOfValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41348)
		else:
			quickfix.IntField.__init__(self, 41348, data)

class LegCashSettlValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41349)
		else:
			quickfix.StringField.__init__(self, 41349, data)

class LegCashSettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41350)
		else:
			quickfix.StringField.__init__(self, 41350, data)

class LegCashSettlQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41351)
		else:
			quickfix.IntField.__init__(self, 41351, data)

class LegCashSettlQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41352)
		else:
			quickfix.DoubleField.__init__(self, 41352, data)

class LegCashSettlQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41353)
		else:
			quickfix.StringField.__init__(self, 41353, data)

class LegCashSettlMinimumQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41354)
		else:
			quickfix.DoubleField.__init__(self, 41354, data)

class LegCashSettlMinimumQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41355)
		else:
			quickfix.StringField.__init__(self, 41355, data)

class LegCashSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41356)
		else:
			quickfix.IntField.__init__(self, 41356, data)

class LegCashSettlAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41357)
		else:
			quickfix.DoubleField.__init__(self, 41357, data)

class LegCashSettlRecoveryFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41358)
		else:
			quickfix.DoubleField.__init__(self, 41358, data)

class LegCashSettlFixedTermIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41359)
		else:
			quickfix.BoolField.__init__(self, 41359, data)

class LegCashSettlAccruedInterestIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41360)
		else:
			quickfix.BoolField.__init__(self, 41360, data)

class LegCashSettlValuationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41361)
		else:
			quickfix.IntField.__init__(self, 41361, data)

class LegCashSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41362)
		else:
			quickfix.StringField.__init__(self, 41362, data)

class NoLegComplexEventAveragingObservations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41363)
		else:
			quickfix.IntField.__init__(self, 41363, data)

class LegComplexEventAveragingObservationNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41364)
		else:
			quickfix.IntField.__init__(self, 41364, data)

class LegComplexEventAveragingWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41365)
		else:
			quickfix.DoubleField.__init__(self, 41365, data)

class NoLegComplexEventCreditEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41366)
		else:
			quickfix.IntField.__init__(self, 41366, data)

class LegComplexEventCreditEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41367)
		else:
			quickfix.StringField.__init__(self, 41367, data)

class LegComplexEventCreditEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41368)
		else:
			quickfix.StringField.__init__(self, 41368, data)

class LegComplexEventCreditEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41369)
		else:
			quickfix.StringField.__init__(self, 41369, data)

class LegComplexEventCreditEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41370)
		else:
			quickfix.IntField.__init__(self, 41370, data)

class LegComplexEventCreditEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41371)
		else:
			quickfix.StringField.__init__(self, 41371, data)

class LegComplexEventCreditEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41372)
		else:
			quickfix.IntField.__init__(self, 41372, data)

class LegComplexEventCreditEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41373)
		else:
			quickfix.IntField.__init__(self, 41373, data)

class NoLegComplexEventCreditEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41374)
		else:
			quickfix.IntField.__init__(self, 41374, data)

class LegComplexEventCreditEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 41375)
		else:
			quickfix.CharField.__init__(self, 41375, data)

class NoLegComplexEventPeriodDateTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41376)
		else:
			quickfix.IntField.__init__(self, 41376, data)

class LegComplexEventPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41377)
		else:
			quickfix.StringField.__init__(self, 41377, data)

class LegComplexEventPeriodTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41378)
		else:
			quickfix.StringField.__init__(self, 41378, data)

class NoLegComplexEventPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41379)
		else:
			quickfix.IntField.__init__(self, 41379, data)

class LegComplexEventPeriodType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41380)
		else:
			quickfix.IntField.__init__(self, 41380, data)

class LegComplexEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41381)
		else:
			quickfix.StringField.__init__(self, 41381, data)

class NoLegComplexEventRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41382)
		else:
			quickfix.IntField.__init__(self, 41382, data)

class LegComplexEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41383)
		else:
			quickfix.IntField.__init__(self, 41383, data)

class LegComplexEventRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41384)
		else:
			quickfix.IntField.__init__(self, 41384, data)

class LegComplexEventReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41385)
		else:
			quickfix.StringField.__init__(self, 41385, data)

class LegComplexEvenReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41386)
		else:
			quickfix.StringField.__init__(self, 41386, data)

class NoLegComplexEventDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41387)
		else:
			quickfix.IntField.__init__(self, 41387, data)

class LegComplexEventDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41388)
		else:
			quickfix.StringField.__init__(self, 41388, data)

class LegComplexEventDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41389)
		else:
			quickfix.StringField.__init__(self, 41389, data)

class LegComplexEventDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41390)
		else:
			quickfix.IntField.__init__(self, 41390, data)

class LegComplexEventDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41391)
		else:
			quickfix.IntField.__init__(self, 41391, data)

class LegComplexEventDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41392)
		else:
			quickfix.StringField.__init__(self, 41392, data)

class LegComplexEventDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41393)
		else:
			quickfix.IntField.__init__(self, 41393, data)

class LegComplexEventDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41394)
		else:
			quickfix.IntField.__init__(self, 41394, data)

class LegComplexEventDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41395)
		else:
			quickfix.StringField.__init__(self, 41395, data)

class LegComplexEventFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41396)
		else:
			quickfix.StringField.__init__(self, 41396, data)

class LegComplexEventFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41397)
		else:
			quickfix.StringField.__init__(self, 41397, data)

class NoLegComplexEventCreditEventSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41398)
		else:
			quickfix.IntField.__init__(self, 41398, data)

class LegComplexEventCreditEventSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41399)
		else:
			quickfix.StringField.__init__(self, 41399, data)

class NoLegComplexEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2218)
		else:
			quickfix.IntField.__init__(self, 2218, data)

class LegComplexEventType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2219)
		else:
			quickfix.IntField.__init__(self, 2219, data)

class LegComplexOptPayoutPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2220)
		else:
			quickfix.IntField.__init__(self, 2220, data)

class LegComplexOptPayoutReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2221)
		else:
			quickfix.IntField.__init__(self, 2221, data)

class LegComplexOptPayoutUnderlier(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2222)
		else:
			quickfix.StringField.__init__(self, 2222, data)

class LegComplexOptPayoutAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2223)
		else:
			quickfix.DoubleField.__init__(self, 2223, data)

class LegComplexOptPayoutPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2224)
		else:
			quickfix.DoubleField.__init__(self, 2224, data)

class LegComplexOptPayoutTime(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2225)
		else:
			quickfix.IntField.__init__(self, 2225, data)

class LegComplexOptPayoutCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2226)
		else:
			quickfix.StringField.__init__(self, 2226, data)

class LegComplexEventPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2227)
		else:
			quickfix.DoubleField.__init__(self, 2227, data)

class LegComplexEventPricePercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2228)
		else:
			quickfix.DoubleField.__init__(self, 2228, data)

class LegComplexEventPriceBoundaryMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2229)
		else:
			quickfix.IntField.__init__(self, 2229, data)

class LegComplexEventPriceBoundaryPrecision(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2230)
		else:
			quickfix.DoubleField.__init__(self, 2230, data)

class LegComplexEventPriceTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2231)
		else:
			quickfix.IntField.__init__(self, 2231, data)

class LegComplexEventCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2232)
		else:
			quickfix.IntField.__init__(self, 2232, data)

class LegComplexEventCurrencyOne(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2233)
		else:
			quickfix.StringField.__init__(self, 2233, data)

class LegComplexEventCurrencyTwo(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2234)
		else:
			quickfix.StringField.__init__(self, 2234, data)

class LegComplexEventQuoteBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2235)
		else:
			quickfix.IntField.__init__(self, 2235, data)

class LegComplexEventFixedFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2236)
		else:
			quickfix.DoubleField.__init__(self, 2236, data)

class LegComplexEventDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2237)
		else:
			quickfix.StringField.__init__(self, 2237, data)

class LegComplexEventCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2238)
		else:
			quickfix.IntField.__init__(self, 2238, data)

class LegComplexEventStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2239)
		else:
			quickfix.DoubleField.__init__(self, 2239, data)

class LegComplexEventStrikeFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2240)
		else:
			quickfix.DoubleField.__init__(self, 2240, data)

class LegComplexEventStrikeNumberOfOptions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2241)
		else:
			quickfix.IntField.__init__(self, 2241, data)

class LegComplexEventCreditEventsXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2242)
		else:
			quickfix.StringField.__init__(self, 2242, data)

class LegComplexEventCreditEventNotifyingParty(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2243)
		else:
			quickfix.IntField.__init__(self, 2243, data)

class LegComplexEventCreditEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2244)
		else:
			quickfix.StringField.__init__(self, 2244, data)

class LegComplexEventCreditEventStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2245)
		else:
			quickfix.BoolField.__init__(self, 2245, data)

class LegComplexEventCreditEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2246)
		else:
			quickfix.IntField.__init__(self, 2246, data)

class LegComplexEventXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2248)
		else:
			quickfix.StringField.__init__(self, 2248, data)

class LegComplexEventXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2249)
		else:
			quickfix.StringField.__init__(self, 2249, data)

class NoLegComplexEventDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2250)
		else:
			quickfix.IntField.__init__(self, 2250, data)

class LegComplexEventStartDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 2251)
		else:
			quickfix.UtcDateField.__init__(self, 2251, data)

class LegComplexEventEndDate(quickfix.UtcDateField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcDateField.__init__(self, 2252)
		else:
			quickfix.UtcDateField.__init__(self, 2252, data)

class NoLegComplexEventTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2253)
		else:
			quickfix.IntField.__init__(self, 2253, data)

class LegComplexEventStartTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2204)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2204, data)

class LegComplexEventEndTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2247)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2247, data)

class NoLegComplexEventSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41400)
		else:
			quickfix.IntField.__init__(self, 41400, data)

class LegComplexEventScheduleStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41401)
		else:
			quickfix.StringField.__init__(self, 41401, data)

class LegComplexEventScheduleEndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41402)
		else:
			quickfix.StringField.__init__(self, 41402, data)

class LegComplexEventScheduleFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41403)
		else:
			quickfix.IntField.__init__(self, 41403, data)

class LegComplexEventScheduleFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41404)
		else:
			quickfix.StringField.__init__(self, 41404, data)

class LegComplexEventScheduleRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41405)
		else:
			quickfix.StringField.__init__(self, 41405, data)

class NoLegDeliverySchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41408)
		else:
			quickfix.IntField.__init__(self, 41408, data)

class LegDeliveryScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41409)
		else:
			quickfix.IntField.__init__(self, 41409, data)

class LegDeliveryScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41410)
		else:
			quickfix.StringField.__init__(self, 41410, data)

class LegDeliveryScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41411)
		else:
			quickfix.DoubleField.__init__(self, 41411, data)

class LegDeliveryScheduleNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41412)
		else:
			quickfix.StringField.__init__(self, 41412, data)

class LegDeliveryScheduleNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41413)
		else:
			quickfix.IntField.__init__(self, 41413, data)

class LegDeliveryScheduleNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41414)
		else:
			quickfix.DoubleField.__init__(self, 41414, data)

class LegDeliverySchedulePositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41415)
		else:
			quickfix.DoubleField.__init__(self, 41415, data)

class LegDeliveryScheduleToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41416)
		else:
			quickfix.StringField.__init__(self, 41416, data)

class LegDeliveryScheduleToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41417)
		else:
			quickfix.IntField.__init__(self, 41417, data)

class LegDeliveryScheduleSettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41418)
		else:
			quickfix.StringField.__init__(self, 41418, data)

class LegDeliveryScheduleSettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41419)
		else:
			quickfix.StringField.__init__(self, 41419, data)

class LegDeliveryScheduleSettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41420)
		else:
			quickfix.IntField.__init__(self, 41420, data)

class LegDeliveryScheduleSettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41421)
		else:
			quickfix.IntField.__init__(self, 41421, data)

class NoLegDeliveryScheduleSettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41422)
		else:
			quickfix.IntField.__init__(self, 41422, data)

class LegDeliveryScheduleSettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41423)
		else:
			quickfix.IntField.__init__(self, 41423, data)

class LegDeliveryScheduleSettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41424)
		else:
			quickfix.IntField.__init__(self, 41424, data)

class NoLegDeliveryScheduleSettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41425)
		else:
			quickfix.IntField.__init__(self, 41425, data)

class LegDeliveryScheduleSettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41426)
		else:
			quickfix.StringField.__init__(self, 41426, data)

class LegDeliveryScheduleSettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41427)
		else:
			quickfix.StringField.__init__(self, 41427, data)

class LegDeliveryScheduleSettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41428)
		else:
			quickfix.IntField.__init__(self, 41428, data)

class LegDeliveryStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41429)
		else:
			quickfix.IntField.__init__(self, 41429, data)

class LegDeliveryStreamPipeline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41430)
		else:
			quickfix.StringField.__init__(self, 41430, data)

class LegDeliveryStreamEntryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41431)
		else:
			quickfix.StringField.__init__(self, 41431, data)

class LegDeliveryStreamWithdrawalPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41432)
		else:
			quickfix.StringField.__init__(self, 41432, data)

class LegDeliveryStreamDeliveryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41433)
		else:
			quickfix.StringField.__init__(self, 41433, data)

class LegDeliveryStreamDeliveryRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41434)
		else:
			quickfix.IntField.__init__(self, 41434, data)

class LegDeliveryStreamDeliveryContingency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41435)
		else:
			quickfix.StringField.__init__(self, 41435, data)

class LegDeliveryStreamDeliveryContingentPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41436)
		else:
			quickfix.IntField.__init__(self, 41436, data)

class LegDeliveryStreamDeliverAtSourceIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41437)
		else:
			quickfix.BoolField.__init__(self, 41437, data)

class LegDeliveryStreamRiskApportionment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41438)
		else:
			quickfix.StringField.__init__(self, 41438, data)

class LegDeliveryStreamRiskApportionmentSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41219)
		else:
			quickfix.StringField.__init__(self, 41219, data)

class LegDeliveryStreamTitleTransferLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41439)
		else:
			quickfix.StringField.__init__(self, 41439, data)

class LegDeliveryStreamTitleTransferCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41440)
		else:
			quickfix.IntField.__init__(self, 41440, data)

class LegDeliveryStreamImporterOfRecord(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41441)
		else:
			quickfix.StringField.__init__(self, 41441, data)

class LegDeliveryStreamNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41442)
		else:
			quickfix.DoubleField.__init__(self, 41442, data)

class LegDeliveryStreamPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41443)
		else:
			quickfix.DoubleField.__init__(self, 41443, data)

class LegDeliveryStreamToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41444)
		else:
			quickfix.StringField.__init__(self, 41444, data)

class LegDeliveryStreamToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41445)
		else:
			quickfix.IntField.__init__(self, 41445, data)

class LegDeliveryStreamToleranceOptionSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41446)
		else:
			quickfix.IntField.__init__(self, 41446, data)

class LegDeliveryStreamTotalPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41447)
		else:
			quickfix.DoubleField.__init__(self, 41447, data)

class LegDeliveryStreamTotalNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41448)
		else:
			quickfix.DoubleField.__init__(self, 41448, data)

class LegDeliveryStreamNotionalConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41449)
		else:
			quickfix.DoubleField.__init__(self, 41449, data)

class LegDeliveryStreamTransportEquipment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41450)
		else:
			quickfix.StringField.__init__(self, 41450, data)

class LegDeliveryStreamElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41451)
		else:
			quickfix.IntField.__init__(self, 41451, data)

class NoLegStreamAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41452)
		else:
			quickfix.IntField.__init__(self, 41452, data)

class LegStreamAssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41453)
		else:
			quickfix.StringField.__init__(self, 41453, data)

class LegStreamAssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41454)
		else:
			quickfix.StringField.__init__(self, 41454, data)

class LegStreamAssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41455)
		else:
			quickfix.StringField.__init__(self, 41455, data)

class NoLegDeliveryStreamCycles(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41456)
		else:
			quickfix.IntField.__init__(self, 41456, data)

class LegDeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41457)
		else:
			quickfix.StringField.__init__(self, 41457, data)

class EncodedLegDeliveryStreamCycleDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41458)
		else:
			quickfix.IntField.__init__(self, 41458, data)

class EncodedLegDeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41459)
		else:
			quickfix.StringField.__init__(self, 41459, data)

class NoLegDeliveryStreamCommoditySources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41460)
		else:
			quickfix.IntField.__init__(self, 41460, data)

class LegDeliveryStreamCommoditySource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41461)
		else:
			quickfix.StringField.__init__(self, 41461, data)

class NoLegInstrumentParties(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2254)
		else:
			quickfix.IntField.__init__(self, 2254, data)

class LegInstrumentPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2255)
		else:
			quickfix.StringField.__init__(self, 2255, data)

class LegInstrumentPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2256)
		else:
			quickfix.CharField.__init__(self, 2256, data)

class LegInstrumentPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2257)
		else:
			quickfix.IntField.__init__(self, 2257, data)

class NoLegInstrumentPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2258)
		else:
			quickfix.IntField.__init__(self, 2258, data)

class LegInstrumentPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2259)
		else:
			quickfix.StringField.__init__(self, 2259, data)

class LegInstrumentPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2260)
		else:
			quickfix.IntField.__init__(self, 2260, data)

class LegMarketDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41462)
		else:
			quickfix.IntField.__init__(self, 41462, data)

class LegMarketDisruptionFallbackProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41463)
		else:
			quickfix.IntField.__init__(self, 41463, data)

class LegMarketDisruptionMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41464)
		else:
			quickfix.IntField.__init__(self, 41464, data)

class LegMarketDisruptionMaterialityPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41465)
		else:
			quickfix.DoubleField.__init__(self, 41465, data)

class LegMarketDisruptionMinimumFuturesContracts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41466)
		else:
			quickfix.IntField.__init__(self, 41466, data)

class NoLegMarketDisruptionEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41467)
		else:
			quickfix.IntField.__init__(self, 41467, data)

class LegMarketDisruptionEvent(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41468)
		else:
			quickfix.StringField.__init__(self, 41468, data)

class NoLegMarketDisruptionFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41469)
		else:
			quickfix.IntField.__init__(self, 41469, data)

class LegMarketDisruptionFallbackType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41470)
		else:
			quickfix.StringField.__init__(self, 41470, data)

class NoLegMarketDisruptionFallbackReferencePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41471)
		else:
			quickfix.IntField.__init__(self, 41471, data)

class LegMarketDisruptionFallbackUnderlierType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41472)
		else:
			quickfix.IntField.__init__(self, 41472, data)

class LegMarketDisruptionFallbackUnderlierSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41473)
		else:
			quickfix.StringField.__init__(self, 41473, data)

class LegMarketDisruptionFallbackUnderlierSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41474)
		else:
			quickfix.StringField.__init__(self, 41474, data)

class LegMarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41475)
		else:
			quickfix.StringField.__init__(self, 41475, data)

class EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41476)
		else:
			quickfix.IntField.__init__(self, 41476, data)

class EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41477)
		else:
			quickfix.StringField.__init__(self, 41477, data)

class LegMarketDisruptionFallbackOpenUnits(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41478)
		else:
			quickfix.DoubleField.__init__(self, 41478, data)

class LegMarketDisruptionFallbackBasketCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41479)
		else:
			quickfix.StringField.__init__(self, 41479, data)

class LegMarketDisruptionFallbackBasketDivisor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41480)
		else:
			quickfix.DoubleField.__init__(self, 41480, data)

class LegExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41481)
		else:
			quickfix.StringField.__init__(self, 41481, data)

class EncodedLegExerciseDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41482)
		else:
			quickfix.IntField.__init__(self, 41482, data)

class EncodedLegExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41483)
		else:
			quickfix.StringField.__init__(self, 41483, data)

class LegAutomaticExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41484)
		else:
			quickfix.BoolField.__init__(self, 41484, data)

class LegAutomaticExerciseThresholdRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41485)
		else:
			quickfix.DoubleField.__init__(self, 41485, data)

class LegExerciseConfirmationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41486)
		else:
			quickfix.IntField.__init__(self, 41486, data)

class LegManualNoticeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41487)
		else:
			quickfix.StringField.__init__(self, 41487, data)

class LegFallbackExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41488)
		else:
			quickfix.BoolField.__init__(self, 41488, data)

class LegLimitRightToConfirmIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41489)
		else:
			quickfix.BoolField.__init__(self, 41489, data)

class LegExerciseSplitTicketIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41490)
		else:
			quickfix.BoolField.__init__(self, 41490, data)

class NoLegOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41491)
		else:
			quickfix.IntField.__init__(self, 41491, data)

class LegOptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41492)
		else:
			quickfix.StringField.__init__(self, 41492, data)

class LegOptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41493)
		else:
			quickfix.IntField.__init__(self, 41493, data)

class LegOptionExerciseEarliestDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41494)
		else:
			quickfix.IntField.__init__(self, 41494, data)

class LegOptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41495)
		else:
			quickfix.IntField.__init__(self, 41495, data)

class LegOptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41496)
		else:
			quickfix.StringField.__init__(self, 41496, data)

class LegOptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41497)
		else:
			quickfix.IntField.__init__(self, 41497, data)

class LegOptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41498)
		else:
			quickfix.StringField.__init__(self, 41498, data)

class LegOptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41499)
		else:
			quickfix.StringField.__init__(self, 41499, data)

class LegOptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41500)
		else:
			quickfix.IntField.__init__(self, 41500, data)

class LegOptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41501)
		else:
			quickfix.IntField.__init__(self, 41501, data)

class LegOptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41502)
		else:
			quickfix.StringField.__init__(self, 41502, data)

class LegOptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41503)
		else:
			quickfix.IntField.__init__(self, 41503, data)

class LegOptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41504)
		else:
			quickfix.StringField.__init__(self, 41504, data)

class LegOptionExerciseSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41505)
		else:
			quickfix.IntField.__init__(self, 41505, data)

class LegOptionExerciseNominationDeadline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41506)
		else:
			quickfix.StringField.__init__(self, 41506, data)

class LegOptionExerciseFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41507)
		else:
			quickfix.StringField.__init__(self, 41507, data)

class LegOptionExerciseLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41508)
		else:
			quickfix.StringField.__init__(self, 41508, data)

class LegOptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41509)
		else:
			quickfix.StringField.__init__(self, 41509, data)

class LegOptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41510)
		else:
			quickfix.StringField.__init__(self, 41510, data)

class LegOptionExerciseTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41511)
		else:
			quickfix.StringField.__init__(self, 41511, data)

class NoLegOptionExerciseDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41512)
		else:
			quickfix.IntField.__init__(self, 41512, data)

class LegOptionExerciseDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41513)
		else:
			quickfix.StringField.__init__(self, 41513, data)

class LegOptionExerciseDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41514)
		else:
			quickfix.IntField.__init__(self, 41514, data)

class NoLegOptionExerciseExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41515)
		else:
			quickfix.IntField.__init__(self, 41515, data)

class LegOptionExerciseExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41516)
		else:
			quickfix.StringField.__init__(self, 41516, data)

class LegOptionExerciseExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41517)
		else:
			quickfix.IntField.__init__(self, 41517, data)

class LegOptionExerciseExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41518)
		else:
			quickfix.IntField.__init__(self, 41518, data)

class LegOptionExerciseExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41519)
		else:
			quickfix.IntField.__init__(self, 41519, data)

class LegOptionExerciseExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41520)
		else:
			quickfix.StringField.__init__(self, 41520, data)

class LegOptionExerciseExpirationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41521)
		else:
			quickfix.IntField.__init__(self, 41521, data)

class LegOptionExerciseExpirationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41522)
		else:
			quickfix.StringField.__init__(self, 41522, data)

class LegOptionExerciseExpirationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41523)
		else:
			quickfix.StringField.__init__(self, 41523, data)

class LegOptionExerciseExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41524)
		else:
			quickfix.IntField.__init__(self, 41524, data)

class LegOptionExerciseExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41525)
		else:
			quickfix.StringField.__init__(self, 41525, data)

class LegOptionExerciseExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41526)
		else:
			quickfix.StringField.__init__(self, 41526, data)

class NoLegOptionExerciseExpirationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41527)
		else:
			quickfix.IntField.__init__(self, 41527, data)

class LegOptionExerciseExpirationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41528)
		else:
			quickfix.StringField.__init__(self, 41528, data)

class LegOptionExerciseExpirationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41529)
		else:
			quickfix.IntField.__init__(self, 41529, data)

class NoLegPaymentScheduleFixingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41530)
		else:
			quickfix.IntField.__init__(self, 41530, data)

class LegPaymentScheduleFixingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41531)
		else:
			quickfix.IntField.__init__(self, 41531, data)

class LegPaymentScheduleFixingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41532)
		else:
			quickfix.IntField.__init__(self, 41532, data)

class LegPaymentScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41533)
		else:
			quickfix.StringField.__init__(self, 41533, data)

class LegPaymentScheduleXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41534)
		else:
			quickfix.StringField.__init__(self, 41534, data)

class LegPaymentScheduleRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41535)
		else:
			quickfix.StringField.__init__(self, 41535, data)

class LegPaymentScheduleRateUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41536)
		else:
			quickfix.StringField.__init__(self, 41536, data)

class LegPaymentScheduleRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41537)
		else:
			quickfix.DoubleField.__init__(self, 41537, data)

class LegPaymentScheduleRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41538)
		else:
			quickfix.IntField.__init__(self, 41538, data)

class LegPaymentScheduleSettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41539)
		else:
			quickfix.DoubleField.__init__(self, 41539, data)

class LegPaymentScheduleSettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41540)
		else:
			quickfix.StringField.__init__(self, 41540, data)

class LegPaymentScheduleSettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41541)
		else:
			quickfix.StringField.__init__(self, 41541, data)

class LegPaymentScheduleStepUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41542)
		else:
			quickfix.StringField.__init__(self, 41542, data)

class LegPaymentScheduleFixingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41543)
		else:
			quickfix.IntField.__init__(self, 41543, data)

class LegPaymentScheduleFixingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41544)
		else:
			quickfix.IntField.__init__(self, 41544, data)

class LegPaymentScheduleFixingLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41545)
		else:
			quickfix.IntField.__init__(self, 41545, data)

class LegPaymentScheduleFixingLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41546)
		else:
			quickfix.StringField.__init__(self, 41546, data)

class LegPaymentScheduleFixingFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41547)
		else:
			quickfix.IntField.__init__(self, 41547, data)

class LegPaymentScheduleFixingFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41548)
		else:
			quickfix.StringField.__init__(self, 41548, data)

class LegPaymentStreamFlatRateIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41549)
		else:
			quickfix.BoolField.__init__(self, 41549, data)

class LegPaymentStreamFlatRateAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41550)
		else:
			quickfix.DoubleField.__init__(self, 41550, data)

class LegPaymentStreamFlatRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41551)
		else:
			quickfix.StringField.__init__(self, 41551, data)

class LegStreamMaximumPaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41552)
		else:
			quickfix.DoubleField.__init__(self, 41552, data)

class LegStreamMaximumPaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41553)
		else:
			quickfix.StringField.__init__(self, 41553, data)

class LegStreamMaximumTransactionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41554)
		else:
			quickfix.DoubleField.__init__(self, 41554, data)

class LegStreamMaximumTransactionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41555)
		else:
			quickfix.StringField.__init__(self, 41555, data)

class LegPaymentStreamFixedAmountUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41556)
		else:
			quickfix.StringField.__init__(self, 41556, data)

class LegPaymentStreamTotalFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41557)
		else:
			quickfix.DoubleField.__init__(self, 41557, data)

class LegPaymentStreamWorldScaleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41558)
		else:
			quickfix.DoubleField.__init__(self, 41558, data)

class LegPaymentStreamContractPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41559)
		else:
			quickfix.DoubleField.__init__(self, 41559, data)

class LegPaymentStreamContractPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41560)
		else:
			quickfix.StringField.__init__(self, 41560, data)

class NoLegPaymentStreamPricingBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41561)
		else:
			quickfix.IntField.__init__(self, 41561, data)

class LegPaymentStreamPricingBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41562)
		else:
			quickfix.StringField.__init__(self, 41562, data)

class LegPaymentStreamRateIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41563)
		else:
			quickfix.StringField.__init__(self, 41563, data)

class LegPaymentStreamRateIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41564)
		else:
			quickfix.IntField.__init__(self, 41564, data)

class LegPaymentStreamRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41565)
		else:
			quickfix.StringField.__init__(self, 41565, data)

class LegPaymentStreamRateIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41566)
		else:
			quickfix.DoubleField.__init__(self, 41566, data)

class LegPaymentStreamRateIndexUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41567)
		else:
			quickfix.StringField.__init__(self, 41567, data)

class LegPaymentStreamSettlLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41568)
		else:
			quickfix.IntField.__init__(self, 41568, data)

class LegPaymentStreamReferenceLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41569)
		else:
			quickfix.DoubleField.__init__(self, 41569, data)

class LegPaymentStreamReferenceLevelUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41570)
		else:
			quickfix.StringField.__init__(self, 41570, data)

class LegPaymentStreamReferenceLevelEqualsZeroIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41571)
		else:
			quickfix.BoolField.__init__(self, 41571, data)

class LegPaymentStreamRateSpreadCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41572)
		else:
			quickfix.StringField.__init__(self, 41572, data)

class LegPaymentStreamRateSpreadUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41573)
		else:
			quickfix.StringField.__init__(self, 41573, data)

class LegPaymentStreamRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41574)
		else:
			quickfix.DoubleField.__init__(self, 41574, data)

class LegPaymentStreamRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41575)
		else:
			quickfix.IntField.__init__(self, 41575, data)

class LegPaymentStreamLastResetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41576)
		else:
			quickfix.DoubleField.__init__(self, 41576, data)

class LegPaymentStreamFinalRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41577)
		else:
			quickfix.DoubleField.__init__(self, 41577, data)

class LegPaymentStreamCalculationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41578)
		else:
			quickfix.IntField.__init__(self, 41578, data)

class LegPaymentStreamCalculationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41579)
		else:
			quickfix.StringField.__init__(self, 41579, data)

class LegPaymentStreamFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41580)
		else:
			quickfix.IntField.__init__(self, 41580, data)

class LegPaymentStreamFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41581)
		else:
			quickfix.StringField.__init__(self, 41581, data)

class LegPaymentStreamPricingDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41582)
		else:
			quickfix.IntField.__init__(self, 41582, data)

class LegPaymentStreamPricingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41583)
		else:
			quickfix.IntField.__init__(self, 41583, data)

class LegPaymentStreamPricingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41584)
		else:
			quickfix.IntField.__init__(self, 41584, data)

class LegPaymentStreamPricingBusinessCalendar(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41585)
		else:
			quickfix.StringField.__init__(self, 41585, data)

class LegPaymentStreamPricingBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41586)
		else:
			quickfix.IntField.__init__(self, 41586, data)

class NoLegPaymentStreamPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41589)
		else:
			quickfix.IntField.__init__(self, 41589, data)

class LegPaymentStreamPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41590)
		else:
			quickfix.StringField.__init__(self, 41590, data)

class LegPaymentStreamPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41591)
		else:
			quickfix.IntField.__init__(self, 41591, data)

class LegPaymentStreamMasterAgreementPaymentDatesIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41592)
		else:
			quickfix.BoolField.__init__(self, 41592, data)

class NoLegPaymentStreamPricingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41593)
		else:
			quickfix.IntField.__init__(self, 41593, data)

class LegPaymentStreamPricingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41594)
		else:
			quickfix.StringField.__init__(self, 41594, data)

class LegPaymentStreamPricingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41595)
		else:
			quickfix.IntField.__init__(self, 41595, data)

class NoLegPaymentStreamPricingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41596)
		else:
			quickfix.IntField.__init__(self, 41596, data)

class LegPaymentStreamPricingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41597)
		else:
			quickfix.IntField.__init__(self, 41597, data)

class LegPaymentStreamPricingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41598)
		else:
			quickfix.IntField.__init__(self, 41598, data)

class NoLegPhysicalSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41599)
		else:
			quickfix.IntField.__init__(self, 41599, data)

class LegPhysicalSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41600)
		else:
			quickfix.StringField.__init__(self, 41600, data)

class LegPhysicalSettlCurency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41601)
		else:
			quickfix.StringField.__init__(self, 41601, data)

class LegPhysicalSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41602)
		else:
			quickfix.IntField.__init__(self, 41602, data)

class LegPhysicalSettlMaximumBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41603)
		else:
			quickfix.IntField.__init__(self, 41603, data)

class NoLegPhysicalSettlDeliverableObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41604)
		else:
			quickfix.IntField.__init__(self, 41604, data)

class LegPhysicalSettlDeliverableObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41605)
		else:
			quickfix.StringField.__init__(self, 41605, data)

class LegPhysicalSettlDeliverableObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41606)
		else:
			quickfix.StringField.__init__(self, 41606, data)

class NoLegPricingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41607)
		else:
			quickfix.IntField.__init__(self, 41607, data)

class LegPricingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41608)
		else:
			quickfix.StringField.__init__(self, 41608, data)

class LegPricingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41609)
		else:
			quickfix.StringField.__init__(self, 41609, data)

class LegPricingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41610)
		else:
			quickfix.IntField.__init__(self, 41610, data)

class LegPricingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41611)
		else:
			quickfix.StringField.__init__(self, 41611, data)

class LegPricingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41612)
		else:
			quickfix.StringField.__init__(self, 41612, data)

class LegPricingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41613)
		else:
			quickfix.StringField.__init__(self, 41613, data)

class NoLegProtectionTermEventNewsSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41614)
		else:
			quickfix.IntField.__init__(self, 41614, data)

class LegProtectionTermEventNewsSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41615)
		else:
			quickfix.StringField.__init__(self, 41615, data)

class NoLegProtectionTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41616)
		else:
			quickfix.IntField.__init__(self, 41616, data)

class LegProtectionTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41617)
		else:
			quickfix.StringField.__init__(self, 41617, data)

class LegProtectionTermNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41618)
		else:
			quickfix.DoubleField.__init__(self, 41618, data)

class LegProtectionTermCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41619)
		else:
			quickfix.StringField.__init__(self, 41619, data)

class LegProtectionTermSellerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41620)
		else:
			quickfix.BoolField.__init__(self, 41620, data)

class LegProtectionTermBuyerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41621)
		else:
			quickfix.BoolField.__init__(self, 41621, data)

class LegProtectionTermEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41622)
		else:
			quickfix.StringField.__init__(self, 41622, data)

class LegProtectionTermStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41623)
		else:
			quickfix.BoolField.__init__(self, 41623, data)

class LegProtectionTermEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41624)
		else:
			quickfix.IntField.__init__(self, 41624, data)

class NoLegProtectionTermEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41625)
		else:
			quickfix.IntField.__init__(self, 41625, data)

class LegProtectionTermEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41626)
		else:
			quickfix.StringField.__init__(self, 41626, data)

class LegProtectionTermEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41627)
		else:
			quickfix.StringField.__init__(self, 41627, data)

class LegProtectionTermEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41628)
		else:
			quickfix.StringField.__init__(self, 41628, data)

class LegProtectionTermEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41629)
		else:
			quickfix.IntField.__init__(self, 41629, data)

class LegProtectionTermEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41630)
		else:
			quickfix.StringField.__init__(self, 41630, data)

class LegProtectionTermEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41631)
		else:
			quickfix.IntField.__init__(self, 41631, data)

class LegProtectionTermEventRateSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41632)
		else:
			quickfix.StringField.__init__(self, 41632, data)

class NoLegProtectionTermEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41633)
		else:
			quickfix.IntField.__init__(self, 41633, data)

class LegProtectionTermEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 41634)
		else:
			quickfix.CharField.__init__(self, 41634, data)

class NoLegProtectionTermObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41635)
		else:
			quickfix.IntField.__init__(self, 41635, data)

class LegProtectionTermObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41636)
		else:
			quickfix.StringField.__init__(self, 41636, data)

class LegProtectionTermObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41637)
		else:
			quickfix.StringField.__init__(self, 41637, data)

class NoLegStreamCalculationPeriodDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41638)
		else:
			quickfix.IntField.__init__(self, 41638, data)

class LegStreamCalculationPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41639)
		else:
			quickfix.StringField.__init__(self, 41639, data)

class LegStreamCalculationPeriodDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41640)
		else:
			quickfix.IntField.__init__(self, 41640, data)

class LegStreamCalculationPeriodDatesXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41641)
		else:
			quickfix.StringField.__init__(self, 41641, data)

class LegStreamCalculationPeriodDatesXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41642)
		else:
			quickfix.StringField.__init__(self, 41642, data)

class LegStreamCalculationBalanceOfFirstPeriod(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41643)
		else:
			quickfix.BoolField.__init__(self, 41643, data)

class LegStreamCalculationCorrectionPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41644)
		else:
			quickfix.IntField.__init__(self, 41644, data)

class LegStreamCalculationCorrectionUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41645)
		else:
			quickfix.StringField.__init__(self, 41645, data)

class NoLegStreamCommoditySettlBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41646)
		else:
			quickfix.IntField.__init__(self, 41646, data)

class LegStreamCommoditySettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41647)
		else:
			quickfix.StringField.__init__(self, 41647, data)

class LegStreamCommodityBase(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41648)
		else:
			quickfix.StringField.__init__(self, 41648, data)

class LegStreamCommodityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41649)
		else:
			quickfix.StringField.__init__(self, 41649, data)

class LegStreamCommoditySecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41650)
		else:
			quickfix.StringField.__init__(self, 41650, data)

class LegStreamCommoditySecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41651)
		else:
			quickfix.StringField.__init__(self, 41651, data)

class LegStreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41652)
		else:
			quickfix.StringField.__init__(self, 41652, data)

class EncodedLegStreamCommodityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41653)
		else:
			quickfix.IntField.__init__(self, 41653, data)

class EncodedLegStreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41654)
		else:
			quickfix.StringField.__init__(self, 41654, data)

class LegStreamCommodityUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41655)
		else:
			quickfix.StringField.__init__(self, 41655, data)

class LegStreamCommodityCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41656)
		else:
			quickfix.StringField.__init__(self, 41656, data)

class LegStreamCommodityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41657)
		else:
			quickfix.StringField.__init__(self, 41657, data)

class LegStreamCommodityRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41658)
		else:
			quickfix.IntField.__init__(self, 41658, data)

class LegStreamCommodityRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41659)
		else:
			quickfix.StringField.__init__(self, 41659, data)

class LegStreamCommodityRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41660)
		else:
			quickfix.StringField.__init__(self, 41660, data)

class LegStreamDataProvider(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41661)
		else:
			quickfix.StringField.__init__(self, 41661, data)

class LegStreamCommodityPricingType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41662)
		else:
			quickfix.StringField.__init__(self, 41662, data)

class LegStreamCommodityNearbySettlDayPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41663)
		else:
			quickfix.IntField.__init__(self, 41663, data)

class LegStreamCommodityNearbySettlDayUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41664)
		else:
			quickfix.StringField.__init__(self, 41664, data)

class LegStreamCommoditySettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41665)
		else:
			quickfix.StringField.__init__(self, 41665, data)

class LegStreamCommoditySettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41666)
		else:
			quickfix.IntField.__init__(self, 41666, data)

class LegStreamCommoditySettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41667)
		else:
			quickfix.StringField.__init__(self, 41667, data)

class LegStreamCommoditySettlMonth(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41668)
		else:
			quickfix.IntField.__init__(self, 41668, data)

class LegStreamCommoditySettlDateRollPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41669)
		else:
			quickfix.IntField.__init__(self, 41669, data)

class LegStreamCommoditySettlDateRollUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41670)
		else:
			quickfix.StringField.__init__(self, 41670, data)

class LegStreamCommoditySettlDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41671)
		else:
			quickfix.IntField.__init__(self, 41671, data)

class LegStreamCommodityXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41672)
		else:
			quickfix.StringField.__init__(self, 41672, data)

class LegStreamCommodityXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41673)
		else:
			quickfix.StringField.__init__(self, 41673, data)

class NoLegStreamCommodityAltIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41674)
		else:
			quickfix.IntField.__init__(self, 41674, data)

class LegStreamCommodityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41675)
		else:
			quickfix.StringField.__init__(self, 41675, data)

class LegStreamCommodityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41676)
		else:
			quickfix.StringField.__init__(self, 41676, data)

class NoLegStreamCommodityDataSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41677)
		else:
			quickfix.IntField.__init__(self, 41677, data)

class LegStreamCommodityDataSourceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41678)
		else:
			quickfix.StringField.__init__(self, 41678, data)

class LegStreamCommodityDataSourceIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41679)
		else:
			quickfix.IntField.__init__(self, 41679, data)

class NoLegStreamCommoditySettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41680)
		else:
			quickfix.IntField.__init__(self, 41680, data)

class LegStreamCommoditySettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41681)
		else:
			quickfix.IntField.__init__(self, 41681, data)

class LegStreamCommoditySettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41682)
		else:
			quickfix.IntField.__init__(self, 41682, data)

class NoLegStreamCommoditySettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41683)
		else:
			quickfix.IntField.__init__(self, 41683, data)

class LegStreamCommoditySettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41684)
		else:
			quickfix.StringField.__init__(self, 41684, data)

class LegStreamCommoditySettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41685)
		else:
			quickfix.StringField.__init__(self, 41685, data)

class LegStreamCommoditySettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41935)
		else:
			quickfix.IntField.__init__(self, 41935, data)

class NoLegStreamCommoditySettlPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41686)
		else:
			quickfix.IntField.__init__(self, 41686, data)

class LegStreamCommoditySettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41687)
		else:
			quickfix.StringField.__init__(self, 41687, data)

class LegStreamCommoditySettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41688)
		else:
			quickfix.StringField.__init__(self, 41688, data)

class LegStreamCommoditySettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41689)
		else:
			quickfix.IntField.__init__(self, 41689, data)

class LegStreamCommoditySettlPeriodNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41690)
		else:
			quickfix.DoubleField.__init__(self, 41690, data)

class LegStreamCommoditySettlPeriodNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41691)
		else:
			quickfix.StringField.__init__(self, 41691, data)

class LegStreamCommoditySettlPeriodFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41692)
		else:
			quickfix.IntField.__init__(self, 41692, data)

class LegStreamCommoditySettlPeriodFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41693)
		else:
			quickfix.StringField.__init__(self, 41693, data)

class LegStreamCommoditySettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41694)
		else:
			quickfix.DoubleField.__init__(self, 41694, data)

class LegStreamCommoditySettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41695)
		else:
			quickfix.StringField.__init__(self, 41695, data)

class LegStreamCommoditySettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41696)
		else:
			quickfix.StringField.__init__(self, 41696, data)

class LegStreamCommoditySettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41697)
		else:
			quickfix.IntField.__init__(self, 41697, data)

class LegStreamCommoditySettlPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41698)
		else:
			quickfix.StringField.__init__(self, 41698, data)

class LegStreamCommoditySettlPeriodXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41699)
		else:
			quickfix.StringField.__init__(self, 41699, data)

class LegStreamXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41700)
		else:
			quickfix.StringField.__init__(self, 41700, data)

class LegStreamNotionalXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41702)
		else:
			quickfix.StringField.__init__(self, 41702, data)

class LegStreamNotionalFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41703)
		else:
			quickfix.IntField.__init__(self, 41703, data)

class LegStreamNotionalFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41704)
		else:
			quickfix.StringField.__init__(self, 41704, data)

class LegStreamNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41705)
		else:
			quickfix.IntField.__init__(self, 41705, data)

class LegStreamNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41706)
		else:
			quickfix.StringField.__init__(self, 41706, data)

class LegStreamTotalNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41707)
		else:
			quickfix.DoubleField.__init__(self, 41707, data)

class LegStreamTotalNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41708)
		else:
			quickfix.StringField.__init__(self, 41708, data)

class NoUnderlyingAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2312)
		else:
			quickfix.IntField.__init__(self, 2312, data)

class UnderlyingAssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2313)
		else:
			quickfix.StringField.__init__(self, 2313, data)

class UnderlyingAssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2314)
		else:
			quickfix.StringField.__init__(self, 2314, data)

class UnderlyingAssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2315)
		else:
			quickfix.StringField.__init__(self, 2315, data)

class NoUnderlyingComplexEventAveragingObservations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41713)
		else:
			quickfix.IntField.__init__(self, 41713, data)

class UnderlyingComplexEventAveragingObservationNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41714)
		else:
			quickfix.IntField.__init__(self, 41714, data)

class UnderlyingComplexEventAveragingWeight(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41715)
		else:
			quickfix.DoubleField.__init__(self, 41715, data)

class NoUnderlyingComplexEventCreditEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41716)
		else:
			quickfix.IntField.__init__(self, 41716, data)

class UnderlyingComplexEventCreditEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41717)
		else:
			quickfix.StringField.__init__(self, 41717, data)

class UnderlyingComplexEventCreditEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41718)
		else:
			quickfix.StringField.__init__(self, 41718, data)

class UnderlyingComplexEventCreditEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41719)
		else:
			quickfix.StringField.__init__(self, 41719, data)

class UnderlyingComplexEventCreditEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41720)
		else:
			quickfix.IntField.__init__(self, 41720, data)

class UnderlyingComplexEventCreditEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41721)
		else:
			quickfix.StringField.__init__(self, 41721, data)

class UnderlyingComplexEventCreditEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41722)
		else:
			quickfix.IntField.__init__(self, 41722, data)

class UnderlyingComplexEventCreditEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41723)
		else:
			quickfix.IntField.__init__(self, 41723, data)

class NoUnderlyingComplexEventCreditEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41724)
		else:
			quickfix.IntField.__init__(self, 41724, data)

class UnderlyingComplexEventCreditEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 41725)
		else:
			quickfix.CharField.__init__(self, 41725, data)

class NoUnderlyingComplexEventPeriodDateTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41726)
		else:
			quickfix.IntField.__init__(self, 41726, data)

class UnderlyingComplexEventPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41727)
		else:
			quickfix.StringField.__init__(self, 41727, data)

class UnderlyingComplexEventPeriodTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41728)
		else:
			quickfix.StringField.__init__(self, 41728, data)

class NoUnderlyingComplexEventPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41729)
		else:
			quickfix.IntField.__init__(self, 41729, data)

class UnderlyingComplexEventPeriodType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41730)
		else:
			quickfix.IntField.__init__(self, 41730, data)

class UnderlyingComplexEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41731)
		else:
			quickfix.StringField.__init__(self, 41731, data)

class NoUnderlyingComplexEventRateSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41732)
		else:
			quickfix.IntField.__init__(self, 41732, data)

class UnderlyingComplexEventRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41733)
		else:
			quickfix.IntField.__init__(self, 41733, data)

class UnderlyingComplexEventRateSourceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41734)
		else:
			quickfix.IntField.__init__(self, 41734, data)

class UnderlyingComplexEventReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41735)
		else:
			quickfix.StringField.__init__(self, 41735, data)

class UnderlyingComplexEventReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41736)
		else:
			quickfix.StringField.__init__(self, 41736, data)

class NoUnderlyingComplexEventDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41737)
		else:
			quickfix.IntField.__init__(self, 41737, data)

class UnderlyingComplexEventDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41738)
		else:
			quickfix.StringField.__init__(self, 41738, data)

class UnderlyingComplexEventDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41739)
		else:
			quickfix.StringField.__init__(self, 41739, data)

class UnderlyingComplexEventDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41740)
		else:
			quickfix.IntField.__init__(self, 41740, data)

class UnderlyingComplexEventDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41741)
		else:
			quickfix.IntField.__init__(self, 41741, data)

class UnderlyingComplexEventDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41742)
		else:
			quickfix.StringField.__init__(self, 41742, data)

class UnderlyingComplexEventDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41743)
		else:
			quickfix.IntField.__init__(self, 41743, data)

class UnderlyingComplexEventDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41744)
		else:
			quickfix.IntField.__init__(self, 41744, data)

class UnderlyingComplexEventDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41745)
		else:
			quickfix.StringField.__init__(self, 41745, data)

class UnderlyingComplexEventFixingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41746)
		else:
			quickfix.StringField.__init__(self, 41746, data)

class UnderlyingComplexEventFixingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41747)
		else:
			quickfix.StringField.__init__(self, 41747, data)

class NoUnderlyingComplexEventCreditEventSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41748)
		else:
			quickfix.IntField.__init__(self, 41748, data)

class UnderlyingComplexEventCreditEventSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41749)
		else:
			quickfix.StringField.__init__(self, 41749, data)

class UnderlyingComplexOptPayoutPaySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2261)
		else:
			quickfix.IntField.__init__(self, 2261, data)

class UnderlyingComplexOptPayoutReceiveSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2262)
		else:
			quickfix.IntField.__init__(self, 2262, data)

class UnderlyingComplexOptPayoutUnderlier(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2263)
		else:
			quickfix.StringField.__init__(self, 2263, data)

class UnderlyingComplexOptPayoutPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2264)
		else:
			quickfix.DoubleField.__init__(self, 2264, data)

class UnderlyingComplexOptPayoutTime(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2265)
		else:
			quickfix.IntField.__init__(self, 2265, data)

class UnderlyingComplexOptPayoutCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2266)
		else:
			quickfix.StringField.__init__(self, 2266, data)

class UnderlyingComplexEventPricePercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2267)
		else:
			quickfix.DoubleField.__init__(self, 2267, data)

class UnderlyingComplexEventCurrencyOne(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2268)
		else:
			quickfix.StringField.__init__(self, 2268, data)

class UnderlyingComplexEventCurrencyTwo(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2269)
		else:
			quickfix.StringField.__init__(self, 2269, data)

class UnderlyingComplexEventQuoteBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2270)
		else:
			quickfix.IntField.__init__(self, 2270, data)

class UnderlyingComplexEventFixedFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2271)
		else:
			quickfix.DoubleField.__init__(self, 2271, data)

class UnderlyingComplexEventDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2272)
		else:
			quickfix.StringField.__init__(self, 2272, data)

class UnderlyingComplexEventCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2273)
		else:
			quickfix.IntField.__init__(self, 2273, data)

class UnderlyingComplexEventStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2274)
		else:
			quickfix.DoubleField.__init__(self, 2274, data)

class UnderlyingComplexEventStrikeFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2275)
		else:
			quickfix.DoubleField.__init__(self, 2275, data)

class UnderlyingComplexEventStrikeNumberOfOptions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2276)
		else:
			quickfix.IntField.__init__(self, 2276, data)

class UnderlyingComplexEventCreditEventsXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2277)
		else:
			quickfix.StringField.__init__(self, 2277, data)

class UnderlyingComplexEventCreditEventNotifyingParty(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2278)
		else:
			quickfix.IntField.__init__(self, 2278, data)

class UnderlyingComplexEventCreditEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2279)
		else:
			quickfix.StringField.__init__(self, 2279, data)

class UnderlyingComplexEventCreditEventStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2280)
		else:
			quickfix.BoolField.__init__(self, 2280, data)

class UnderlyingComplexEventCreditEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2281)
		else:
			quickfix.IntField.__init__(self, 2281, data)

class UnderlyingComplexEventXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2282)
		else:
			quickfix.StringField.__init__(self, 2282, data)

class UnderlyingComplexEventXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2283)
		else:
			quickfix.StringField.__init__(self, 2283, data)

class NoUnderlyingComplexEventSchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41750)
		else:
			quickfix.IntField.__init__(self, 41750, data)

class UnderlyingComplexEventScheduleStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41751)
		else:
			quickfix.StringField.__init__(self, 41751, data)

class UnderlyingComplexEventScheduleEndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41752)
		else:
			quickfix.StringField.__init__(self, 41752, data)

class UnderlyingComplexEventScheduleFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41753)
		else:
			quickfix.IntField.__init__(self, 41753, data)

class UnderlyingComplexEventScheduleFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41754)
		else:
			quickfix.StringField.__init__(self, 41754, data)

class UnderlyingComplexEventScheduleRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41755)
		else:
			quickfix.StringField.__init__(self, 41755, data)

class NoUnderlyingDeliverySchedules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41756)
		else:
			quickfix.IntField.__init__(self, 41756, data)

class UnderlyingDeliveryScheduleType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41757)
		else:
			quickfix.IntField.__init__(self, 41757, data)

class UnderlyingDeliveryScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41758)
		else:
			quickfix.StringField.__init__(self, 41758, data)

class UnderlyingDeliveryScheduleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41759)
		else:
			quickfix.DoubleField.__init__(self, 41759, data)

class UnderlyingDeliveryScheduleNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41760)
		else:
			quickfix.StringField.__init__(self, 41760, data)

class UnderlyingDeliveryScheduleNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41761)
		else:
			quickfix.IntField.__init__(self, 41761, data)

class UnderlyingDeliveryScheduleNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41762)
		else:
			quickfix.DoubleField.__init__(self, 41762, data)

class UnderlyingDeliverySchedulePositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41763)
		else:
			quickfix.DoubleField.__init__(self, 41763, data)

class UnderlyingDeliveryScheduleToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41764)
		else:
			quickfix.StringField.__init__(self, 41764, data)

class UnderlyingDeliveryScheduleToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41765)
		else:
			quickfix.IntField.__init__(self, 41765, data)

class UnderlyingDeliveryScheduleSettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41766)
		else:
			quickfix.StringField.__init__(self, 41766, data)

class UnderlyingDeliveryScheduleSettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41767)
		else:
			quickfix.StringField.__init__(self, 41767, data)

class UnderlyingDeliveryScheduleSettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41768)
		else:
			quickfix.IntField.__init__(self, 41768, data)

class UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41769)
		else:
			quickfix.IntField.__init__(self, 41769, data)

class NoUnderlyingDeliveryScheduleSettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41770)
		else:
			quickfix.IntField.__init__(self, 41770, data)

class UnderlyingDeliveryScheduleSettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41771)
		else:
			quickfix.IntField.__init__(self, 41771, data)

class UnderlyingDeliveryScheduleSettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41772)
		else:
			quickfix.IntField.__init__(self, 41772, data)

class NoUnderlyingDeliveryScheduleSettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41773)
		else:
			quickfix.IntField.__init__(self, 41773, data)

class UnderlyingDeliveryScheduleSettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41774)
		else:
			quickfix.StringField.__init__(self, 41774, data)

class UnderlyingDeliveryScheduleSettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41775)
		else:
			quickfix.StringField.__init__(self, 41775, data)

class UnderlyingDeliveryScheduleSettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41776)
		else:
			quickfix.IntField.__init__(self, 41776, data)

class UnderlyingDeliveryStreamType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41777)
		else:
			quickfix.IntField.__init__(self, 41777, data)

class UnderlyingDeliveryStreamPipeline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41778)
		else:
			quickfix.StringField.__init__(self, 41778, data)

class UnderlyingDeliveryStreamEntryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41779)
		else:
			quickfix.StringField.__init__(self, 41779, data)

class UnderlyingDeliveryStreamWithdrawalPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41780)
		else:
			quickfix.StringField.__init__(self, 41780, data)

class UnderlyingDeliveryStreamDeliveryPoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41781)
		else:
			quickfix.StringField.__init__(self, 41781, data)

class UnderlyingDeliveryStreamDeliveryRestriction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41782)
		else:
			quickfix.IntField.__init__(self, 41782, data)

class UnderlyingDeliveryStreamDeliveryContingency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41783)
		else:
			quickfix.StringField.__init__(self, 41783, data)

class UnderlyingDeliveryStreamDeliveryContingentPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41784)
		else:
			quickfix.IntField.__init__(self, 41784, data)

class UnderlyingDeliveryStreamDeliverAtSourceIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41785)
		else:
			quickfix.BoolField.__init__(self, 41785, data)

class UnderlyingDeliveryStreamRiskApportionment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41786)
		else:
			quickfix.StringField.__init__(self, 41786, data)

class UnderlyingDeliveryStreamRiskApportionmentSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41587)
		else:
			quickfix.StringField.__init__(self, 41587, data)

class UnderlyingDeliveryStreamTitleTransferLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41787)
		else:
			quickfix.StringField.__init__(self, 41787, data)

class UnderlyingDeliveryStreamTitleTransferCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41788)
		else:
			quickfix.IntField.__init__(self, 41788, data)

class UnderlyingDeliveryStreamImporterOfRecord(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41789)
		else:
			quickfix.StringField.__init__(self, 41789, data)

class UnderlyingDeliveryStreamNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41790)
		else:
			quickfix.DoubleField.__init__(self, 41790, data)

class UnderlyingDeliveryStreamPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41791)
		else:
			quickfix.DoubleField.__init__(self, 41791, data)

class UnderlyingDeliveryStreamToleranceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41792)
		else:
			quickfix.StringField.__init__(self, 41792, data)

class UnderlyingDeliveryStreamToleranceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41793)
		else:
			quickfix.IntField.__init__(self, 41793, data)

class UnderlyingDeliveryStreamToleranceOptionSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41794)
		else:
			quickfix.IntField.__init__(self, 41794, data)

class UnderlyingDeliveryStreamTotalPositiveTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41795)
		else:
			quickfix.DoubleField.__init__(self, 41795, data)

class UnderlyingDeliveryStreamTotalNegativeTolerance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41796)
		else:
			quickfix.DoubleField.__init__(self, 41796, data)

class UnderlyingDeliveryStreamNotionalConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41797)
		else:
			quickfix.DoubleField.__init__(self, 41797, data)

class UnderlyingDeliveryStreamTransportEquipment(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41798)
		else:
			quickfix.StringField.__init__(self, 41798, data)

class UnderlyingDeliveryStreamElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41799)
		else:
			quickfix.IntField.__init__(self, 41799, data)

class NoUnderlyingStreamAssetAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41800)
		else:
			quickfix.IntField.__init__(self, 41800, data)

class UnderlyingStreamAssetAttributeType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41801)
		else:
			quickfix.StringField.__init__(self, 41801, data)

class UnderlyingStreamAssetAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41802)
		else:
			quickfix.StringField.__init__(self, 41802, data)

class UnderlyingStreamAssetAttributeLimit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41803)
		else:
			quickfix.StringField.__init__(self, 41803, data)

class NoUnderlyingDeliveryStreamCycles(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41804)
		else:
			quickfix.IntField.__init__(self, 41804, data)

class UnderlyingDeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41805)
		else:
			quickfix.StringField.__init__(self, 41805, data)

class EncodedUnderlyingDeliveryStreamCycleDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41806)
		else:
			quickfix.IntField.__init__(self, 41806, data)

class EncodedUnderlyingDeliveryStreamCycleDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41807)
		else:
			quickfix.StringField.__init__(self, 41807, data)

class NoUnderlyingDeliveryStreamCommoditySources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41808)
		else:
			quickfix.IntField.__init__(self, 41808, data)

class UnderlyingDeliveryStreamCommoditySource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41809)
		else:
			quickfix.StringField.__init__(self, 41809, data)

class UnderlyingExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41810)
		else:
			quickfix.StringField.__init__(self, 41810, data)

class EncodedUnderlyingExerciseDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41811)
		else:
			quickfix.IntField.__init__(self, 41811, data)

class EncodedUnderlyingExerciseDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41812)
		else:
			quickfix.StringField.__init__(self, 41812, data)

class UnderlyingAutomaticExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41813)
		else:
			quickfix.BoolField.__init__(self, 41813, data)

class UnderlyingAutomaticExerciseThresholdRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41814)
		else:
			quickfix.DoubleField.__init__(self, 41814, data)

class UnderlyingExerciseConfirmationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41815)
		else:
			quickfix.IntField.__init__(self, 41815, data)

class UnderlyingManualNoticeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41816)
		else:
			quickfix.StringField.__init__(self, 41816, data)

class UnderlyingFallbackExerciseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41817)
		else:
			quickfix.BoolField.__init__(self, 41817, data)

class UnderlyingLimitedRightToConfirmIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41818)
		else:
			quickfix.BoolField.__init__(self, 41818, data)

class UnderlyingExerciseSplitTicketIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41819)
		else:
			quickfix.BoolField.__init__(self, 41819, data)

class NoUnderlyingOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41820)
		else:
			quickfix.IntField.__init__(self, 41820, data)

class UnderlyingOptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41821)
		else:
			quickfix.StringField.__init__(self, 41821, data)

class UnderlyingOptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41822)
		else:
			quickfix.IntField.__init__(self, 41822, data)

class UnderlyingOptionExerciseEarliestDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41823)
		else:
			quickfix.IntField.__init__(self, 41823, data)

class UnderlyingOptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41824)
		else:
			quickfix.IntField.__init__(self, 41824, data)

class UnderlyingOptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41825)
		else:
			quickfix.StringField.__init__(self, 41825, data)

class UnderlyingOptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41826)
		else:
			quickfix.IntField.__init__(self, 41826, data)

class UnderlyingOptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41827)
		else:
			quickfix.StringField.__init__(self, 41827, data)

class UnderlyingOptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41828)
		else:
			quickfix.StringField.__init__(self, 41828, data)

class UnderlyingOptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41829)
		else:
			quickfix.IntField.__init__(self, 41829, data)

class UnderlyingOptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41830)
		else:
			quickfix.IntField.__init__(self, 41830, data)

class UnderlyingOptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41831)
		else:
			quickfix.StringField.__init__(self, 41831, data)

class UnderlyingOptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41832)
		else:
			quickfix.IntField.__init__(self, 41832, data)

class UnderlyingOptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41833)
		else:
			quickfix.StringField.__init__(self, 41833, data)

class UnderlyingOptionExerciseSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41834)
		else:
			quickfix.IntField.__init__(self, 41834, data)

class UnderlyingOptionExerciseNominationDeadline(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41835)
		else:
			quickfix.StringField.__init__(self, 41835, data)

class UnderlyingOptionExerciseFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41836)
		else:
			quickfix.StringField.__init__(self, 41836, data)

class UnderlyingOptionExerciseLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41837)
		else:
			quickfix.StringField.__init__(self, 41837, data)

class UnderlyingOptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41838)
		else:
			quickfix.StringField.__init__(self, 41838, data)

class UnderlyingOptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41839)
		else:
			quickfix.StringField.__init__(self, 41839, data)

class UnderlyingOptionExerciseTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41840)
		else:
			quickfix.StringField.__init__(self, 41840, data)

class NoUnderlyingOptionExerciseDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41841)
		else:
			quickfix.IntField.__init__(self, 41841, data)

class UnderlyingOptionExerciseDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41842)
		else:
			quickfix.StringField.__init__(self, 41842, data)

class UnderlyingOptionExerciseDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41843)
		else:
			quickfix.IntField.__init__(self, 41843, data)

class NoUnderlyingOptionExerciseExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41844)
		else:
			quickfix.IntField.__init__(self, 41844, data)

class UnderlyingOptionExerciseExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41845)
		else:
			quickfix.StringField.__init__(self, 41845, data)

class UnderlyingOptionExerciseExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41846)
		else:
			quickfix.IntField.__init__(self, 41846, data)

class UnderlyingOptionExerciseExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41847)
		else:
			quickfix.IntField.__init__(self, 41847, data)

class UnderlyingOptionExerciseExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41848)
		else:
			quickfix.IntField.__init__(self, 41848, data)

class UnderlyingOptionExerciseExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41849)
		else:
			quickfix.StringField.__init__(self, 41849, data)

class UnderlyingOptionExerciseExpirationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41850)
		else:
			quickfix.IntField.__init__(self, 41850, data)

class UnderlyingOptionExerciseExpirationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41851)
		else:
			quickfix.StringField.__init__(self, 41851, data)

class UnderlyingOptionExerciseExpirationRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41852)
		else:
			quickfix.StringField.__init__(self, 41852, data)

class UnderlyingOptionExerciseExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41853)
		else:
			quickfix.IntField.__init__(self, 41853, data)

class UnderlyingOptionExerciseExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41854)
		else:
			quickfix.StringField.__init__(self, 41854, data)

class UnderlyingOptionExerciseExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41855)
		else:
			quickfix.StringField.__init__(self, 41855, data)

class NoUnderlyingOptionExerciseExpirationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41856)
		else:
			quickfix.IntField.__init__(self, 41856, data)

class UnderlyingOptionExerciseExpirationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41857)
		else:
			quickfix.StringField.__init__(self, 41857, data)

class UnderlyingOptionExerciseExpirationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41858)
		else:
			quickfix.IntField.__init__(self, 41858, data)

class UnderlyingSettlRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2284)
		else:
			quickfix.StringField.__init__(self, 2284, data)

class UnderlyingSettlRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2285)
		else:
			quickfix.StringField.__init__(self, 2285, data)

class UnderlyingOptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2286)
		else:
			quickfix.StringField.__init__(self, 2286, data)

class EncodedUnderlyingOptionExpirationDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2287)
		else:
			quickfix.IntField.__init__(self, 2287, data)

class EncodedUnderlyingOptionExpirationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2288)
		else:
			quickfix.StringField.__init__(self, 2288, data)

class UnderlyingSwapSubClass(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2289)
		else:
			quickfix.StringField.__init__(self, 2289, data)

class UnderlyingStrikeUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2290)
		else:
			quickfix.StringField.__init__(self, 2290, data)

class UnderlyingStrikeIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2291)
		else:
			quickfix.StringField.__init__(self, 2291, data)

class UnderlyingStrikeIndexSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2292)
		else:
			quickfix.DoubleField.__init__(self, 2292, data)

class UnderlyingValuationSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2293)
		else:
			quickfix.StringField.__init__(self, 2293, data)

class UnderlyingValuationReferenceModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2294)
		else:
			quickfix.StringField.__init__(self, 2294, data)

class UnderlyingStrategyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2295)
		else:
			quickfix.StringField.__init__(self, 2295, data)

class UnderlyingCommonPricingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2296)
		else:
			quickfix.BoolField.__init__(self, 2296, data)

class UnderlyingSettlDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2297)
		else:
			quickfix.IntField.__init__(self, 2297, data)

class UnderlyingInstrumentRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2298)
		else:
			quickfix.CharField.__init__(self, 2298, data)

class UnderlyingInstrumentRoundingPrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2299)
		else:
			quickfix.IntField.__init__(self, 2299, data)

class UnderlyingMarketDisruptionProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41859)
		else:
			quickfix.IntField.__init__(self, 41859, data)

class UnderlyingMarketDisruptionFallbackProvision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41860)
		else:
			quickfix.IntField.__init__(self, 41860, data)

class UnderlyingMarketDisruptionMaximumDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41861)
		else:
			quickfix.IntField.__init__(self, 41861, data)

class UnderlyingMarketDisruptionMaterialityPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41862)
		else:
			quickfix.DoubleField.__init__(self, 41862, data)

class UnderlyingMarketDisruptionMinimumFuturesContracts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41863)
		else:
			quickfix.IntField.__init__(self, 41863, data)

class NoUnderlyingMarketDisruptionEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41864)
		else:
			quickfix.IntField.__init__(self, 41864, data)

class UnderlyingMarketDisruptionEvent(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41865)
		else:
			quickfix.StringField.__init__(self, 41865, data)

class NoUnderlyingMarketDisruptionFallbacks(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41866)
		else:
			quickfix.IntField.__init__(self, 41866, data)

class UnderlyingMarketDisruptionFallbackType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41867)
		else:
			quickfix.StringField.__init__(self, 41867, data)

class NoUnderlyingMarketDisruptionFallbackReferencePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41868)
		else:
			quickfix.IntField.__init__(self, 41868, data)

class UnderlyingMarketDisruptionFallbackUnderlierType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41869)
		else:
			quickfix.IntField.__init__(self, 41869, data)

class UnderlyingMarketDisruptionFallbackUnderlierSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41870)
		else:
			quickfix.StringField.__init__(self, 41870, data)

class UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41871)
		else:
			quickfix.StringField.__init__(self, 41871, data)

class UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41872)
		else:
			quickfix.StringField.__init__(self, 41872, data)

class EncodedUnderlyingMarketDisruptionFallbackUnderlierSecDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41873)
		else:
			quickfix.IntField.__init__(self, 41873, data)

class EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41874)
		else:
			quickfix.StringField.__init__(self, 41874, data)

class UnderlyingMarketDisruptionFallbackOpenUnits(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41875)
		else:
			quickfix.DoubleField.__init__(self, 41875, data)

class UnderlyingMarketDisruptionFallbackBasketCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41876)
		else:
			quickfix.StringField.__init__(self, 41876, data)

class UnderlyingMarketDisruptionFallbackBasketDivisor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41877)
		else:
			quickfix.DoubleField.__init__(self, 41877, data)

class NoUnderlyingPaymentScheduleFixingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41878)
		else:
			quickfix.IntField.__init__(self, 41878, data)

class UnderlyingPaymentScheduleFixingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41879)
		else:
			quickfix.IntField.__init__(self, 41879, data)

class UnderlyingPaymentScheduleFixingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41880)
		else:
			quickfix.IntField.__init__(self, 41880, data)

class UnderlyingPaymentScheduleXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41881)
		else:
			quickfix.StringField.__init__(self, 41881, data)

class UnderlyingPaymentScheduleXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41882)
		else:
			quickfix.StringField.__init__(self, 41882, data)

class UnderlyingPaymentScheduleRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41883)
		else:
			quickfix.StringField.__init__(self, 41883, data)

class UnderlyingPaymentScheduleRateUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41884)
		else:
			quickfix.StringField.__init__(self, 41884, data)

class UnderlyingPaymentScheduleRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41885)
		else:
			quickfix.DoubleField.__init__(self, 41885, data)

class UnderlyingPaymentScheduleRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41886)
		else:
			quickfix.IntField.__init__(self, 41886, data)

class UnderlyingPaymentScheduleSettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41887)
		else:
			quickfix.DoubleField.__init__(self, 41887, data)

class UnderlyingPaymentScheduleSettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41888)
		else:
			quickfix.StringField.__init__(self, 41888, data)

class UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41889)
		else:
			quickfix.StringField.__init__(self, 41889, data)

class UnderlyingPaymentScheduleStepUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41890)
		else:
			quickfix.StringField.__init__(self, 41890, data)

class UnderlyingPaymentScheduleFixingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41891)
		else:
			quickfix.IntField.__init__(self, 41891, data)

class UnderlyingPaymentScheduleFixingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41892)
		else:
			quickfix.IntField.__init__(self, 41892, data)

class UnderlyingPaymentScheduleFixingLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41893)
		else:
			quickfix.IntField.__init__(self, 41893, data)

class UnderlyingPaymentScheduleFixingLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41894)
		else:
			quickfix.StringField.__init__(self, 41894, data)

class UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41895)
		else:
			quickfix.IntField.__init__(self, 41895, data)

class UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41896)
		else:
			quickfix.StringField.__init__(self, 41896, data)

class UnderlyingPaymentStreamFlatRateIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41897)
		else:
			quickfix.BoolField.__init__(self, 41897, data)

class UnderlyingPaymentStreamFlatRateAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41898)
		else:
			quickfix.DoubleField.__init__(self, 41898, data)

class UnderlyingPaymentStreamFlatRateCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41899)
		else:
			quickfix.StringField.__init__(self, 41899, data)

class UnderlyingPaymentStreamMaximumPaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41900)
		else:
			quickfix.DoubleField.__init__(self, 41900, data)

class UnderlyingPaymentStreamMaximumPaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41901)
		else:
			quickfix.StringField.__init__(self, 41901, data)

class UnderlyingPaymentStreamMaximumTransactionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41902)
		else:
			quickfix.DoubleField.__init__(self, 41902, data)

class UnderlyingPaymentStreamMaximumTransactionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41903)
		else:
			quickfix.StringField.__init__(self, 41903, data)

class UnderlyingPaymentStreamFixedAmountUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41904)
		else:
			quickfix.StringField.__init__(self, 41904, data)

class UnderlyingPaymentStreamTotalFixedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41905)
		else:
			quickfix.DoubleField.__init__(self, 41905, data)

class UnderlyingPaymentStreamWorldScaleRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41906)
		else:
			quickfix.DoubleField.__init__(self, 41906, data)

class UnderlyingPaymentStreamContractPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41907)
		else:
			quickfix.DoubleField.__init__(self, 41907, data)

class UnderlyingPaymentStreamContractPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41908)
		else:
			quickfix.StringField.__init__(self, 41908, data)

class NoUnderlyingPaymentStreamPricingBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41909)
		else:
			quickfix.IntField.__init__(self, 41909, data)

class UnderlyingPaymentStreamPricingBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41910)
		else:
			quickfix.StringField.__init__(self, 41910, data)

class UnderlyingPaymentStreamRateIndex2CurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41911)
		else:
			quickfix.StringField.__init__(self, 41911, data)

class UnderlyingPaymentStreamRateIndex2CurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41912)
		else:
			quickfix.IntField.__init__(self, 41912, data)

class UnderlyingPaymentStreamRateIndexLocation(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41913)
		else:
			quickfix.StringField.__init__(self, 41913, data)

class UnderlyingPaymentStreamRateIndexLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41914)
		else:
			quickfix.DoubleField.__init__(self, 41914, data)

class UnderlyingPaymentStreamRateIndexUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41915)
		else:
			quickfix.StringField.__init__(self, 41915, data)

class UnderlyingPaymentStreamSettlLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41916)
		else:
			quickfix.IntField.__init__(self, 41916, data)

class UnderlyingPaymentStreamReferenceLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41917)
		else:
			quickfix.DoubleField.__init__(self, 41917, data)

class UnderlyingPaymentStreamReferenceLevelUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41918)
		else:
			quickfix.StringField.__init__(self, 41918, data)

class UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41919)
		else:
			quickfix.BoolField.__init__(self, 41919, data)

class UnderlyingPaymentStreamRateSpreadCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41920)
		else:
			quickfix.StringField.__init__(self, 41920, data)

class UnderlyingPaymentStreamRateSpreadUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41921)
		else:
			quickfix.StringField.__init__(self, 41921, data)

class UnderlyingPaymentStreamRateConversionFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41922)
		else:
			quickfix.DoubleField.__init__(self, 41922, data)

class UnderlyingPaymentStreamRateSpreadType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41923)
		else:
			quickfix.IntField.__init__(self, 41923, data)

class UnderlyingPaymentStreamLastResetRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41924)
		else:
			quickfix.DoubleField.__init__(self, 41924, data)

class UnderlyingPaymentStreamFinalRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 41925)
		else:
			quickfix.DoubleField.__init__(self, 41925, data)

class UnderlyingPaymentStreamCalculationLagPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41926)
		else:
			quickfix.IntField.__init__(self, 41926, data)

class UnderlyingPaymentStreamCalculationLagUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41927)
		else:
			quickfix.StringField.__init__(self, 41927, data)

class UnderlyingPaymentStreamFirstObservationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41928)
		else:
			quickfix.IntField.__init__(self, 41928, data)

class UnderlyingPaymentStreamFirstObservationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41929)
		else:
			quickfix.StringField.__init__(self, 41929, data)

class UnderlyingPaymentStreamPricingDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41930)
		else:
			quickfix.IntField.__init__(self, 41930, data)

class UnderlyingPaymentStreamPricingDayDistribution(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41931)
		else:
			quickfix.IntField.__init__(self, 41931, data)

class UnderlyingPaymentStreamPricingDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41932)
		else:
			quickfix.IntField.__init__(self, 41932, data)

class UnderlyingPaymentStreamPricingBusinessCalendar(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41933)
		else:
			quickfix.StringField.__init__(self, 41933, data)

class UnderlyingPaymentStreamPricingBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41934)
		else:
			quickfix.IntField.__init__(self, 41934, data)

class NoUnderlyingPaymentStreamPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41937)
		else:
			quickfix.IntField.__init__(self, 41937, data)

class UnderlyingPaymentStreamPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41938)
		else:
			quickfix.StringField.__init__(self, 41938, data)

class UnderlyingPaymentStreamPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41939)
		else:
			quickfix.IntField.__init__(self, 41939, data)

class UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41940)
		else:
			quickfix.BoolField.__init__(self, 41940, data)

class NoUnderlyingPaymentStreamPricingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41941)
		else:
			quickfix.IntField.__init__(self, 41941, data)

class UnderlyingPaymentStreamPricingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41942)
		else:
			quickfix.StringField.__init__(self, 41942, data)

class UnderlyingPaymentStreamPricingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41943)
		else:
			quickfix.IntField.__init__(self, 41943, data)

class NoUnderlyingPaymentStreamPricingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41944)
		else:
			quickfix.IntField.__init__(self, 41944, data)

class UnderlyingPaymentStreamPricingDayOfWeek(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41945)
		else:
			quickfix.IntField.__init__(self, 41945, data)

class UnderlyingPaymentStreamPricingDayNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41946)
		else:
			quickfix.IntField.__init__(self, 41946, data)

class NoUnderlyingPricingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41947)
		else:
			quickfix.IntField.__init__(self, 41947, data)

class UnderlyingPricingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41948)
		else:
			quickfix.StringField.__init__(self, 41948, data)

class UnderlyingPricingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41949)
		else:
			quickfix.StringField.__init__(self, 41949, data)

class UnderlyingPricingDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41950)
		else:
			quickfix.IntField.__init__(self, 41950, data)

class UnderlyingPricingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41951)
		else:
			quickfix.StringField.__init__(self, 41951, data)

class UnderlyingPricingTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41952)
		else:
			quickfix.StringField.__init__(self, 41952, data)

class UnderlyingPricingTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41953)
		else:
			quickfix.StringField.__init__(self, 41953, data)

class NoUnderlyingStreamCalculationPeriodDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41954)
		else:
			quickfix.IntField.__init__(self, 41954, data)

class UnderlyingStreamCalculationPeriodDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41955)
		else:
			quickfix.StringField.__init__(self, 41955, data)

class UnderlyingStreamCalculationPeriodDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41956)
		else:
			quickfix.IntField.__init__(self, 41956, data)

class UnderlyingStreamCalculationPeriodDatesXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41957)
		else:
			quickfix.StringField.__init__(self, 41957, data)

class UnderlyingStreamCalculationPeriodDatesXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41958)
		else:
			quickfix.StringField.__init__(self, 41958, data)

class UnderlyingStreamCalculationBalanceOfFirstPeriod(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 41959)
		else:
			quickfix.BoolField.__init__(self, 41959, data)

class UnderlyingStreamCalculationCorrectionPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41960)
		else:
			quickfix.IntField.__init__(self, 41960, data)

class UnderlyingStreamCalculationCorrectionUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41961)
		else:
			quickfix.StringField.__init__(self, 41961, data)

class NoUnderlyingStreamCommoditySettlBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41962)
		else:
			quickfix.IntField.__init__(self, 41962, data)

class UnderlyingStreamCommoditySettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41963)
		else:
			quickfix.StringField.__init__(self, 41963, data)

class UnderlyingStreamCommodityBase(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41964)
		else:
			quickfix.StringField.__init__(self, 41964, data)

class UnderlyingStreamCommodityType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41965)
		else:
			quickfix.StringField.__init__(self, 41965, data)

class UnderlyingStreamCommoditySecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41966)
		else:
			quickfix.StringField.__init__(self, 41966, data)

class UnderlyingStreamCommoditySecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41967)
		else:
			quickfix.StringField.__init__(self, 41967, data)

class UnderlyingStreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41968)
		else:
			quickfix.StringField.__init__(self, 41968, data)

class EncodedUnderlyingStreamCommodityDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41969)
		else:
			quickfix.IntField.__init__(self, 41969, data)

class EncodedUnderlyingStreamCommodityDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41970)
		else:
			quickfix.StringField.__init__(self, 41970, data)

class UnderlyingStreamCommodityUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41971)
		else:
			quickfix.StringField.__init__(self, 41971, data)

class UnderlyingStreamCommodityCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41972)
		else:
			quickfix.StringField.__init__(self, 41972, data)

class UnderlyingStreamCommodityExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41973)
		else:
			quickfix.StringField.__init__(self, 41973, data)

class UnderlyingStreamCommodityRateSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41974)
		else:
			quickfix.IntField.__init__(self, 41974, data)

class UnderlyingStreamCommodityRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41975)
		else:
			quickfix.StringField.__init__(self, 41975, data)

class UnderlyingStreamCommodityRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41976)
		else:
			quickfix.StringField.__init__(self, 41976, data)

class UnderlyingStreamDataProvider(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41977)
		else:
			quickfix.StringField.__init__(self, 41977, data)

class UnderlyingStreamCommodityPricingType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41978)
		else:
			quickfix.StringField.__init__(self, 41978, data)

class UnderlyingStreamCommodityNearbySettlDayPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41979)
		else:
			quickfix.IntField.__init__(self, 41979, data)

class UnderlyingStreamCommodityNearbySettlDayUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41980)
		else:
			quickfix.StringField.__init__(self, 41980, data)

class UnderlyingStreamCommoditySettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41981)
		else:
			quickfix.StringField.__init__(self, 41981, data)

class UnderlyingStreamCommoditySettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41982)
		else:
			quickfix.IntField.__init__(self, 41982, data)

class UnderlyingStreamCommoditySettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41983)
		else:
			quickfix.StringField.__init__(self, 41983, data)

class UnderlyingStreamCommoditySettlMonth(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41984)
		else:
			quickfix.IntField.__init__(self, 41984, data)

class UnderlyingStreamCommoditySettlDateRollPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41985)
		else:
			quickfix.IntField.__init__(self, 41985, data)

class UnderlyingStreamCommoditySettlDateRollUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41986)
		else:
			quickfix.StringField.__init__(self, 41986, data)

class UnderlyingStreamCommoditySettlDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41987)
		else:
			quickfix.IntField.__init__(self, 41987, data)

class UnderlyingStreamCommodityXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41988)
		else:
			quickfix.StringField.__init__(self, 41988, data)

class UnderlyingStreamCommodityXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41989)
		else:
			quickfix.StringField.__init__(self, 41989, data)

class NoUnderlyingStreamCommodityAltIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41990)
		else:
			quickfix.IntField.__init__(self, 41990, data)

class UnderlyingStreamCommodityAltID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41991)
		else:
			quickfix.StringField.__init__(self, 41991, data)

class UnderlyingStreamCommodityAltIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41992)
		else:
			quickfix.StringField.__init__(self, 41992, data)

class NoUnderlyingStreamCommodityDataSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41993)
		else:
			quickfix.IntField.__init__(self, 41993, data)

class UnderlyingStreamCommodityDataSourceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41994)
		else:
			quickfix.StringField.__init__(self, 41994, data)

class UnderlyingStreamCommodityDataSourceIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41995)
		else:
			quickfix.IntField.__init__(self, 41995, data)

class NoUnderlyingStreamCommoditySettlDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41996)
		else:
			quickfix.IntField.__init__(self, 41996, data)

class UnderlyingStreamCommoditySettlDay(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41997)
		else:
			quickfix.IntField.__init__(self, 41997, data)

class UnderlyingStreamCommoditySettlTotalHours(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41998)
		else:
			quickfix.IntField.__init__(self, 41998, data)

class NoUnderlyingStreamCommoditySettlTimes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41999)
		else:
			quickfix.IntField.__init__(self, 41999, data)

class UnderlyingStreamCommoditySettlStart(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42000)
		else:
			quickfix.StringField.__init__(self, 42000, data)

class UnderlyingStreamCommoditySettlEnd(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42001)
		else:
			quickfix.StringField.__init__(self, 42001, data)

class UnderlyingStreamCommoditySettlTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41936)
		else:
			quickfix.IntField.__init__(self, 41936, data)

class NoUnderlyingStreamCommoditySettlPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42002)
		else:
			quickfix.IntField.__init__(self, 42002, data)

class UnderlyingStreamCommoditySettlCountry(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42003)
		else:
			quickfix.StringField.__init__(self, 42003, data)

class UnderlyingStreamCommoditySettlTimeZone(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42004)
		else:
			quickfix.StringField.__init__(self, 42004, data)

class UnderlyingStreamCommoditySettlFlowType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42005)
		else:
			quickfix.IntField.__init__(self, 42005, data)

class UnderlyingStreamCommoditySettlPeriodNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42006)
		else:
			quickfix.DoubleField.__init__(self, 42006, data)

class UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42007)
		else:
			quickfix.StringField.__init__(self, 42007, data)

class UnderlyingStreamCommoditySettlPeriodFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42008)
		else:
			quickfix.IntField.__init__(self, 42008, data)

class UnderlyingStreamCommoditySettlPeriodFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42009)
		else:
			quickfix.StringField.__init__(self, 42009, data)

class UnderlyingStreamCommoditySettlPeriodPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42010)
		else:
			quickfix.DoubleField.__init__(self, 42010, data)

class UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42011)
		else:
			quickfix.StringField.__init__(self, 42011, data)

class UnderlyingStreamCommoditySettlPeriodPriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42012)
		else:
			quickfix.StringField.__init__(self, 42012, data)

class UnderlyingStreamCommoditySettlHolidaysProcessingInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42013)
		else:
			quickfix.IntField.__init__(self, 42013, data)

class UnderlyingStreamCommoditySettlPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42014)
		else:
			quickfix.StringField.__init__(self, 42014, data)

class UnderlyingStreamCommoditySettlPeriodXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42015)
		else:
			quickfix.StringField.__init__(self, 42015, data)

class UnderlyingStreamXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42016)
		else:
			quickfix.StringField.__init__(self, 42016, data)

class UnderlyingStreamNotionalXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42018)
		else:
			quickfix.StringField.__init__(self, 42018, data)

class UnderlyingStreamNotionalFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42019)
		else:
			quickfix.IntField.__init__(self, 42019, data)

class UnderlyingStreamNotionalFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42020)
		else:
			quickfix.StringField.__init__(self, 42020, data)

class UnderlyingStreamNotionalCommodityFrequency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42021)
		else:
			quickfix.IntField.__init__(self, 42021, data)

class UnderlyingStreamNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42022)
		else:
			quickfix.StringField.__init__(self, 42022, data)

class UnderlyingStreamTotalNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42023)
		else:
			quickfix.DoubleField.__init__(self, 42023, data)

class UnderlyingStreamTotalNotionalUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42024)
		else:
			quickfix.StringField.__init__(self, 42024, data)

class AllocGrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2300)
		else:
			quickfix.DoubleField.__init__(self, 2300, data)

class RiskLimitReportStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2316)
		else:
			quickfix.IntField.__init__(self, 2316, data)

class RiskLimitReportRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2317)
		else:
			quickfix.IntField.__init__(self, 2317, data)

class RiskLimitCheckRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2318)
		else:
			quickfix.StringField.__init__(self, 2318, data)

class RiskLimitCheckID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2319)
		else:
			quickfix.StringField.__init__(self, 2319, data)

class RiskLimitCheckTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2320)
		else:
			quickfix.IntField.__init__(self, 2320, data)

class RiskLimitCheckType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2321)
		else:
			quickfix.IntField.__init__(self, 2321, data)

class RiskLimitCheckRequestRefID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2322)
		else:
			quickfix.IntField.__init__(self, 2322, data)

class RiskLimitCheckRequestType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2323)
		else:
			quickfix.IntField.__init__(self, 2323, data)

class RiskLimitCheckAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2324)
		else:
			quickfix.DoubleField.__init__(self, 2324, data)

class RiskLimitCheckRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2325)
		else:
			quickfix.IntField.__init__(self, 2325, data)

class RiskLimitCheckRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2326)
		else:
			quickfix.IntField.__init__(self, 2326, data)

class RiskLimitApprovedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2327)
		else:
			quickfix.DoubleField.__init__(self, 2327, data)

class PartyActionRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2328)
		else:
			quickfix.StringField.__init__(self, 2328, data)

class PartyActionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2329)
		else:
			quickfix.IntField.__init__(self, 2329, data)

class ApplTestMessageIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2330)
		else:
			quickfix.BoolField.__init__(self, 2330, data)

class PartyActionReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2331)
		else:
			quickfix.StringField.__init__(self, 2331, data)

class PartyActionResponse(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2332)
		else:
			quickfix.IntField.__init__(self, 2332, data)

class PartyActionRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2333)
		else:
			quickfix.IntField.__init__(self, 2333, data)

class RefRiskLimitCheckID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2334)
		else:
			quickfix.StringField.__init__(self, 2334, data)

class RefRiskLimitCheckIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2335)
		else:
			quickfix.IntField.__init__(self, 2335, data)

class RiskLimitVelocityPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2336)
		else:
			quickfix.IntField.__init__(self, 2336, data)

class RiskLimitVelocityUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2337)
		else:
			quickfix.StringField.__init__(self, 2337, data)

class RequestingPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2338)
		else:
			quickfix.IntField.__init__(self, 2338, data)

class RiskLimitCheckModelType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2339)
		else:
			quickfix.IntField.__init__(self, 2339, data)

class RiskLimitCheckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2343)
		else:
			quickfix.IntField.__init__(self, 2343, data)

class SideRiskLimitCheckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2344)
		else:
			quickfix.IntField.__init__(self, 2344, data)

class NoEntitlementTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2345)
		else:
			quickfix.IntField.__init__(self, 2345, data)

class LegMidPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2346)
		else:
			quickfix.DoubleField.__init__(self, 2346, data)

class RegulatoryTransactionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2347)
		else:
			quickfix.IntField.__init__(self, 2347, data)

class BatchID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 50000)
		else:
			quickfix.StringField.__init__(self, 50000, data)

class BatchTotalMessages(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 50001)
		else:
			quickfix.IntField.__init__(self, 50001, data)

class BatchProcessMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 50002)
		else:
			quickfix.IntField.__init__(self, 50002, data)

class CollateralPortfolioID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2350)
		else:
			quickfix.StringField.__init__(self, 2350, data)

class DeliveryStreamDeliveryPointSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42192)
		else:
			quickfix.IntField.__init__(self, 42192, data)

class DeliveryStreamDeliveryPointDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42193)
		else:
			quickfix.StringField.__init__(self, 42193, data)

class TradingUnitPeriodMultiplier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2353)
		else:
			quickfix.IntField.__init__(self, 2353, data)

class LegTradingUnitPeriodMultiplier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2354)
		else:
			quickfix.IntField.__init__(self, 2354, data)

class LegDeliveryStreamDeliveryPointDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42195)
		else:
			quickfix.StringField.__init__(self, 42195, data)

class LegDeliveryStreamDeliveryPointSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42194)
		else:
			quickfix.IntField.__init__(self, 42194, data)

class LegTotalTradeQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2357)
		else:
			quickfix.DoubleField.__init__(self, 2357, data)

class LegLastMultipliedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2358)
		else:
			quickfix.DoubleField.__init__(self, 2358, data)

class LegTotalGrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2359)
		else:
			quickfix.DoubleField.__init__(self, 2359, data)

class LegTotalTradeMultipliedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2360)
		else:
			quickfix.DoubleField.__init__(self, 2360, data)

class UnderlyingDeliveryStreamDeliveryPointDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42197)
		else:
			quickfix.StringField.__init__(self, 42197, data)

class UnderlyingDeliveryStreamDeliveryPointSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42196)
		else:
			quickfix.IntField.__init__(self, 42196, data)

class UnderlyingTradingUnitPeriodMultiplier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2363)
		else:
			quickfix.IntField.__init__(self, 2363, data)

class PosReportAction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2364)
		else:
			quickfix.IntField.__init__(self, 2364, data)

class SettlForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2365)
		else:
			quickfix.DoubleField.__init__(self, 2365, data)

class SettlPriceFxRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2366)
		else:
			quickfix.CharField.__init__(self, 2366, data)

class TotalTradeQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2367)
		else:
			quickfix.DoubleField.__init__(self, 2367, data)

class LastMultipliedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2368)
		else:
			quickfix.DoubleField.__init__(self, 2368, data)

class TotalGrossTradeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2369)
		else:
			quickfix.DoubleField.__init__(self, 2369, data)

class TotalTradeMultipliedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2370)
		else:
			quickfix.DoubleField.__init__(self, 2370, data)

class EncodedTradeContinuationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2371)
		else:
			quickfix.StringField.__init__(self, 2371, data)

class EncodedTradeContinuationTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2372)
		else:
			quickfix.IntField.__init__(self, 2372, data)

class IntraFirmTradeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2373)
		else:
			quickfix.BoolField.__init__(self, 2373, data)

class TradeContinuationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2374)
		else:
			quickfix.StringField.__init__(self, 2374, data)

class TaxonomyType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2375)
		else:
			quickfix.CharField.__init__(self, 2375, data)

class PartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2376)
		else:
			quickfix.IntField.__init__(self, 2376, data)

class DerivativeInstrumentPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2377)
		else:
			quickfix.IntField.__init__(self, 2377, data)

class InstrumentPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2378)
		else:
			quickfix.IntField.__init__(self, 2378, data)

class LegInstrumentPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2379)
		else:
			quickfix.IntField.__init__(self, 2379, data)

class LegProvisionPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2380)
		else:
			quickfix.IntField.__init__(self, 2380, data)

class Nested2PartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2381)
		else:
			quickfix.IntField.__init__(self, 2381, data)

class Nested3PartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2382)
		else:
			quickfix.IntField.__init__(self, 2382, data)

class Nested4PartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2383)
		else:
			quickfix.IntField.__init__(self, 2383, data)

class NestedPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2384)
		else:
			quickfix.IntField.__init__(self, 2384, data)

class ProvisionPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2385)
		else:
			quickfix.IntField.__init__(self, 2385, data)

class RequestedPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2386)
		else:
			quickfix.IntField.__init__(self, 2386, data)

class RootPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2388)
		else:
			quickfix.IntField.__init__(self, 2388, data)

class SettlPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2389)
		else:
			quickfix.IntField.__init__(self, 2389, data)

class UnderlyingInstrumentPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2391)
		else:
			quickfix.IntField.__init__(self, 2391, data)

class AllocRefRiskLimitCheckID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2392)
		else:
			quickfix.StringField.__init__(self, 2392, data)

class AllocRefRiskLimitCheckIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2393)
		else:
			quickfix.IntField.__init__(self, 2393, data)

class LimitUtilizationAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2394)
		else:
			quickfix.DoubleField.__init__(self, 2394, data)

class LimitAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2395)
		else:
			quickfix.DoubleField.__init__(self, 2395, data)

class LimitRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2396)
		else:
			quickfix.IntField.__init__(self, 2396, data)

class RegulatoryTradeIDScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2397)
		else:
			quickfix.IntField.__init__(self, 2397, data)

class SideRegulatoryTradeIDScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2398)
		else:
			quickfix.IntField.__init__(self, 2398, data)

class AllocRegulatoryTradeIDScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2399)
		else:
			quickfix.IntField.__init__(self, 2399, data)

class AllocRegulatoryLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2406)
		else:
			quickfix.StringField.__init__(self, 2406, data)

class RegulatoryLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2411)
		else:
			quickfix.StringField.__init__(self, 2411, data)

class SideRegulatoryLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2416)
		else:
			quickfix.StringField.__init__(self, 2416, data)

class EffectiveBusinessDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2400)
		else:
			quickfix.StringField.__init__(self, 2400, data)

class ListManualOrderIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2401)
		else:
			quickfix.BoolField.__init__(self, 2401, data)

class EntitlementSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2402)
		else:
			quickfix.IntField.__init__(self, 2402, data)

class QuoteModelType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2403)
		else:
			quickfix.IntField.__init__(self, 2403, data)

class ComplianceText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2404)
		else:
			quickfix.StringField.__init__(self, 2404, data)

class EncodedComplianceTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2351)
		else:
			quickfix.IntField.__init__(self, 2351, data)

class EncodedComplianceText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2352)
		else:
			quickfix.StringField.__init__(self, 2352, data)

class ExecMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2405)
		else:
			quickfix.IntField.__init__(self, 2405, data)

class PricePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2349)
		else:
			quickfix.IntField.__init__(self, 2349, data)

class TradeContingency(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2387)
		else:
			quickfix.IntField.__init__(self, 2387, data)

class ComplexEventSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2407)
		else:
			quickfix.DoubleField.__init__(self, 2407, data)

class ComplexEventForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2408)
		else:
			quickfix.DoubleField.__init__(self, 2408, data)

class LegComplexEventSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2409)
		else:
			quickfix.DoubleField.__init__(self, 2409, data)

class LegComplexEventForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2410)
		else:
			quickfix.DoubleField.__init__(self, 2410, data)

class RateSourceReferemcePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2412)
		else:
			quickfix.StringField.__init__(self, 2412, data)

class RelatedToSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2413)
		else:
			quickfix.StringField.__init__(self, 2413, data)

class RelatedToSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2414)
		else:
			quickfix.StringField.__init__(self, 2414, data)

class RelatedToStreamXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2415)
		else:
			quickfix.StringField.__init__(self, 2415, data)

class FirmTradeEventID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2418)
		else:
			quickfix.StringField.__init__(self, 2418, data)

class UnderlyingComplexEventSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2419)
		else:
			quickfix.DoubleField.__init__(self, 2419, data)

class UnderlyingComplexEventForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2420)
		else:
			quickfix.DoubleField.__init__(self, 2420, data)

class LegMarketDisruptionValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40223)
		else:
			quickfix.StringField.__init__(self, 40223, data)

class LegMarketDisruptionFallbackValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40990)
		else:
			quickfix.StringField.__init__(self, 40990, data)

class MarketDisruptionValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40991)
		else:
			quickfix.StringField.__init__(self, 40991, data)

class MarketDisruptionFallbackValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 40992)
		else:
			quickfix.StringField.__init__(self, 40992, data)

class PaymentSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40993)
		else:
			quickfix.IntField.__init__(self, 40993, data)

class PaymentLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41304)
		else:
			quickfix.StringField.__init__(self, 41304, data)

class UnderlyingMarketDisruptionValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41338)
		else:
			quickfix.StringField.__init__(self, 41338, data)

class UnderlyingMarketDisruptionFallbackValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41339)
		else:
			quickfix.StringField.__init__(self, 41339, data)

class NoUnderlyingAdditionalTermBondRefs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41340)
		else:
			quickfix.IntField.__init__(self, 41340, data)

class UnderlyingAdditionalTermBondSecurityID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41341)
		else:
			quickfix.StringField.__init__(self, 41341, data)

class UnderlyingAdditionalTermBondSecurityIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41701)
		else:
			quickfix.StringField.__init__(self, 41701, data)

class UnderlyingAdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41709)
		else:
			quickfix.StringField.__init__(self, 41709, data)

class EncodedUnderlyingAdditionalTermBondDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 41710)
		else:
			quickfix.IntField.__init__(self, 41710, data)

class EncodedUnderlyingAdditionalTermBondDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41711)
		else:
			quickfix.StringField.__init__(self, 41711, data)

class UnderlyingAdditionalTermBondCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 41712)
		else:
			quickfix.StringField.__init__(self, 41712, data)

class UnderlyingAdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42017)
		else:
			quickfix.StringField.__init__(self, 42017, data)

class EncodedUnderlyingAdditionalTermBondIssuerLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42025)
		else:
			quickfix.IntField.__init__(self, 42025, data)

class EncodedUnderlyingAdditionalTermBondIssuer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42026)
		else:
			quickfix.StringField.__init__(self, 42026, data)

class UnderlyingAdditionalTermBondSeniority(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42027)
		else:
			quickfix.StringField.__init__(self, 42027, data)

class UnderlyingAdditionalTermBondCouponType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42028)
		else:
			quickfix.IntField.__init__(self, 42028, data)

class UnderlyingAdditionalTermBondCouponRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42029)
		else:
			quickfix.DoubleField.__init__(self, 42029, data)

class UnderlyingAdditionalTermBondMaturityDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42030)
		else:
			quickfix.StringField.__init__(self, 42030, data)

class UnderlyingAdditionalTermBondParValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42031)
		else:
			quickfix.DoubleField.__init__(self, 42031, data)

class UnderlyingAdditionalTermBondCurrentTotalIssuedAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42032)
		else:
			quickfix.DoubleField.__init__(self, 42032, data)

class UnderlyingAdditionalTermBondCouponFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42033)
		else:
			quickfix.IntField.__init__(self, 42033, data)

class UnderlyingAdditionalTermBondCouponFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42034)
		else:
			quickfix.StringField.__init__(self, 42034, data)

class UnderlyingAdditionalTermBondDayCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42035)
		else:
			quickfix.IntField.__init__(self, 42035, data)

class NoUnderlyingAdditionalTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42036)
		else:
			quickfix.IntField.__init__(self, 42036, data)

class UnderlyingAdditionalTermConditionPrecedentBondIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42037)
		else:
			quickfix.BoolField.__init__(self, 42037, data)

class UnderlyingAdditionalTermDiscrepancyClauseIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42038)
		else:
			quickfix.BoolField.__init__(self, 42038, data)

class NoUnderlyingCashSettlDealers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42039)
		else:
			quickfix.IntField.__init__(self, 42039, data)

class UnderlyingCashSettlDealer(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42040)
		else:
			quickfix.StringField.__init__(self, 42040, data)

class NoUnderlyingCashSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42041)
		else:
			quickfix.IntField.__init__(self, 42041, data)

class UnderlyingCashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42042)
		else:
			quickfix.StringField.__init__(self, 42042, data)

class UnderlyingCashSettlValuationFirstBusinessDayOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42043)
		else:
			quickfix.IntField.__init__(self, 42043, data)

class UnderlyingCashSettlValuationSubsequentBusinessDaysOffset(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42044)
		else:
			quickfix.IntField.__init__(self, 42044, data)

class UnderlyingCashSettlNumOfValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42045)
		else:
			quickfix.IntField.__init__(self, 42045, data)

class UnderlyingCashSettlValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42046)
		else:
			quickfix.StringField.__init__(self, 42046, data)

class UnderlyingCashSettlBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42047)
		else:
			quickfix.StringField.__init__(self, 42047, data)

class UnderlyingCashSettlQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42048)
		else:
			quickfix.IntField.__init__(self, 42048, data)

class UnderlyingCashSettlQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42049)
		else:
			quickfix.DoubleField.__init__(self, 42049, data)

class UnderlyingCashSettlQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42050)
		else:
			quickfix.StringField.__init__(self, 42050, data)

class UnderlyingCashSettlMinimumQuoteAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42051)
		else:
			quickfix.DoubleField.__init__(self, 42051, data)

class UnderlyingCashSettlMinimumQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42052)
		else:
			quickfix.StringField.__init__(self, 42052, data)

class UnderlyingCashSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42053)
		else:
			quickfix.IntField.__init__(self, 42053, data)

class UnderlyingCashSettlAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42054)
		else:
			quickfix.DoubleField.__init__(self, 42054, data)

class UnderlyingCashSettlRecoveryFactor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42055)
		else:
			quickfix.DoubleField.__init__(self, 42055, data)

class UnderlyingCashSettlFixedTermIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42056)
		else:
			quickfix.BoolField.__init__(self, 42056, data)

class UnderlyingCashSettlAccruedInterestIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42057)
		else:
			quickfix.BoolField.__init__(self, 42057, data)

class UnderlyingCashSettlValuationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42058)
		else:
			quickfix.IntField.__init__(self, 42058, data)

class UnderlyingCashSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42059)
		else:
			quickfix.StringField.__init__(self, 42059, data)

class NoUnderlyingPhysicalSettlTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42060)
		else:
			quickfix.IntField.__init__(self, 42060, data)

class UnderlyingPhysicalSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42061)
		else:
			quickfix.StringField.__init__(self, 42061, data)

class UnderlyingPhysicalSettlBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42062)
		else:
			quickfix.IntField.__init__(self, 42062, data)

class UnderlyingPhysicalSettlMaximumBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42063)
		else:
			quickfix.IntField.__init__(self, 42063, data)

class UnderlyingPhysicalSettlTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42064)
		else:
			quickfix.StringField.__init__(self, 42064, data)

class NoUnderlyingPhysicalSettlDeliverableObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42065)
		else:
			quickfix.IntField.__init__(self, 42065, data)

class UnderlyingPhysicalSettlDeliverableObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42066)
		else:
			quickfix.StringField.__init__(self, 42066, data)

class UnderlyingPhysicalSettlDeliverableObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42067)
		else:
			quickfix.StringField.__init__(self, 42067, data)

class NoUnderlyingProtectionTerms(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42068)
		else:
			quickfix.IntField.__init__(self, 42068, data)

class UnderlyingProtectionTermNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42069)
		else:
			quickfix.DoubleField.__init__(self, 42069, data)

class UnderlyingProtectionTermCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42070)
		else:
			quickfix.StringField.__init__(self, 42070, data)

class UnderlyingProtectionTermSellerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42071)
		else:
			quickfix.BoolField.__init__(self, 42071, data)

class UnderlyingProtectionTermBuyerNotifies(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42072)
		else:
			quickfix.BoolField.__init__(self, 42072, data)

class UnderlyingProtectionTermEventBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42073)
		else:
			quickfix.StringField.__init__(self, 42073, data)

class UnderlyingProtectionTermStandardSources(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42074)
		else:
			quickfix.BoolField.__init__(self, 42074, data)

class UnderlyingProtectionTermEventMinimumSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42075)
		else:
			quickfix.IntField.__init__(self, 42075, data)

class UnderlyingProtectionTermXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42076)
		else:
			quickfix.StringField.__init__(self, 42076, data)

class NoUnderlyingProtectionTermEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42077)
		else:
			quickfix.IntField.__init__(self, 42077, data)

class UnderlyingProtectionTermEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42078)
		else:
			quickfix.StringField.__init__(self, 42078, data)

class UnderlyingProtectionTermEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42079)
		else:
			quickfix.StringField.__init__(self, 42079, data)

class UnderlyingProtectionTermEventCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42080)
		else:
			quickfix.StringField.__init__(self, 42080, data)

class UnderlyingProtectionTermEventPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42081)
		else:
			quickfix.IntField.__init__(self, 42081, data)

class UnderlyingProtectionTermEventUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42082)
		else:
			quickfix.StringField.__init__(self, 42082, data)

class UnderlyingProtectionTermEventDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42083)
		else:
			quickfix.IntField.__init__(self, 42083, data)

class UnderlyingProtectionTermEventRateSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42084)
		else:
			quickfix.StringField.__init__(self, 42084, data)

class NoUnderlyingProtectionTermEventQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42085)
		else:
			quickfix.IntField.__init__(self, 42085, data)

class UnderlyingProtectionTermEventQualifier(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42086)
		else:
			quickfix.CharField.__init__(self, 42086, data)

class NoUnderlyingProtectionTermObligations(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42087)
		else:
			quickfix.IntField.__init__(self, 42087, data)

class UnderlyingProtectionTermObligationType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42088)
		else:
			quickfix.StringField.__init__(self, 42088, data)

class UnderlyingProtectionTermObligationValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42089)
		else:
			quickfix.StringField.__init__(self, 42089, data)

class NoUnderlyingProtectionTermEventNewsSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42090)
		else:
			quickfix.IntField.__init__(self, 42090, data)

class UnderlyingProtectionTermEventNewsSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42091)
		else:
			quickfix.StringField.__init__(self, 42091, data)

class UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42092)
		else:
			quickfix.IntField.__init__(self, 42092, data)

class UnderlyingProvisionCashSettlPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42093)
		else:
			quickfix.IntField.__init__(self, 42093, data)

class UnderlyingProvisionCashSettlPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42094)
		else:
			quickfix.IntField.__init__(self, 42094, data)

class UnderlyingProvisionCashSettlPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42095)
		else:
			quickfix.StringField.__init__(self, 42095, data)

class UnderlyingProvisionCashSettlPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42096)
		else:
			quickfix.IntField.__init__(self, 42096, data)

class UnderlyingProvisionCashSettlPaymentDateRangeFirst(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42097)
		else:
			quickfix.StringField.__init__(self, 42097, data)

class UnderlyingProvisionCashSettlPaymentDateRangeLast(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42098)
		else:
			quickfix.StringField.__init__(self, 42098, data)

class NoUnderlyingProvisionCashSettlPaymentDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42099)
		else:
			quickfix.IntField.__init__(self, 42099, data)

class UnderlyingProvisionCashSettlPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42100)
		else:
			quickfix.StringField.__init__(self, 42100, data)

class UnderlyingProvisionCashSettlPaymentDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42101)
		else:
			quickfix.IntField.__init__(self, 42101, data)

class UnderlyingProvisionCashSettlQuoteSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42102)
		else:
			quickfix.IntField.__init__(self, 42102, data)

class UnderlyingProvisionCashSettlQuoteReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42103)
		else:
			quickfix.StringField.__init__(self, 42103, data)

class UnderlyingProvisionCashSettlValueTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42104)
		else:
			quickfix.StringField.__init__(self, 42104, data)

class UnderlyingProvisionCashSettlValueTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42105)
		else:
			quickfix.StringField.__init__(self, 42105, data)

class UnderlyingProvisionCashSettlValueDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42106)
		else:
			quickfix.IntField.__init__(self, 42106, data)

class UnderlyingProvisionCashSettlValueDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42107)
		else:
			quickfix.IntField.__init__(self, 42107, data)

class UnderlyingProvisionCashSettlValueDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42108)
		else:
			quickfix.IntField.__init__(self, 42108, data)

class UnderlyingProvisionCashSettlValueDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42109)
		else:
			quickfix.StringField.__init__(self, 42109, data)

class UnderlyingProvisionCashSettlValueDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42110)
		else:
			quickfix.IntField.__init__(self, 42110, data)

class UnderlyingProvisionCashSettlValueDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42111)
		else:
			quickfix.StringField.__init__(self, 42111, data)

class NoUnderlyingProvisionOptionExerciseFixedDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42112)
		else:
			quickfix.IntField.__init__(self, 42112, data)

class UnderlyingProvisionOptionExerciseFixedDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42113)
		else:
			quickfix.StringField.__init__(self, 42113, data)

class UnderlyingProvisionOptionExerciseFixedDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42114)
		else:
			quickfix.IntField.__init__(self, 42114, data)

class UnderlyingProvisionOptionExerciseBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42115)
		else:
			quickfix.IntField.__init__(self, 42115, data)

class UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42116)
		else:
			quickfix.IntField.__init__(self, 42116, data)

class UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42117)
		else:
			quickfix.StringField.__init__(self, 42117, data)

class UnderlyingProvisionOptionExerciseFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42118)
		else:
			quickfix.IntField.__init__(self, 42118, data)

class UnderlyingProvisionOptionExerciseFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42119)
		else:
			quickfix.StringField.__init__(self, 42119, data)

class UnderlyingProvisionOptionExerciseStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42120)
		else:
			quickfix.StringField.__init__(self, 42120, data)

class UnderlyingProvisionOptionExerciseStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42121)
		else:
			quickfix.IntField.__init__(self, 42121, data)

class UnderlyingProvisionOptionExerciseStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42122)
		else:
			quickfix.IntField.__init__(self, 42122, data)

class UnderlyingProvisionOptionExerciseStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42123)
		else:
			quickfix.StringField.__init__(self, 42123, data)

class UnderlyingProvisionOptionExerciseStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42124)
		else:
			quickfix.IntField.__init__(self, 42124, data)

class UnderlyingProvisionOptionExerciseStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42125)
		else:
			quickfix.StringField.__init__(self, 42125, data)

class UnderlyingProvisionOptionExercisePeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42126)
		else:
			quickfix.IntField.__init__(self, 42126, data)

class UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42127)
		else:
			quickfix.StringField.__init__(self, 42127, data)

class UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42128)
		else:
			quickfix.StringField.__init__(self, 42128, data)

class UnderlyingProvisionOptionExerciseEarliestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42129)
		else:
			quickfix.StringField.__init__(self, 42129, data)

class UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42130)
		else:
			quickfix.StringField.__init__(self, 42130, data)

class UnderlyingProvisionOptionExerciseLatestTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42131)
		else:
			quickfix.StringField.__init__(self, 42131, data)

class UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42132)
		else:
			quickfix.StringField.__init__(self, 42132, data)

class UnderlyingProvisionOptionExpirationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42133)
		else:
			quickfix.StringField.__init__(self, 42133, data)

class UnderlyingProvisionOptionExpirationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42134)
		else:
			quickfix.IntField.__init__(self, 42134, data)

class UnderlyingProvisionOptionExpirationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42135)
		else:
			quickfix.IntField.__init__(self, 42135, data)

class UnderlyingProvisionOptionExpirationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42136)
		else:
			quickfix.IntField.__init__(self, 42136, data)

class UnderlyingProvisionOptionExpirationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42137)
		else:
			quickfix.StringField.__init__(self, 42137, data)

class UnderlyingProvisionOptionExpirationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42138)
		else:
			quickfix.IntField.__init__(self, 42138, data)

class UnderlyingProvisionOptionExpirationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42139)
		else:
			quickfix.StringField.__init__(self, 42139, data)

class UnderlyingProvisionOptionExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42140)
		else:
			quickfix.StringField.__init__(self, 42140, data)

class UnderlyingProvisionOptionExpirationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42141)
		else:
			quickfix.StringField.__init__(self, 42141, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42142)
		else:
			quickfix.StringField.__init__(self, 42142, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateBizDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42143)
		else:
			quickfix.IntField.__init__(self, 42143, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42144)
		else:
			quickfix.IntField.__init__(self, 42144, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42145)
		else:
			quickfix.IntField.__init__(self, 42145, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42146)
		else:
			quickfix.StringField.__init__(self, 42146, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42147)
		else:
			quickfix.IntField.__init__(self, 42147, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42148)
		else:
			quickfix.StringField.__init__(self, 42148, data)

class NoUnderlyingProvisions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42149)
		else:
			quickfix.IntField.__init__(self, 42149, data)

class UnderlyingProvisionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42150)
		else:
			quickfix.IntField.__init__(self, 42150, data)

class UnderlyingProvisionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42151)
		else:
			quickfix.StringField.__init__(self, 42151, data)

class UnderlyingProvisionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42152)
		else:
			quickfix.IntField.__init__(self, 42152, data)

class UnderlyingProvisionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42153)
		else:
			quickfix.StringField.__init__(self, 42153, data)

class UnderlyingProvisionDateTenorPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42154)
		else:
			quickfix.IntField.__init__(self, 42154, data)

class UnderlyingProvisionDateTenorUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42155)
		else:
			quickfix.StringField.__init__(self, 42155, data)

class UnderlyingProvisionCalculationAgent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42156)
		else:
			quickfix.IntField.__init__(self, 42156, data)

class UnderlyingProvisionOptionSinglePartyBuyerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42157)
		else:
			quickfix.IntField.__init__(self, 42157, data)

class UnderlyingProvisionOptionSinglePartySellerSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42158)
		else:
			quickfix.IntField.__init__(self, 42158, data)

class UnderlyingProvisionOptionExerciseStyle(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42159)
		else:
			quickfix.IntField.__init__(self, 42159, data)

class UnderlyingProvisionOptionExerciseMultipleNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42160)
		else:
			quickfix.DoubleField.__init__(self, 42160, data)

class UnderlyingProvisionOptionExerciseMinimumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42161)
		else:
			quickfix.DoubleField.__init__(self, 42161, data)

class UnderlyingProvisionOptionExerciseMaximumNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42162)
		else:
			quickfix.DoubleField.__init__(self, 42162, data)

class UnderlyingProvisionOptionMinimumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42163)
		else:
			quickfix.IntField.__init__(self, 42163, data)

class UnderlyingProvisionOptionMaximumNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42164)
		else:
			quickfix.IntField.__init__(self, 42164, data)

class UnderlyingProvisionOptionExerciseConfirmation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42165)
		else:
			quickfix.BoolField.__init__(self, 42165, data)

class UnderlyingProvisionCashSettlMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42166)
		else:
			quickfix.IntField.__init__(self, 42166, data)

class UnderlyingProvisionCashSettlCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42167)
		else:
			quickfix.StringField.__init__(self, 42167, data)

class UnderlyingProvisionCashSettlCurrency2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42168)
		else:
			quickfix.StringField.__init__(self, 42168, data)

class UnderlyingProvisionCashSettlQuoteType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42169)
		else:
			quickfix.IntField.__init__(self, 42169, data)

class UnderlyingProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42170)
		else:
			quickfix.StringField.__init__(self, 42170, data)

class EncodedUnderlyingProvisionTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42171)
		else:
			quickfix.IntField.__init__(self, 42171, data)

class EncodedUnderlyingProvisionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42172)
		else:
			quickfix.StringField.__init__(self, 42172, data)

class NoUnderlyingProvisionPartyIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42173)
		else:
			quickfix.IntField.__init__(self, 42173, data)

class UnderlyingProvisionPartyID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42174)
		else:
			quickfix.StringField.__init__(self, 42174, data)

class UnderlyingProvisionPartyIDSource(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42175)
		else:
			quickfix.CharField.__init__(self, 42175, data)

class UnderlyingProvisionPartyRole(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42176)
		else:
			quickfix.IntField.__init__(self, 42176, data)

class UnderlyingProvisionPartyRoleQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 40918)
		else:
			quickfix.IntField.__init__(self, 40918, data)

class NoUnderlyingProvisionPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42177)
		else:
			quickfix.IntField.__init__(self, 42177, data)

class UnderlyingProvisionPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42178)
		else:
			quickfix.StringField.__init__(self, 42178, data)

class UnderlyingProvisionPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42179)
		else:
			quickfix.IntField.__init__(self, 42179, data)

class NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42180)
		else:
			quickfix.IntField.__init__(self, 42180, data)

class UnderlyingProvisionCashSettlPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42181)
		else:
			quickfix.StringField.__init__(self, 42181, data)

class NoUnderlyingProvisionCashSettlValueDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42182)
		else:
			quickfix.IntField.__init__(self, 42182, data)

class UnderlyingProvisionCashSettlValueDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42183)
		else:
			quickfix.StringField.__init__(self, 42183, data)

class NoUnderlyingProvisionOptionExerciseBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42184)
		else:
			quickfix.IntField.__init__(self, 42184, data)

class UnderlyingProvisionOptionExerciseBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42185)
		else:
			quickfix.StringField.__init__(self, 42185, data)

class NoUnderlyingProvisionOptionExpirationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42186)
		else:
			quickfix.IntField.__init__(self, 42186, data)

class UnderlyingProvisionOptionExpirationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42187)
		else:
			quickfix.StringField.__init__(self, 42187, data)

class NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42188)
		else:
			quickfix.IntField.__init__(self, 42188, data)

class UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42189)
		else:
			quickfix.StringField.__init__(self, 42189, data)

class NoUnderlyingProvisionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42190)
		else:
			quickfix.IntField.__init__(self, 42190, data)

class UnderlyingProvisionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42191)
		else:
			quickfix.StringField.__init__(self, 42191, data)

class FillRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2421)
		else:
			quickfix.StringField.__init__(self, 2421, data)

class OrderRequestID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2422)
		else:
			quickfix.IntField.__init__(self, 2422, data)

class MassOrderRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2423)
		else:
			quickfix.StringField.__init__(self, 2423, data)

class MassOrderReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2424)
		else:
			quickfix.StringField.__init__(self, 2424, data)

class MassOrderRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2425)
		else:
			quickfix.IntField.__init__(self, 2425, data)

class MassOrderRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2426)
		else:
			quickfix.IntField.__init__(self, 2426, data)

class OrderResponseLevel(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2427)
		else:
			quickfix.IntField.__init__(self, 2427, data)

class NoOrderEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2428)
		else:
			quickfix.IntField.__init__(self, 2428, data)

class OrderEntryAction(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2429)
		else:
			quickfix.CharField.__init__(self, 2429, data)

class OrderEntryID(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2430)
		else:
			quickfix.IntField.__init__(self, 2430, data)

class ExecTypeReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2431)
		else:
			quickfix.IntField.__init__(self, 2431, data)

class TotNoOrderEntries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2432)
		else:
			quickfix.IntField.__init__(self, 2432, data)

class NoTargetPartySubIDs(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2433)
		else:
			quickfix.IntField.__init__(self, 2433, data)

class TargetPartySubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2434)
		else:
			quickfix.StringField.__init__(self, 2434, data)

class TargetPartySubIDType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2435)
		else:
			quickfix.IntField.__init__(self, 2435, data)

class TransferInstructionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2436)
		else:
			quickfix.StringField.__init__(self, 2436, data)

class TransferID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2437)
		else:
			quickfix.StringField.__init__(self, 2437, data)

class TransferReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2438)
		else:
			quickfix.StringField.__init__(self, 2438, data)

class TransferTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2439)
		else:
			quickfix.IntField.__init__(self, 2439, data)

class TransferType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2440)
		else:
			quickfix.IntField.__init__(self, 2440, data)

class TransferScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2441)
		else:
			quickfix.IntField.__init__(self, 2441, data)

class TransferStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2442)
		else:
			quickfix.IntField.__init__(self, 2442, data)

class TransferRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2443)
		else:
			quickfix.IntField.__init__(self, 2443, data)

class TransferReportType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2444)
		else:
			quickfix.IntField.__init__(self, 2444, data)

class AggressorTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2445)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2445, data)

class AggressorSide(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2446)
		else:
			quickfix.CharField.__init__(self, 2446, data)

class FastMarketIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2447)
		else:
			quickfix.BoolField.__init__(self, 2447, data)

class LinkageHandlingIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2448)
		else:
			quickfix.BoolField.__init__(self, 2448, data)

class NumberOfBuyOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2449)
		else:
			quickfix.IntField.__init__(self, 2449, data)

class NumberOfSellOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2450)
		else:
			quickfix.IntField.__init__(self, 2450, data)

class SettlPriceDeterminationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2451)
		else:
			quickfix.IntField.__init__(self, 2451, data)

class MDStatisticReqID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2452)
		else:
			quickfix.StringField.__init__(self, 2452, data)

class MDStatisticRptID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2453)
		else:
			quickfix.StringField.__init__(self, 2453, data)

class MDStatisticName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2454)
		else:
			quickfix.StringField.__init__(self, 2454, data)

class MDStatisticDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2455)
		else:
			quickfix.StringField.__init__(self, 2455, data)

class MDStatisticType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2456)
		else:
			quickfix.IntField.__init__(self, 2456, data)

class MDStatisticScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2457)
		else:
			quickfix.IntField.__init__(self, 2457, data)

class MDStatisticSubScope(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2458)
		else:
			quickfix.IntField.__init__(self, 2458, data)

class MDStatisticScopeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2459)
		else:
			quickfix.IntField.__init__(self, 2459, data)

class MDStatisticFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2460)
		else:
			quickfix.IntField.__init__(self, 2460, data)

class MDStatisticFrequencyUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2461)
		else:
			quickfix.IntField.__init__(self, 2461, data)

class MDStatisticDelayPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2462)
		else:
			quickfix.IntField.__init__(self, 2462, data)

class MDStatisticDelayUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2463)
		else:
			quickfix.IntField.__init__(self, 2463, data)

class MDStatisticIntervalType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2464)
		else:
			quickfix.IntField.__init__(self, 2464, data)

class MDStatisticIntervalTypeUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2465)
		else:
			quickfix.StringField.__init__(self, 2465, data)

class MDStatisticIntervalPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2466)
		else:
			quickfix.IntField.__init__(self, 2466, data)

class MDStatisticIntervalUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2467)
		else:
			quickfix.IntField.__init__(self, 2467, data)

class MDStatisticStartDate(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2468)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2468, data)

class MDStatisticEndDate(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2469)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2469, data)

class MDStatisticStartTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2470)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2470, data)

class MDStatisticEndTime(quickfix.UtcTimeOnlyField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeOnlyField.__init__(self, 2471)
		else:
			quickfix.UtcTimeOnlyField.__init__(self, 2471, data)

class MDStatisticRatioType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2472)
		else:
			quickfix.IntField.__init__(self, 2472, data)

class MDStatisticRequestResult(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2473)
		else:
			quickfix.IntField.__init__(self, 2473, data)

class NoMDStatistics(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2474)
		else:
			quickfix.IntField.__init__(self, 2474, data)

class MDStatisticID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2475)
		else:
			quickfix.StringField.__init__(self, 2475, data)

class MDStatisticTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2476)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2476, data)

class MDStatisticStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2477)
		else:
			quickfix.IntField.__init__(self, 2477, data)

class MDStatisticValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2478)
		else:
			quickfix.DoubleField.__init__(self, 2478, data)

class MDStatisticValueType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2479)
		else:
			quickfix.IntField.__init__(self, 2479, data)

class MDStatisticValueUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2480)
		else:
			quickfix.IntField.__init__(self, 2480, data)

class EncodedMDStatisticDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2481)
		else:
			quickfix.IntField.__init__(self, 2481, data)

class EncodedMDStatisticDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2482)
		else:
			quickfix.StringField.__init__(self, 2482, data)

class AllocRiskLimitCheckStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2483)
		else:
			quickfix.IntField.__init__(self, 2483, data)

class AssetGroup(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2210)
		else:
			quickfix.IntField.__init__(self, 2210, data)

class LegAssetGroup(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2348)
		else:
			quickfix.IntField.__init__(self, 2348, data)

class LegContractualDefinition(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42199)
		else:
			quickfix.StringField.__init__(self, 42199, data)

class NoLegContractualDefinitions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42198)
		else:
			quickfix.IntField.__init__(self, 42198, data)

class LegContractualMatrixDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42205)
		else:
			quickfix.StringField.__init__(self, 42205, data)

class LegContractualMatrixSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42204)
		else:
			quickfix.StringField.__init__(self, 42204, data)

class LegContractualMatrixTerm(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42206)
		else:
			quickfix.StringField.__init__(self, 42206, data)

class NoLegContractualMatrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42203)
		else:
			quickfix.IntField.__init__(self, 42203, data)

class EncodedLegDocumentationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2493)
		else:
			quickfix.StringField.__init__(self, 2493, data)

class EncodedLegDocumentationTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2494)
		else:
			quickfix.IntField.__init__(self, 2494, data)

class LegAgreementCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2495)
		else:
			quickfix.StringField.__init__(self, 2495, data)

class LegAgreementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2496)
		else:
			quickfix.StringField.__init__(self, 2496, data)

class LegAgreementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2497)
		else:
			quickfix.StringField.__init__(self, 2497, data)

class LegAgreementID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2498)
		else:
			quickfix.StringField.__init__(self, 2498, data)

class LegAgreementVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2499)
		else:
			quickfix.StringField.__init__(self, 2499, data)

class LegBrokerConfirmationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2500)
		else:
			quickfix.StringField.__init__(self, 2500, data)

class LegCreditSupportAgreementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2501)
		else:
			quickfix.StringField.__init__(self, 2501, data)

class LegCreditSupportAgreementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2502)
		else:
			quickfix.StringField.__init__(self, 2502, data)

class LegCreditSupportAgreementID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2503)
		else:
			quickfix.StringField.__init__(self, 2503, data)

class LegDeliveryType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2504)
		else:
			quickfix.IntField.__init__(self, 2504, data)

class LegDocumentationText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2505)
		else:
			quickfix.StringField.__init__(self, 2505, data)

class LegEndDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2506)
		else:
			quickfix.StringField.__init__(self, 2506, data)

class LegGoverningLaw(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2507)
		else:
			quickfix.StringField.__init__(self, 2507, data)

class LegMarginRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2508)
		else:
			quickfix.DoubleField.__init__(self, 2508, data)

class LegMasterConfirmationAnnexDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2509)
		else:
			quickfix.StringField.__init__(self, 2509, data)

class LegMasterConfirmationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2510)
		else:
			quickfix.StringField.__init__(self, 2510, data)

class LegMasterConfirmationDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2511)
		else:
			quickfix.StringField.__init__(self, 2511, data)

class LegMasterConfirmationAnnexDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2512)
		else:
			quickfix.StringField.__init__(self, 2512, data)

class LegStartDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2513)
		else:
			quickfix.StringField.__init__(self, 2513, data)

class LegTerminationType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2514)
		else:
			quickfix.IntField.__init__(self, 2514, data)

class LegFinancingTermSupplementDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42202)
		else:
			quickfix.StringField.__init__(self, 42202, data)

class LegFinancingTermSupplementDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42201)
		else:
			quickfix.StringField.__init__(self, 42201, data)

class NoLegFinancingTermSupplements(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42200)
		else:
			quickfix.IntField.__init__(self, 42200, data)

class UnderlyingAssetGroup(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2491)
		else:
			quickfix.IntField.__init__(self, 2491, data)

class FirmTransactionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2484)
		else:
			quickfix.StringField.__init__(self, 2484, data)

class TransactionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2485)
		else:
			quickfix.StringField.__init__(self, 2485, data)

class WireReference(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2486)
		else:
			quickfix.StringField.__init__(self, 2486, data)

class CollRptRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2487)
		else:
			quickfix.IntField.__init__(self, 2487, data)

class CollRptStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2488)
		else:
			quickfix.IntField.__init__(self, 2488, data)

class PackageID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2489)
		else:
			quickfix.StringField.__init__(self, 2489, data)

class TradeNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2490)
		else:
			quickfix.IntField.__init__(self, 2490, data)

class AllocCalculatedCcyQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2515)
		else:
			quickfix.DoubleField.__init__(self, 2515, data)

class CollateralRequestInstruction(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2516)
		else:
			quickfix.StringField.__init__(self, 2516, data)

class CollateralRequestLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2517)
		else:
			quickfix.StringField.__init__(self, 2517, data)

class CollateralRequestNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2518)
		else:
			quickfix.IntField.__init__(self, 2518, data)

class TotNumCollateralRequests(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2519)
		else:
			quickfix.IntField.__init__(self, 2519, data)

class WarningText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2520)
		else:
			quickfix.StringField.__init__(self, 2520, data)

class EncodedWarningText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2521)
		else:
			quickfix.StringField.__init__(self, 2521, data)

class EncodedWarningTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2522)
		else:
			quickfix.IntField.__init__(self, 2522, data)

class LegStreamCommodityDeliveryPricingRegion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42588)
		else:
			quickfix.StringField.__init__(self, 42588, data)

class StreamCommodityDeliveryPricingRegion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42587)
		else:
			quickfix.StringField.__init__(self, 42587, data)

class AffiliatedFirmsTradeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2525)
		else:
			quickfix.BoolField.__init__(self, 2525, data)

class InternationalSwapIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2526)
		else:
			quickfix.BoolField.__init__(self, 2526, data)

class MultiAssetSwapIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2527)
		else:
			quickfix.BoolField.__init__(self, 2527, data)

class UnderlyingStreamCommodityDeliveryPricingRegion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42589)
		else:
			quickfix.StringField.__init__(self, 42589, data)

class NoRelativeValues(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2529)
		else:
			quickfix.IntField.__init__(self, 2529, data)

class RelativeValueType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2530)
		else:
			quickfix.IntField.__init__(self, 2530, data)

class RelativeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2531)
		else:
			quickfix.DoubleField.__init__(self, 2531, data)

class RelativeValueSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2532)
		else:
			quickfix.IntField.__init__(self, 2532, data)

class BidSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2533)
		else:
			quickfix.DoubleField.__init__(self, 2533, data)

class OfferSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2534)
		else:
			quickfix.DoubleField.__init__(self, 2534, data)

class ClearingSettlPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2528)
		else:
			quickfix.DoubleField.__init__(self, 2528, data)

class MDReportEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2535)
		else:
			quickfix.IntField.__init__(self, 2535, data)

class MDReportCount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2536)
		else:
			quickfix.IntField.__init__(self, 2536, data)

class TotNoMarketSegmentReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2537)
		else:
			quickfix.IntField.__init__(self, 2537, data)

class TotNoInstrumentReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2538)
		else:
			quickfix.IntField.__init__(self, 2538, data)

class TotNoPartyDetailReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2539)
		else:
			quickfix.IntField.__init__(self, 2539, data)

class TotNoEntitlementReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2540)
		else:
			quickfix.IntField.__init__(self, 2540, data)

class TotNoRiskLimitReports(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2541)
		else:
			quickfix.IntField.__init__(self, 2541, data)

class MarketSegmentStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2542)
		else:
			quickfix.IntField.__init__(self, 2542, data)

class MarketSegmentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2543)
		else:
			quickfix.IntField.__init__(self, 2543, data)

class MarketSegmentSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2544)
		else:
			quickfix.IntField.__init__(self, 2544, data)

class NoRelatedMarketSegments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2545)
		else:
			quickfix.IntField.__init__(self, 2545, data)

class RelatedMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2546)
		else:
			quickfix.StringField.__init__(self, 2546, data)

class MarketSegmentRelationship(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2547)
		else:
			quickfix.IntField.__init__(self, 2547, data)

class NoAuctionTypeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2548)
		else:
			quickfix.IntField.__init__(self, 2548, data)

class AuctionTypeProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2549)
		else:
			quickfix.StringField.__init__(self, 2549, data)

class NoPriceRangeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2550)
		else:
			quickfix.IntField.__init__(self, 2550, data)

class StartPriceRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2551)
		else:
			quickfix.DoubleField.__init__(self, 2551, data)

class EndPriceRange(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2552)
		else:
			quickfix.DoubleField.__init__(self, 2552, data)

class PriceRangeValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2553)
		else:
			quickfix.DoubleField.__init__(self, 2553, data)

class PriceRangePercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2554)
		else:
			quickfix.DoubleField.__init__(self, 2554, data)

class PriceRangeProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2555)
		else:
			quickfix.StringField.__init__(self, 2555, data)

class PriceRangeRuleID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2556)
		else:
			quickfix.StringField.__init__(self, 2556, data)

class FastMarketPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2557)
		else:
			quickfix.DoubleField.__init__(self, 2557, data)

class NoQuoteSizeRules(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2558)
		else:
			quickfix.IntField.__init__(self, 2558, data)

class QuoteSideIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2559)
		else:
			quickfix.BoolField.__init__(self, 2559, data)

class NoFlexProductEligibilities(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2560)
		else:
			quickfix.IntField.__init__(self, 2560, data)

class FlexProductEligibilityComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2561)
		else:
			quickfix.StringField.__init__(self, 2561, data)

class NumOfComplexInstruments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2562)
		else:
			quickfix.IntField.__init__(self, 2562, data)

class MarketDepthTimeInterval(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2563)
		else:
			quickfix.IntField.__init__(self, 2563, data)

class MarketDepthTimeIntervalUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2564)
		else:
			quickfix.IntField.__init__(self, 2564, data)

class MDRecoveryTimeInterval(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2565)
		else:
			quickfix.IntField.__init__(self, 2565, data)

class MDRecoveryTimeIntervalUnit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2566)
		else:
			quickfix.IntField.__init__(self, 2566, data)

class PrimaryServiceLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2567)
		else:
			quickfix.StringField.__init__(self, 2567, data)

class SecondaryServiceLocationID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2568)
		else:
			quickfix.StringField.__init__(self, 2568, data)

class MatchRuleProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2569)
		else:
			quickfix.StringField.__init__(self, 2569, data)

class CustomerPriority(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2570)
		else:
			quickfix.IntField.__init__(self, 2570, data)

class TickRuleProductComplex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2571)
		else:
			quickfix.StringField.__init__(self, 2571, data)

class PreviousAdjustedOpenInterest(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2572)
		else:
			quickfix.DoubleField.__init__(self, 2572, data)

class PreviousUnadjustedOpenInterest(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2573)
		else:
			quickfix.DoubleField.__init__(self, 2573, data)

class LowExercisePriceOptionIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2574)
		else:
			quickfix.BoolField.__init__(self, 2574, data)

class BlockTradeEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2575)
		else:
			quickfix.BoolField.__init__(self, 2575, data)

class InstrumentPricePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2576)
		else:
			quickfix.IntField.__init__(self, 2576, data)

class StrikePricePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2577)
		else:
			quickfix.IntField.__init__(self, 2577, data)

class OrigStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2578)
		else:
			quickfix.DoubleField.__init__(self, 2578, data)

class SettlSubMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2579)
		else:
			quickfix.IntField.__init__(self, 2579, data)

class NoClearingPriceParameters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2580)
		else:
			quickfix.IntField.__init__(self, 2580, data)

class BusinessDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2581)
		else:
			quickfix.IntField.__init__(self, 2581, data)

class ClearingPriceOffset(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2582)
		else:
			quickfix.DoubleField.__init__(self, 2582, data)

class VegaMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2583)
		else:
			quickfix.DoubleField.__init__(self, 2583, data)

class AnnualTradingBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2584)
		else:
			quickfix.IntField.__init__(self, 2584, data)

class TotalTradingBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2585)
		else:
			quickfix.IntField.__init__(self, 2585, data)

class TradingBusinessDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2586)
		else:
			quickfix.IntField.__init__(self, 2586, data)

class RealizedVariance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2587)
		else:
			quickfix.DoubleField.__init__(self, 2587, data)

class StandardVariance(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2588)
		else:
			quickfix.DoubleField.__init__(self, 2588, data)

class RelatedClosePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2589)
		else:
			quickfix.DoubleField.__init__(self, 2589, data)

class OvernightInterestRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2590)
		else:
			quickfix.DoubleField.__init__(self, 2590, data)

class AccumulatedReturnModifiedVariationMargin(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2591)
		else:
			quickfix.DoubleField.__init__(self, 2591, data)

class CalculationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2592)
		else:
			quickfix.IntField.__init__(self, 2592, data)

class NoMiscFeeSubTypes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2633)
		else:
			quickfix.IntField.__init__(self, 2633, data)

class MiscFeeSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2634)
		else:
			quickfix.StringField.__init__(self, 2634, data)

class MiscFeeSubTypeAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2635)
		else:
			quickfix.DoubleField.__init__(self, 2635, data)

class MiscFeeSubTypeDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2636)
		else:
			quickfix.StringField.__init__(self, 2636, data)

class EncodedMiscFeeSubTypeDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2637)
		else:
			quickfix.IntField.__init__(self, 2637, data)

class EncodedMiscFeeSubTypeDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2638)
		else:
			quickfix.StringField.__init__(self, 2638, data)

class CollateralAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2632)
		else:
			quickfix.IntField.__init__(self, 2632, data)

class PositionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2618)
		else:
			quickfix.StringField.__init__(self, 2618, data)

class PaymentDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43087)
		else:
			quickfix.StringField.__init__(self, 43087, data)

class NoCommissions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2639)
		else:
			quickfix.IntField.__init__(self, 2639, data)

class CommissionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2640)
		else:
			quickfix.DoubleField.__init__(self, 2640, data)

class CommissionAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2641)
		else:
			quickfix.IntField.__init__(self, 2641, data)

class CommissionBasis(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2642)
		else:
			quickfix.CharField.__init__(self, 2642, data)

class CommissionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2643)
		else:
			quickfix.StringField.__init__(self, 2643, data)

class CommissionUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2644)
		else:
			quickfix.StringField.__init__(self, 2644, data)

class CommissionUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2645)
		else:
			quickfix.StringField.__init__(self, 2645, data)

class CommissionRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2646)
		else:
			quickfix.DoubleField.__init__(self, 2646, data)

class CommissionSharedIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2647)
		else:
			quickfix.BoolField.__init__(self, 2647, data)

class CommissionAmountShared(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2648)
		else:
			quickfix.DoubleField.__init__(self, 2648, data)

class CommissionLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2649)
		else:
			quickfix.StringField.__init__(self, 2649, data)

class CommissionDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2650)
		else:
			quickfix.StringField.__init__(self, 2650, data)

class EncodedCommissionDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2651)
		else:
			quickfix.IntField.__init__(self, 2651, data)

class EncodedCommissionDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2652)
		else:
			quickfix.StringField.__init__(self, 2652, data)

class NoAllocCommissions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2653)
		else:
			quickfix.IntField.__init__(self, 2653, data)

class AllocCommissionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2654)
		else:
			quickfix.DoubleField.__init__(self, 2654, data)

class AllocCommissionAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2655)
		else:
			quickfix.IntField.__init__(self, 2655, data)

class AllocCommissionBasis(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2656)
		else:
			quickfix.CharField.__init__(self, 2656, data)

class AllocCommissionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2657)
		else:
			quickfix.StringField.__init__(self, 2657, data)

class AllocCommissionUnitOfMeasure(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2658)
		else:
			quickfix.StringField.__init__(self, 2658, data)

class AllocCommissionUnitOfMeasureCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2659)
		else:
			quickfix.StringField.__init__(self, 2659, data)

class AllocCommissionRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2660)
		else:
			quickfix.DoubleField.__init__(self, 2660, data)

class AllocCommissionSharedIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2661)
		else:
			quickfix.BoolField.__init__(self, 2661, data)

class AllocCommissionAmountShared(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2662)
		else:
			quickfix.DoubleField.__init__(self, 2662, data)

class AllocCommissionLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2663)
		else:
			quickfix.StringField.__init__(self, 2663, data)

class AllocCommissionDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2664)
		else:
			quickfix.StringField.__init__(self, 2664, data)

class EncodedAllocCommissionDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2665)
		else:
			quickfix.IntField.__init__(self, 2665, data)

class EncodedAllocCommissionDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2666)
		else:
			quickfix.StringField.__init__(self, 2666, data)

class DeltaCrossed(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2596)
		else:
			quickfix.BoolField.__init__(self, 2596, data)

class CashSettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42207)
		else:
			quickfix.StringField.__init__(self, 42207, data)

class CashSettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42208)
		else:
			quickfix.IntField.__init__(self, 42208, data)

class CashSettlDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42209)
		else:
			quickfix.IntField.__init__(self, 42209, data)

class CashSettlDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42210)
		else:
			quickfix.IntField.__init__(self, 42210, data)

class CashSettlDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42211)
		else:
			quickfix.StringField.__init__(self, 42211, data)

class CashSettlDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42212)
		else:
			quickfix.IntField.__init__(self, 42212, data)

class CashSettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42213)
		else:
			quickfix.StringField.__init__(self, 42213, data)

class NoCashSettlDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42214)
		else:
			quickfix.IntField.__init__(self, 42214, data)

class CashSettlDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42215)
		else:
			quickfix.StringField.__init__(self, 42215, data)

class CashSettlPriceSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42216)
		else:
			quickfix.StringField.__init__(self, 42216, data)

class CashSettlPriceDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42217)
		else:
			quickfix.IntField.__init__(self, 42217, data)

class ComplexEventFuturesPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2597)
		else:
			quickfix.BoolField.__init__(self, 2597, data)

class ComplexEventOptionsPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2598)
		else:
			quickfix.BoolField.__init__(self, 2598, data)

class ComplexEventPVFinalPriceElectionFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2599)
		else:
			quickfix.IntField.__init__(self, 2599, data)

class DividendFloatingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42218)
		else:
			quickfix.StringField.__init__(self, 42218, data)

class DividendFloatingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42219)
		else:
			quickfix.IntField.__init__(self, 42219, data)

class DividendFloatingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42220)
		else:
			quickfix.StringField.__init__(self, 42220, data)

class DividendFloatingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42221)
		else:
			quickfix.DoubleField.__init__(self, 42221, data)

class DividendFloatingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42222)
		else:
			quickfix.DoubleField.__init__(self, 42222, data)

class DividendFloatingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42223)
		else:
			quickfix.IntField.__init__(self, 42223, data)

class DividendFloatingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42224)
		else:
			quickfix.IntField.__init__(self, 42224, data)

class DividendCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42225)
		else:
			quickfix.DoubleField.__init__(self, 42225, data)

class DividendCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42226)
		else:
			quickfix.IntField.__init__(self, 42226, data)

class DividendCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42227)
		else:
			quickfix.IntField.__init__(self, 42227, data)

class DividendFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42228)
		else:
			quickfix.DoubleField.__init__(self, 42228, data)

class DividendFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42229)
		else:
			quickfix.IntField.__init__(self, 42229, data)

class DividendFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42230)
		else:
			quickfix.IntField.__init__(self, 42230, data)

class DividendInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42231)
		else:
			quickfix.DoubleField.__init__(self, 42231, data)

class DividendFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42232)
		else:
			quickfix.CharField.__init__(self, 42232, data)

class DividendFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42233)
		else:
			quickfix.IntField.__init__(self, 42233, data)

class DividendAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42234)
		else:
			quickfix.IntField.__init__(self, 42234, data)

class DividendNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42235)
		else:
			quickfix.IntField.__init__(self, 42235, data)

class NoDividendAccrualPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42236)
		else:
			quickfix.IntField.__init__(self, 42236, data)

class DividendAccrualPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42237)
		else:
			quickfix.StringField.__init__(self, 42237, data)

class DividendAccrualPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42238)
		else:
			quickfix.IntField.__init__(self, 42238, data)

class DividendAccrualPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42239)
		else:
			quickfix.IntField.__init__(self, 42239, data)

class DividendAccrualPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42240)
		else:
			quickfix.StringField.__init__(self, 42240, data)

class DividendAccrualPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42241)
		else:
			quickfix.IntField.__init__(self, 42241, data)

class DividendAccrualPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42242)
		else:
			quickfix.StringField.__init__(self, 42242, data)

class DividendAccrualPaymeentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42243)
		else:
			quickfix.IntField.__init__(self, 42243, data)

class DividendAccrualPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42244)
		else:
			quickfix.StringField.__init__(self, 42244, data)

class DividendReinvestmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42245)
		else:
			quickfix.BoolField.__init__(self, 42245, data)

class DividendEntitlementEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42246)
		else:
			quickfix.IntField.__init__(self, 42246, data)

class DividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42247)
		else:
			quickfix.IntField.__init__(self, 42247, data)

class DividendUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42248)
		else:
			quickfix.StringField.__init__(self, 42248, data)

class ExtraordinaryDividendPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42249)
		else:
			quickfix.IntField.__init__(self, 42249, data)

class ExtraordinaryDividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42250)
		else:
			quickfix.IntField.__init__(self, 42250, data)

class ExtraordinaryDividendCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42251)
		else:
			quickfix.StringField.__init__(self, 42251, data)

class ExtraordinaryDividendDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42252)
		else:
			quickfix.StringField.__init__(self, 42252, data)

class DividendAccrualFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42253)
		else:
			quickfix.DoubleField.__init__(self, 42253, data)

class DividendCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42254)
		else:
			quickfix.IntField.__init__(self, 42254, data)

class DividendNumOfIndexUnits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42255)
		else:
			quickfix.IntField.__init__(self, 42255, data)

class DividendCashPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42256)
		else:
			quickfix.DoubleField.__init__(self, 42256, data)

class DividendCashEquivalentPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42257)
		else:
			quickfix.DoubleField.__init__(self, 42257, data)

class NonCashDividendTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42258)
		else:
			quickfix.IntField.__init__(self, 42258, data)

class DividendComposition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42259)
		else:
			quickfix.IntField.__init__(self, 42259, data)

class SpecialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42260)
		else:
			quickfix.BoolField.__init__(self, 42260, data)

class MaterialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42261)
		else:
			quickfix.BoolField.__init__(self, 42261, data)

class OptionsExchangeDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42262)
		else:
			quickfix.BoolField.__init__(self, 42262, data)

class AdditionalDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42263)
		else:
			quickfix.BoolField.__init__(self, 42263, data)

class AllDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42264)
		else:
			quickfix.BoolField.__init__(self, 42264, data)

class DividendFXTriggerDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42265)
		else:
			quickfix.IntField.__init__(self, 42265, data)

class DividendFXTriggerDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42266)
		else:
			quickfix.IntField.__init__(self, 42266, data)

class DividendFXTriggerDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42267)
		else:
			quickfix.StringField.__init__(self, 42267, data)

class DividendFXTriggerDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42268)
		else:
			quickfix.IntField.__init__(self, 42268, data)

class DividendFXTriggerDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42269)
		else:
			quickfix.StringField.__init__(self, 42269, data)

class DividendFXTriggerDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42270)
		else:
			quickfix.IntField.__init__(self, 42270, data)

class DividendFXTriggerDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42271)
		else:
			quickfix.StringField.__init__(self, 42271, data)

class NoDividendFXTriggerDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42272)
		else:
			quickfix.IntField.__init__(self, 42272, data)

class DividendFXTriggerDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42273)
		else:
			quickfix.StringField.__init__(self, 42273, data)

class NoDividendPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42274)
		else:
			quickfix.IntField.__init__(self, 42274, data)

class DividendPeriodSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42275)
		else:
			quickfix.IntField.__init__(self, 42275, data)

class DividendPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42276)
		else:
			quickfix.StringField.__init__(self, 42276, data)

class DividendPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42277)
		else:
			quickfix.StringField.__init__(self, 42277, data)

class DividendPeriodUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42278)
		else:
			quickfix.StringField.__init__(self, 42278, data)

class DividendPeriodStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42279)
		else:
			quickfix.DoubleField.__init__(self, 42279, data)

class DividendPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42280)
		else:
			quickfix.IntField.__init__(self, 42280, data)

class DividendPeriodValuationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42281)
		else:
			quickfix.StringField.__init__(self, 42281, data)

class DividendPeriodValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42282)
		else:
			quickfix.IntField.__init__(self, 42282, data)

class DividendPeriodValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42283)
		else:
			quickfix.IntField.__init__(self, 42283, data)

class DividendPeriodValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42284)
		else:
			quickfix.StringField.__init__(self, 42284, data)

class DividendPeriodValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42285)
		else:
			quickfix.IntField.__init__(self, 42285, data)

class DividendPeriodValuationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42286)
		else:
			quickfix.StringField.__init__(self, 42286, data)

class DividendPeriodPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42287)
		else:
			quickfix.StringField.__init__(self, 42287, data)

class DividendPeriodPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42288)
		else:
			quickfix.IntField.__init__(self, 42288, data)

class DividendPeriodPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42289)
		else:
			quickfix.IntField.__init__(self, 42289, data)

class DividendPeriodPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42290)
		else:
			quickfix.StringField.__init__(self, 42290, data)

class DividendPeriodPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42291)
		else:
			quickfix.IntField.__init__(self, 42291, data)

class DividendPeriodPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42292)
		else:
			quickfix.StringField.__init__(self, 42292, data)

class DividendPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42293)
		else:
			quickfix.StringField.__init__(self, 42293, data)

class NoDividendPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42294)
		else:
			quickfix.IntField.__init__(self, 42294, data)

class DividendPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42295)
		else:
			quickfix.StringField.__init__(self, 42295, data)

class NoExtraordinaryEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42296)
		else:
			quickfix.IntField.__init__(self, 42296, data)

class ExtraordinaryEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42297)
		else:
			quickfix.StringField.__init__(self, 42297, data)

class ExtraordinaryEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42298)
		else:
			quickfix.StringField.__init__(self, 42298, data)

class StrikeIndexCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2600)
		else:
			quickfix.StringField.__init__(self, 2600, data)

class StrikeIndexQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2601)
		else:
			quickfix.IntField.__init__(self, 2601, data)

class ExtraordinaryEventAdjustmentMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2602)
		else:
			quickfix.IntField.__init__(self, 2602, data)

class ExchangeLookAlike(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2603)
		else:
			quickfix.BoolField.__init__(self, 2603, data)

class LegStrikeIndexCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2604)
		else:
			quickfix.StringField.__init__(self, 2604, data)

class LegStrikeIndexQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2605)
		else:
			quickfix.IntField.__init__(self, 2605, data)

class LegExtraordinaryEventAdjustmentMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2606)
		else:
			quickfix.IntField.__init__(self, 2606, data)

class LegExchangeLookAlike(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2607)
		else:
			quickfix.BoolField.__init__(self, 2607, data)

class LegCashSettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42299)
		else:
			quickfix.StringField.__init__(self, 42299, data)

class LegCashSettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42300)
		else:
			quickfix.IntField.__init__(self, 42300, data)

class LegCashSettlDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42301)
		else:
			quickfix.IntField.__init__(self, 42301, data)

class LegCashSettlDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42302)
		else:
			quickfix.IntField.__init__(self, 42302, data)

class LegCashSettlDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42303)
		else:
			quickfix.StringField.__init__(self, 42303, data)

class LegCashSettlDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42304)
		else:
			quickfix.IntField.__init__(self, 42304, data)

class LegCashSettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42305)
		else:
			quickfix.StringField.__init__(self, 42305, data)

class NoLegCashSettlDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42306)
		else:
			quickfix.IntField.__init__(self, 42306, data)

class LegCashSettlDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42307)
		else:
			quickfix.StringField.__init__(self, 42307, data)

class LegCashSettlPriceSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42308)
		else:
			quickfix.StringField.__init__(self, 42308, data)

class LegCashSettlPriceDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42309)
		else:
			quickfix.IntField.__init__(self, 42309, data)

class LegComplexEventFuturesPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2608)
		else:
			quickfix.BoolField.__init__(self, 2608, data)

class LegComplexEventOptionsPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2609)
		else:
			quickfix.BoolField.__init__(self, 2609, data)

class LegComplexEventPVFinalPriceElectionFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2610)
		else:
			quickfix.IntField.__init__(self, 2610, data)

class NoLegDividendAccrualPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42310)
		else:
			quickfix.IntField.__init__(self, 42310, data)

class LegDividendAccrualPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42311)
		else:
			quickfix.StringField.__init__(self, 42311, data)

class LegDividendFloatingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42312)
		else:
			quickfix.StringField.__init__(self, 42312, data)

class LegDividendFloatingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42313)
		else:
			quickfix.IntField.__init__(self, 42313, data)

class LegDividendFloatingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42314)
		else:
			quickfix.StringField.__init__(self, 42314, data)

class LegDividendFloatingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42315)
		else:
			quickfix.DoubleField.__init__(self, 42315, data)

class LegDividendFloatingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42316)
		else:
			quickfix.DoubleField.__init__(self, 42316, data)

class LegDividendFloatingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42317)
		else:
			quickfix.IntField.__init__(self, 42317, data)

class LegDividendFloatingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42318)
		else:
			quickfix.IntField.__init__(self, 42318, data)

class LegDividendCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42319)
		else:
			quickfix.DoubleField.__init__(self, 42319, data)

class LegDividendCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42320)
		else:
			quickfix.IntField.__init__(self, 42320, data)

class LegDividendCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42321)
		else:
			quickfix.IntField.__init__(self, 42321, data)

class LegDividendFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42322)
		else:
			quickfix.DoubleField.__init__(self, 42322, data)

class LegDividendFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42323)
		else:
			quickfix.IntField.__init__(self, 42323, data)

class LegDividendFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42324)
		else:
			quickfix.IntField.__init__(self, 42324, data)

class LegDividendInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42325)
		else:
			quickfix.DoubleField.__init__(self, 42325, data)

class LegDividendFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42326)
		else:
			quickfix.CharField.__init__(self, 42326, data)

class LegDividendFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42327)
		else:
			quickfix.IntField.__init__(self, 42327, data)

class LegDividendAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42328)
		else:
			quickfix.IntField.__init__(self, 42328, data)

class LegDividendNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42329)
		else:
			quickfix.IntField.__init__(self, 42329, data)

class LegDividendAccrualPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42330)
		else:
			quickfix.IntField.__init__(self, 42330, data)

class LegDividendAccrualPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42331)
		else:
			quickfix.IntField.__init__(self, 42331, data)

class LegDividendAccrualPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42332)
		else:
			quickfix.StringField.__init__(self, 42332, data)

class LegDividendAccrualPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42333)
		else:
			quickfix.IntField.__init__(self, 42333, data)

class LegDividendAccrualPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42334)
		else:
			quickfix.StringField.__init__(self, 42334, data)

class LegDividendAccrualPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42335)
		else:
			quickfix.IntField.__init__(self, 42335, data)

class LegDividendAccrualPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42336)
		else:
			quickfix.StringField.__init__(self, 42336, data)

class LegDividendReinvestmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42337)
		else:
			quickfix.BoolField.__init__(self, 42337, data)

class LegDividendEntitlementEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42338)
		else:
			quickfix.IntField.__init__(self, 42338, data)

class LegDividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42339)
		else:
			quickfix.IntField.__init__(self, 42339, data)

class LegDividendUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42340)
		else:
			quickfix.StringField.__init__(self, 42340, data)

class LegExtraordinaryDividendPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42341)
		else:
			quickfix.IntField.__init__(self, 42341, data)

class LegExtraordinaryDividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42342)
		else:
			quickfix.IntField.__init__(self, 42342, data)

class LegExtraordinaryDividendCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42343)
		else:
			quickfix.StringField.__init__(self, 42343, data)

class LegExtraordinaryDividendDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42344)
		else:
			quickfix.StringField.__init__(self, 42344, data)

class LegDividendAccrualFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42345)
		else:
			quickfix.DoubleField.__init__(self, 42345, data)

class LegDividendCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42346)
		else:
			quickfix.IntField.__init__(self, 42346, data)

class LegDividendNumOfIndexUnits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42347)
		else:
			quickfix.IntField.__init__(self, 42347, data)

class LegDividendCashPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42348)
		else:
			quickfix.DoubleField.__init__(self, 42348, data)

class LegDividendCashEquivalentPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42349)
		else:
			quickfix.DoubleField.__init__(self, 42349, data)

class LegNonCashDividendTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42350)
		else:
			quickfix.IntField.__init__(self, 42350, data)

class LegDividendComposition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42351)
		else:
			quickfix.IntField.__init__(self, 42351, data)

class LegSpecialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42352)
		else:
			quickfix.BoolField.__init__(self, 42352, data)

class LegMaterialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42353)
		else:
			quickfix.BoolField.__init__(self, 42353, data)

class LegOptionsExchangeDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42354)
		else:
			quickfix.BoolField.__init__(self, 42354, data)

class LegAdditionalDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42355)
		else:
			quickfix.BoolField.__init__(self, 42355, data)

class LegAllDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42356)
		else:
			quickfix.BoolField.__init__(self, 42356, data)

class LegDividendFXTriggerDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42357)
		else:
			quickfix.IntField.__init__(self, 42357, data)

class LegDividendFXTriggerDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42358)
		else:
			quickfix.IntField.__init__(self, 42358, data)

class LegDividendFXTriggerDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42359)
		else:
			quickfix.StringField.__init__(self, 42359, data)

class LegDividendFXTriggerDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42360)
		else:
			quickfix.IntField.__init__(self, 42360, data)

class LegDividendFXTriggerDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42361)
		else:
			quickfix.StringField.__init__(self, 42361, data)

class LegDividendFXTriggerDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42362)
		else:
			quickfix.IntField.__init__(self, 42362, data)

class LegDividendFXTriggerDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42363)
		else:
			quickfix.StringField.__init__(self, 42363, data)

class NoLegDividendFXTriggerDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42364)
		else:
			quickfix.IntField.__init__(self, 42364, data)

class LegDividendFXTriggerDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42365)
		else:
			quickfix.StringField.__init__(self, 42365, data)

class NoLegDividendPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42366)
		else:
			quickfix.IntField.__init__(self, 42366, data)

class LegDividendPeriodSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42367)
		else:
			quickfix.IntField.__init__(self, 42367, data)

class LegDividendPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42368)
		else:
			quickfix.StringField.__init__(self, 42368, data)

class LegDividendPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42369)
		else:
			quickfix.StringField.__init__(self, 42369, data)

class LegDividendPeriodUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42370)
		else:
			quickfix.StringField.__init__(self, 42370, data)

class LegDividendPeriodStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42371)
		else:
			quickfix.DoubleField.__init__(self, 42371, data)

class LegDividendPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42372)
		else:
			quickfix.IntField.__init__(self, 42372, data)

class LegDividendPeriodValuationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42373)
		else:
			quickfix.StringField.__init__(self, 42373, data)

class LegDividendPeriodValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42374)
		else:
			quickfix.IntField.__init__(self, 42374, data)

class LegDividendPeriodValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42375)
		else:
			quickfix.IntField.__init__(self, 42375, data)

class LegDividendPeriodValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42376)
		else:
			quickfix.StringField.__init__(self, 42376, data)

class LegDividendPeriodValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42377)
		else:
			quickfix.IntField.__init__(self, 42377, data)

class LegDividendPeriodValuationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42378)
		else:
			quickfix.StringField.__init__(self, 42378, data)

class LegDividendPeriodPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42379)
		else:
			quickfix.StringField.__init__(self, 42379, data)

class LegDividendPeriodPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42380)
		else:
			quickfix.IntField.__init__(self, 42380, data)

class LegDividendPeriodPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42381)
		else:
			quickfix.IntField.__init__(self, 42381, data)

class LegDividendPeriodPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42382)
		else:
			quickfix.StringField.__init__(self, 42382, data)

class LegDividendPeriodPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42383)
		else:
			quickfix.IntField.__init__(self, 42383, data)

class LegDividendPeriodPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42384)
		else:
			quickfix.StringField.__init__(self, 42384, data)

class LegDividendPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42385)
		else:
			quickfix.StringField.__init__(self, 42385, data)

class NoLegDividendPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42386)
		else:
			quickfix.IntField.__init__(self, 42386, data)

class LegDividendPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42387)
		else:
			quickfix.StringField.__init__(self, 42387, data)

class NoLegExtraordinaryEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42388)
		else:
			quickfix.IntField.__init__(self, 42388, data)

class LegExtraordinaryEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42389)
		else:
			quickfix.StringField.__init__(self, 42389, data)

class LegExtraordinaryEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42390)
		else:
			quickfix.StringField.__init__(self, 42390, data)

class LegSettlMethodElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42391)
		else:
			quickfix.IntField.__init__(self, 42391, data)

class LegMakeWholeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42392)
		else:
			quickfix.StringField.__init__(self, 42392, data)

class LegMakeWholeAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42393)
		else:
			quickfix.DoubleField.__init__(self, 42393, data)

class LegMakeWholeBenchmarkCurveName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42394)
		else:
			quickfix.StringField.__init__(self, 42394, data)

class LegMakeWholeBenchmarkCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42395)
		else:
			quickfix.StringField.__init__(self, 42395, data)

class LegMakeWholeRecallSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42396)
		else:
			quickfix.DoubleField.__init__(self, 42396, data)

class LegMakeWholeBenchmarkQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42397)
		else:
			quickfix.IntField.__init__(self, 42397, data)

class LegMakeWholeInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42398)
		else:
			quickfix.IntField.__init__(self, 42398, data)

class LegPaymentStreamCashSettlIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42399)
		else:
			quickfix.BoolField.__init__(self, 42399, data)

class LegPaymentStreamCompoundingXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42400)
		else:
			quickfix.StringField.__init__(self, 42400, data)

class LegPaymentStreamCompoundingSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42401)
		else:
			quickfix.DoubleField.__init__(self, 42401, data)

class LegPaymentStreamInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42402)
		else:
			quickfix.IntField.__init__(self, 42402, data)

class LegPaymentStreamInterpolationPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42403)
		else:
			quickfix.IntField.__init__(self, 42403, data)

class LegPaymentStreamCompoundingFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42404)
		else:
			quickfix.DoubleField.__init__(self, 42404, data)

class NoLegPaymentStreamCompoundingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42405)
		else:
			quickfix.IntField.__init__(self, 42405, data)

class LegPaymentStreamCompoundingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42406)
		else:
			quickfix.StringField.__init__(self, 42406, data)

class LegPaymentStreamCompoundingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42407)
		else:
			quickfix.IntField.__init__(self, 42407, data)

class LegPaymentStreamCompoundingDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42408)
		else:
			quickfix.IntField.__init__(self, 42408, data)

class LegPaymentStreamCompoundingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42409)
		else:
			quickfix.IntField.__init__(self, 42409, data)

class LegPaymentStreamCompoundingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42410)
		else:
			quickfix.IntField.__init__(self, 42410, data)

class LegPaymentStreamCompoundingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42411)
		else:
			quickfix.StringField.__init__(self, 42411, data)

class LegPaymentStreamCompoundingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42412)
		else:
			quickfix.IntField.__init__(self, 42412, data)

class LegPaymentStreamCompoundingPeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42413)
		else:
			quickfix.IntField.__init__(self, 42413, data)

class LegPaymentStreamCompoundingFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42414)
		else:
			quickfix.IntField.__init__(self, 42414, data)

class LegPaymentStreamCompoundingFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42415)
		else:
			quickfix.StringField.__init__(self, 42415, data)

class LegPaymentStreamCompoundingRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42416)
		else:
			quickfix.StringField.__init__(self, 42416, data)

class LegPaymentStreamBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42417)
		else:
			quickfix.StringField.__init__(self, 42417, data)

class LegPaymentStreamBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42418)
		else:
			quickfix.StringField.__init__(self, 42418, data)

class NoLegPaymentStreamCompoundingDatesBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42419)
		else:
			quickfix.IntField.__init__(self, 42419, data)

class LegPaymentStreamCompoundingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42420)
		else:
			quickfix.StringField.__init__(self, 42420, data)

class LegPaymentStreamCompoundingEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42421)
		else:
			quickfix.StringField.__init__(self, 42421, data)

class LegPaymentStreamCompoundingEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42422)
		else:
			quickfix.IntField.__init__(self, 42422, data)

class LegPaymentStreamCompoundingEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42423)
		else:
			quickfix.IntField.__init__(self, 42423, data)

class LegPaymentStreamCompoundingEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42424)
		else:
			quickfix.StringField.__init__(self, 42424, data)

class LegPaymentStreamCompoundingEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42425)
		else:
			quickfix.IntField.__init__(self, 42425, data)

class LegPaymentStreamCompoundingEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42426)
		else:
			quickfix.StringField.__init__(self, 42426, data)

class LegPaymentStreamCompoundingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42427)
		else:
			quickfix.StringField.__init__(self, 42427, data)

class LegPaymentStreamCompoundingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42428)
		else:
			quickfix.IntField.__init__(self, 42428, data)

class LegPaymentStreamCompoundingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42429)
		else:
			quickfix.StringField.__init__(self, 42429, data)

class LegPaymentStreamCompoundingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42430)
		else:
			quickfix.DoubleField.__init__(self, 42430, data)

class LegPaymentStreamCompoundingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42431)
		else:
			quickfix.DoubleField.__init__(self, 42431, data)

class LegPaymentStreamCompoundingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42432)
		else:
			quickfix.IntField.__init__(self, 42432, data)

class LegPaymentStreamCompoundingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42433)
		else:
			quickfix.IntField.__init__(self, 42433, data)

class LegPaymentStreamCompoundingCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42434)
		else:
			quickfix.DoubleField.__init__(self, 42434, data)

class LegPaymentStreamCompoundingCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42435)
		else:
			quickfix.IntField.__init__(self, 42435, data)

class LegPaymentStreamCompoundingCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42436)
		else:
			quickfix.IntField.__init__(self, 42436, data)

class LegPaymentStreamCompoundingFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42437)
		else:
			quickfix.DoubleField.__init__(self, 42437, data)

class LegPaymentStreamCompoundingFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42438)
		else:
			quickfix.IntField.__init__(self, 42438, data)

class LegPaymentStreamCompoundingFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42439)
		else:
			quickfix.IntField.__init__(self, 42439, data)

class LegPaymentStreamCompoundingInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42440)
		else:
			quickfix.DoubleField.__init__(self, 42440, data)

class LegPaymentStreamCompoundingFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42441)
		else:
			quickfix.CharField.__init__(self, 42441, data)

class LegPaymentStreamCompoundingFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42442)
		else:
			quickfix.IntField.__init__(self, 42442, data)

class LegPaymentStreamCompoundingAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42443)
		else:
			quickfix.IntField.__init__(self, 42443, data)

class LegPaymentStreamCompoundingNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42444)
		else:
			quickfix.IntField.__init__(self, 42444, data)

class LegPaymentStreamCompoundingStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42445)
		else:
			quickfix.StringField.__init__(self, 42445, data)

class LegPaymentStreamCompoundingStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42446)
		else:
			quickfix.IntField.__init__(self, 42446, data)

class LegPaymentStreamCompoundingStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42447)
		else:
			quickfix.IntField.__init__(self, 42447, data)

class LegPaymentStreamCompoundingStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42448)
		else:
			quickfix.StringField.__init__(self, 42448, data)

class LegPaymentStreamCompoundingStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42449)
		else:
			quickfix.IntField.__init__(self, 42449, data)

class LegPaymentStreamCompoundingStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42450)
		else:
			quickfix.StringField.__init__(self, 42450, data)

class LegPaymentStreamFormulaImageLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42451)
		else:
			quickfix.IntField.__init__(self, 42451, data)

class LegPaymentStreamFormulaImage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42452)
		else:
			quickfix.StringField.__init__(self, 42452, data)

class LegPaymentStreamFinalPricePaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42453)
		else:
			quickfix.StringField.__init__(self, 42453, data)

class LegPaymentStreamFinalPricePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42454)
		else:
			quickfix.IntField.__init__(self, 42454, data)

class LegPaymentStreamFinalPricePaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42455)
		else:
			quickfix.IntField.__init__(self, 42455, data)

class LegPaymentStreamFinalPricePaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42456)
		else:
			quickfix.StringField.__init__(self, 42456, data)

class LegPaymentStreamFinalPricePaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42457)
		else:
			quickfix.IntField.__init__(self, 42457, data)

class LegPaymentStreamFinalPricePaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42458)
		else:
			quickfix.StringField.__init__(self, 42458, data)

class NoLegPaymentStreamFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42459)
		else:
			quickfix.IntField.__init__(self, 42459, data)

class LegPaymentStreamFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42460)
		else:
			quickfix.StringField.__init__(self, 42460, data)

class LegPaymentStreamFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42461)
		else:
			quickfix.IntField.__init__(self, 42461, data)

class LegPaymentStreamFirstObservationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42462)
		else:
			quickfix.StringField.__init__(self, 42462, data)

class LegPaymentStreamFirstObservationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42463)
		else:
			quickfix.IntField.__init__(self, 42463, data)

class LegPaymentStreamFirstObservationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42464)
		else:
			quickfix.IntField.__init__(self, 42464, data)

class LegPaymentStreamFirstObservationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42465)
		else:
			quickfix.StringField.__init__(self, 42465, data)

class LegPaymentStreamUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42466)
		else:
			quickfix.StringField.__init__(self, 42466, data)

class LegReturnRateNotionalReset(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42467)
		else:
			quickfix.BoolField.__init__(self, 42467, data)

class LegPaymentStreamLinkInitialLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42468)
		else:
			quickfix.DoubleField.__init__(self, 42468, data)

class LegPaymentStreamLinkClosingLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42469)
		else:
			quickfix.BoolField.__init__(self, 42469, data)

class LegPaymentStreamLinkExpiringLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42470)
		else:
			quickfix.BoolField.__init__(self, 42470, data)

class LegPaymentStreamLinkEstimatedTradingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42471)
		else:
			quickfix.IntField.__init__(self, 42471, data)

class LegPaymentStreamLinkStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42472)
		else:
			quickfix.DoubleField.__init__(self, 42472, data)

class LegPaymentStreamLinkStrikePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42473)
		else:
			quickfix.IntField.__init__(self, 42473, data)

class LegPaymentStreamLinkMaximumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42474)
		else:
			quickfix.DoubleField.__init__(self, 42474, data)

class LegPaymentStreamLinkMinimumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42475)
		else:
			quickfix.DoubleField.__init__(self, 42475, data)

class LegPaymentStreamLinkNumberOfDataSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42476)
		else:
			quickfix.IntField.__init__(self, 42476, data)

class LegPaymentStreamVarianceUnadjustedCap(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42477)
		else:
			quickfix.DoubleField.__init__(self, 42477, data)

class LegPaymentStreamRealizedVarianceMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42478)
		else:
			quickfix.IntField.__init__(self, 42478, data)

class LegPaymentStreamDaysAdjustmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42479)
		else:
			quickfix.BoolField.__init__(self, 42479, data)

class LegPaymentStreamNearestExchangeContractRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42480)
		else:
			quickfix.StringField.__init__(self, 42480, data)

class LegPaymentStreamVegaNotionalAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42481)
		else:
			quickfix.DoubleField.__init__(self, 42481, data)

class LegPaymentStreamFormulaCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42482)
		else:
			quickfix.StringField.__init__(self, 42482, data)

class LegPaymentStreamFormulaCurrencyDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42483)
		else:
			quickfix.StringField.__init__(self, 42483, data)

class LegPaymentStreamFormulaReferenceAmount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42484)
		else:
			quickfix.IntField.__init__(self, 42484, data)

class NoLegPaymentStreamFormulas(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42485)
		else:
			quickfix.IntField.__init__(self, 42485, data)

class LegPaymentStreamFormula(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42486)
		else:
			quickfix.StringField.__init__(self, 42486, data)

class LegPaymentStreamFormulaDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42487)
		else:
			quickfix.StringField.__init__(self, 42487, data)

class LegPaymentStubEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42488)
		else:
			quickfix.StringField.__init__(self, 42488, data)

class LegPaymentStubEndDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42489)
		else:
			quickfix.IntField.__init__(self, 42489, data)

class LegPaymentStubEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42490)
		else:
			quickfix.IntField.__init__(self, 42490, data)

class LegPaymentStubEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42491)
		else:
			quickfix.IntField.__init__(self, 42491, data)

class LegPaymentStubEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42492)
		else:
			quickfix.StringField.__init__(self, 42492, data)

class LegPaymentStubEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42493)
		else:
			quickfix.IntField.__init__(self, 42493, data)

class LegPaymentStubEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42494)
		else:
			quickfix.StringField.__init__(self, 42494, data)

class NoLegPaymentStubEndDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42495)
		else:
			quickfix.IntField.__init__(self, 42495, data)

class LegPaymentStubEndDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42496)
		else:
			quickfix.StringField.__init__(self, 42496, data)

class LegPaymentStubStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42497)
		else:
			quickfix.StringField.__init__(self, 42497, data)

class LegPaymentStubStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42498)
		else:
			quickfix.IntField.__init__(self, 42498, data)

class LegPaymentStubStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42499)
		else:
			quickfix.IntField.__init__(self, 42499, data)

class LegPaymentStubStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42500)
		else:
			quickfix.IntField.__init__(self, 42500, data)

class LegPaymentStubStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42501)
		else:
			quickfix.StringField.__init__(self, 42501, data)

class LegPaymentStubStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42502)
		else:
			quickfix.IntField.__init__(self, 42502, data)

class LegPaymentStubStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42503)
		else:
			quickfix.StringField.__init__(self, 42503, data)

class NoLegPaymentStubStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42504)
		else:
			quickfix.IntField.__init__(self, 42504, data)

class LegPaymentStubStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42505)
		else:
			quickfix.StringField.__init__(self, 42505, data)

class LegProvisionBreakFeeElection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42506)
		else:
			quickfix.IntField.__init__(self, 42506, data)

class LegProvisionBreakFeeRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42507)
		else:
			quickfix.DoubleField.__init__(self, 42507, data)

class NoLegReturnRateDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42508)
		else:
			quickfix.IntField.__init__(self, 42508, data)

class LegReturnRateDateMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42509)
		else:
			quickfix.IntField.__init__(self, 42509, data)

class LegReturnRateValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42510)
		else:
			quickfix.IntField.__init__(self, 42510, data)

class LegReturnRateValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42511)
		else:
			quickfix.IntField.__init__(self, 42511, data)

class LegReturnRateValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42512)
		else:
			quickfix.StringField.__init__(self, 42512, data)

class LegReturnRateValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42513)
		else:
			quickfix.IntField.__init__(self, 42513, data)

class LegReturnRateValuationStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42514)
		else:
			quickfix.StringField.__init__(self, 42514, data)

class LegReturnRateValuationStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42515)
		else:
			quickfix.IntField.__init__(self, 42515, data)

class LegReturnRateValuationStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42516)
		else:
			quickfix.IntField.__init__(self, 42516, data)

class LegReturnRateValuationStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42517)
		else:
			quickfix.StringField.__init__(self, 42517, data)

class LegReturnRateValuationStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42518)
		else:
			quickfix.IntField.__init__(self, 42518, data)

class LegReturnRateValuationStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42519)
		else:
			quickfix.StringField.__init__(self, 42519, data)

class LegReturnRateValuationEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42520)
		else:
			quickfix.StringField.__init__(self, 42520, data)

class LegReturnRateValuationEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42521)
		else:
			quickfix.IntField.__init__(self, 42521, data)

class LegReturnRateValuationEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42522)
		else:
			quickfix.IntField.__init__(self, 42522, data)

class LegReturnRateValuationEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42523)
		else:
			quickfix.StringField.__init__(self, 42523, data)

class LegReturnRateValuationEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42524)
		else:
			quickfix.IntField.__init__(self, 42524, data)

class LegReturnRateValuationEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42525)
		else:
			quickfix.StringField.__init__(self, 42525, data)

class LegReturnRateValuationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42526)
		else:
			quickfix.IntField.__init__(self, 42526, data)

class LegReturnRateValuationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42527)
		else:
			quickfix.StringField.__init__(self, 42527, data)

class LegReturnRateValuationFrequencyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42528)
		else:
			quickfix.StringField.__init__(self, 42528, data)

class LegReturnRateValuationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42529)
		else:
			quickfix.IntField.__init__(self, 42529, data)

class NoLegReturnRateFXConversions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42530)
		else:
			quickfix.IntField.__init__(self, 42530, data)

class LegReturnRateFXCurrencySymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42531)
		else:
			quickfix.StringField.__init__(self, 42531, data)

class LegReturnRateFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42532)
		else:
			quickfix.DoubleField.__init__(self, 42532, data)

class LegReturnRateFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42533)
		else:
			quickfix.CharField.__init__(self, 42533, data)

class NoLegReturnRates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42534)
		else:
			quickfix.IntField.__init__(self, 42534, data)

class LegReturnRatePriceSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42535)
		else:
			quickfix.IntField.__init__(self, 42535, data)

class LegReturnRateCommissionBasis(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42536)
		else:
			quickfix.CharField.__init__(self, 42536, data)

class LegReturnRateCommissionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42537)
		else:
			quickfix.DoubleField.__init__(self, 42537, data)

class LegReturnRateCommissionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42538)
		else:
			quickfix.StringField.__init__(self, 42538, data)

class LegReturnRateTotalCommissionPerTrade(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42539)
		else:
			quickfix.DoubleField.__init__(self, 42539, data)

class LegReturnRateDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42540)
		else:
			quickfix.StringField.__init__(self, 42540, data)

class LegReturnRateAmountRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42541)
		else:
			quickfix.IntField.__init__(self, 42541, data)

class LegReturnRateQuoteMeasureType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42542)
		else:
			quickfix.StringField.__init__(self, 42542, data)

class LegReturnRateQuoteUnits(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42543)
		else:
			quickfix.StringField.__init__(self, 42543, data)

class LegReturnRateQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42544)
		else:
			quickfix.IntField.__init__(self, 42544, data)

class LegReturnRateQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42545)
		else:
			quickfix.StringField.__init__(self, 42545, data)

class LegReturnRateQuoteCurrencyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42546)
		else:
			quickfix.StringField.__init__(self, 42546, data)

class LegReturnRateQuoteTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42547)
		else:
			quickfix.IntField.__init__(self, 42547, data)

class LegReturnRateQuoteTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42548)
		else:
			quickfix.StringField.__init__(self, 42548, data)

class LegReturnRateQuoteDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42549)
		else:
			quickfix.StringField.__init__(self, 42549, data)

class LegReturnRateQuoteExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42550)
		else:
			quickfix.StringField.__init__(self, 42550, data)

class LegReturnRateQuoteBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42551)
		else:
			quickfix.StringField.__init__(self, 42551, data)

class LegReturnRateQuoteExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42552)
		else:
			quickfix.StringField.__init__(self, 42552, data)

class LegReturnRateQuotePricingModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42553)
		else:
			quickfix.StringField.__init__(self, 42553, data)

class LegReturnRateCashFlowType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42554)
		else:
			quickfix.StringField.__init__(self, 42554, data)

class LegReturnRateValuationTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42555)
		else:
			quickfix.IntField.__init__(self, 42555, data)

class LegReturnRateValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42556)
		else:
			quickfix.StringField.__init__(self, 42556, data)

class LegReturnRateValuationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42557)
		else:
			quickfix.StringField.__init__(self, 42557, data)

class LegReturnRateValuationPriceOption(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42558)
		else:
			quickfix.IntField.__init__(self, 42558, data)

class LegReturnRateFinalPriceFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42559)
		else:
			quickfix.IntField.__init__(self, 42559, data)

class NoLegReturnRateInformationSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42560)
		else:
			quickfix.IntField.__init__(self, 42560, data)

class LegReturnRateInformationSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42561)
		else:
			quickfix.IntField.__init__(self, 42561, data)

class LegReturnRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42562)
		else:
			quickfix.StringField.__init__(self, 42562, data)

class LegReturnRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42563)
		else:
			quickfix.StringField.__init__(self, 42563, data)

class NoLegReturnRatePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42564)
		else:
			quickfix.IntField.__init__(self, 42564, data)

class LegReturnRatePriceBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42565)
		else:
			quickfix.IntField.__init__(self, 42565, data)

class LegReturnRatePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42566)
		else:
			quickfix.DoubleField.__init__(self, 42566, data)

class LegReturnRatePriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42567)
		else:
			quickfix.StringField.__init__(self, 42567, data)

class LegReturnRatePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42568)
		else:
			quickfix.IntField.__init__(self, 42568, data)

class NoLegReturnRateValuationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42569)
		else:
			quickfix.IntField.__init__(self, 42569, data)

class LegReturnRateValuationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42570)
		else:
			quickfix.StringField.__init__(self, 42570, data)

class NoLegReturnRateValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42571)
		else:
			quickfix.IntField.__init__(self, 42571, data)

class LegReturnRateValuationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42572)
		else:
			quickfix.StringField.__init__(self, 42572, data)

class LegReturnRateValuationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42573)
		else:
			quickfix.IntField.__init__(self, 42573, data)

class LegSettlMethodElectionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42574)
		else:
			quickfix.StringField.__init__(self, 42574, data)

class LegSettlMethodElectionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42575)
		else:
			quickfix.IntField.__init__(self, 42575, data)

class LegSettlMethodElectionDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42576)
		else:
			quickfix.IntField.__init__(self, 42576, data)

class LegSettlMethodElectionDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42577)
		else:
			quickfix.IntField.__init__(self, 42577, data)

class LegSettlMethodElectionDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42578)
		else:
			quickfix.StringField.__init__(self, 42578, data)

class LegSettlMethodElectionDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42579)
		else:
			quickfix.IntField.__init__(self, 42579, data)

class LegSettlMethodElectionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42580)
		else:
			quickfix.StringField.__init__(self, 42580, data)

class NoLegSettlMethodElectionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42581)
		else:
			quickfix.IntField.__init__(self, 42581, data)

class LegSettlMethodElectionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42582)
		else:
			quickfix.StringField.__init__(self, 42582, data)

class LegStreamVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42583)
		else:
			quickfix.StringField.__init__(self, 42583, data)

class LegStreamVersionEffectiveDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42584)
		else:
			quickfix.StringField.__init__(self, 42584, data)

class LegStreamNotionalDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42585)
		else:
			quickfix.StringField.__init__(self, 42585, data)

class LegStreamNotionalAdjustments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42586)
		else:
			quickfix.IntField.__init__(self, 42586, data)

class SettlMethodElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42590)
		else:
			quickfix.IntField.__init__(self, 42590, data)

class MakeWholeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42591)
		else:
			quickfix.StringField.__init__(self, 42591, data)

class MakeWholeAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42592)
		else:
			quickfix.DoubleField.__init__(self, 42592, data)

class MakeWholeBenchmarkCurveName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42593)
		else:
			quickfix.StringField.__init__(self, 42593, data)

class MakeWholeBenchmarkCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42594)
		else:
			quickfix.StringField.__init__(self, 42594, data)

class MakeWholeRecallSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42595)
		else:
			quickfix.DoubleField.__init__(self, 42595, data)

class MakeWholeBenchmarkQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42596)
		else:
			quickfix.IntField.__init__(self, 42596, data)

class MakeWholeInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42597)
		else:
			quickfix.IntField.__init__(self, 42597, data)

class PaymentAmountRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42598)
		else:
			quickfix.IntField.__init__(self, 42598, data)

class PaymentAmountDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42599)
		else:
			quickfix.StringField.__init__(self, 42599, data)

class PaymentStreamCashSettlIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42600)
		else:
			quickfix.BoolField.__init__(self, 42600, data)

class PaymentStreamCompoundingXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42601)
		else:
			quickfix.StringField.__init__(self, 42601, data)

class PaymentStreamCompoundingSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42602)
		else:
			quickfix.DoubleField.__init__(self, 42602, data)

class PaymentStreamInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42603)
		else:
			quickfix.IntField.__init__(self, 42603, data)

class PaymentStreamInterpolationPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42604)
		else:
			quickfix.IntField.__init__(self, 42604, data)

class PaymentStreamCompoundingFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42605)
		else:
			quickfix.DoubleField.__init__(self, 42605, data)

class NoPaymentStreamCompoundingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42606)
		else:
			quickfix.IntField.__init__(self, 42606, data)

class PaymentStreamCompoundingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42607)
		else:
			quickfix.StringField.__init__(self, 42607, data)

class PaymentStreamCompoundingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42608)
		else:
			quickfix.IntField.__init__(self, 42608, data)

class PaymentStreamCompoundingDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42609)
		else:
			quickfix.IntField.__init__(self, 42609, data)

class PaymentStreamCompoundingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42610)
		else:
			quickfix.IntField.__init__(self, 42610, data)

class PaymentStreamCompoundingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42611)
		else:
			quickfix.IntField.__init__(self, 42611, data)

class PaymentStreamCompoundingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42612)
		else:
			quickfix.StringField.__init__(self, 42612, data)

class PaymentStreamCompoundingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42613)
		else:
			quickfix.IntField.__init__(self, 42613, data)

class PaymentStreamCompoundingPeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42614)
		else:
			quickfix.IntField.__init__(self, 42614, data)

class PaymentStreamCompoundingFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42615)
		else:
			quickfix.IntField.__init__(self, 42615, data)

class PaymentStreamCompoundingFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42616)
		else:
			quickfix.StringField.__init__(self, 42616, data)

class PaymentStreamCompoundingRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42617)
		else:
			quickfix.StringField.__init__(self, 42617, data)

class PaymentStreamBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42618)
		else:
			quickfix.StringField.__init__(self, 42618, data)

class PaymentStreamBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42619)
		else:
			quickfix.StringField.__init__(self, 42619, data)

class NoPaymentStreamCompoundingDatesBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42620)
		else:
			quickfix.IntField.__init__(self, 42620, data)

class PaymentStreamCompoundingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42621)
		else:
			quickfix.StringField.__init__(self, 42621, data)

class PaymentStreamCompoundingEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42622)
		else:
			quickfix.StringField.__init__(self, 42622, data)

class PaymentStreamCompoundingEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42623)
		else:
			quickfix.IntField.__init__(self, 42623, data)

class PaymentStreamCompoundingEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42624)
		else:
			quickfix.IntField.__init__(self, 42624, data)

class PaymentStreamCompoundingEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42625)
		else:
			quickfix.StringField.__init__(self, 42625, data)

class PaymentStreamCompoundingEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42626)
		else:
			quickfix.IntField.__init__(self, 42626, data)

class PaymentStreamCompoundingEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42627)
		else:
			quickfix.StringField.__init__(self, 42627, data)

class PaymentStreamCompoundingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42628)
		else:
			quickfix.StringField.__init__(self, 42628, data)

class PaymentStreamCompoundingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42629)
		else:
			quickfix.IntField.__init__(self, 42629, data)

class PaymentStreamCompoundingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42630)
		else:
			quickfix.StringField.__init__(self, 42630, data)

class PaymentStreamCompoundingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42631)
		else:
			quickfix.DoubleField.__init__(self, 42631, data)

class PaymentStreamCompoundingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42632)
		else:
			quickfix.DoubleField.__init__(self, 42632, data)

class PaymentStreamCompoundingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42633)
		else:
			quickfix.IntField.__init__(self, 42633, data)

class PaymentStreamCompoundingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42634)
		else:
			quickfix.IntField.__init__(self, 42634, data)

class PaymentStreamCompoundingCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42635)
		else:
			quickfix.DoubleField.__init__(self, 42635, data)

class PaymentStreamCompoundingCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42636)
		else:
			quickfix.IntField.__init__(self, 42636, data)

class PaymentStreamCompoundingCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42637)
		else:
			quickfix.IntField.__init__(self, 42637, data)

class PaymentStreamCompoundingFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42638)
		else:
			quickfix.DoubleField.__init__(self, 42638, data)

class PaymentStreamCompoundingFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42639)
		else:
			quickfix.IntField.__init__(self, 42639, data)

class PaymentStreamCompoundingFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42640)
		else:
			quickfix.IntField.__init__(self, 42640, data)

class PaymentStreamCompoundingInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42641)
		else:
			quickfix.DoubleField.__init__(self, 42641, data)

class PaymentStreamCompoundingFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42642)
		else:
			quickfix.CharField.__init__(self, 42642, data)

class PaymentStreamCompoundingFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42643)
		else:
			quickfix.IntField.__init__(self, 42643, data)

class PaymentStreamCompoundingAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42644)
		else:
			quickfix.IntField.__init__(self, 42644, data)

class PaymentStreamCompoundingNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42645)
		else:
			quickfix.IntField.__init__(self, 42645, data)

class PaymentStreamCompoundingStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42646)
		else:
			quickfix.StringField.__init__(self, 42646, data)

class PaymentStreamCompoundingStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42647)
		else:
			quickfix.IntField.__init__(self, 42647, data)

class PaymentStreamCompoundingStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42648)
		else:
			quickfix.IntField.__init__(self, 42648, data)

class PaymentStreamCompoundingStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42649)
		else:
			quickfix.StringField.__init__(self, 42649, data)

class PaymentStreamCompoundingStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42650)
		else:
			quickfix.IntField.__init__(self, 42650, data)

class PaymentStreamCompoundingStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42651)
		else:
			quickfix.StringField.__init__(self, 42651, data)

class PaymentStreamFormulaImageLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42652)
		else:
			quickfix.IntField.__init__(self, 42652, data)

class PaymentStreamFormulaImage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42653)
		else:
			quickfix.StringField.__init__(self, 42653, data)

class PaymentStreamFinalPricePaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42654)
		else:
			quickfix.StringField.__init__(self, 42654, data)

class PaymentStreamFinalPricePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42655)
		else:
			quickfix.IntField.__init__(self, 42655, data)

class PaymentStreamFinalPricePaymentDateOffsetfPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42656)
		else:
			quickfix.IntField.__init__(self, 42656, data)

class PaymentStreamFinalPricePaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42657)
		else:
			quickfix.StringField.__init__(self, 42657, data)

class PaymentStreamFinalPricePaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42658)
		else:
			quickfix.IntField.__init__(self, 42658, data)

class PaymentStreamFinalPricePaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42659)
		else:
			quickfix.StringField.__init__(self, 42659, data)

class NoPaymentStreamFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42660)
		else:
			quickfix.IntField.__init__(self, 42660, data)

class PaymentStreamFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42661)
		else:
			quickfix.StringField.__init__(self, 42661, data)

class PaymentStreamFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42662)
		else:
			quickfix.IntField.__init__(self, 42662, data)

class PaymentStreamFirstObservationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42663)
		else:
			quickfix.StringField.__init__(self, 42663, data)

class PaymentStreamFirstObservationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42664)
		else:
			quickfix.IntField.__init__(self, 42664, data)

class PaymentStreamFirstObservationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42665)
		else:
			quickfix.IntField.__init__(self, 42665, data)

class PaymentStreamFirstObservationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42666)
		else:
			quickfix.StringField.__init__(self, 42666, data)

class PaymentStreamUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42667)
		else:
			quickfix.StringField.__init__(self, 42667, data)

class ReturnRateNotionalReset(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42668)
		else:
			quickfix.BoolField.__init__(self, 42668, data)

class PaymentStreamLinkInitialLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42669)
		else:
			quickfix.DoubleField.__init__(self, 42669, data)

class PaymentStreamLinkClosingLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42670)
		else:
			quickfix.BoolField.__init__(self, 42670, data)

class PaymentStreamLinkExpiringLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42671)
		else:
			quickfix.BoolField.__init__(self, 42671, data)

class PaymentStreamLinkEstimatedTradingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42672)
		else:
			quickfix.IntField.__init__(self, 42672, data)

class PaymentStreamLinkStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42673)
		else:
			quickfix.DoubleField.__init__(self, 42673, data)

class PaymentStreamLinkStrikePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42674)
		else:
			quickfix.IntField.__init__(self, 42674, data)

class PaymentStreamLinkMaximumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42675)
		else:
			quickfix.DoubleField.__init__(self, 42675, data)

class PaymentStreamLinkMinimumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42676)
		else:
			quickfix.DoubleField.__init__(self, 42676, data)

class PaymentStreamLinkNumberOfDataSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42677)
		else:
			quickfix.IntField.__init__(self, 42677, data)

class PaymentStreamVarianceUnadjustedCap(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42678)
		else:
			quickfix.DoubleField.__init__(self, 42678, data)

class PaymentStreamRealizedVarianceMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42679)
		else:
			quickfix.IntField.__init__(self, 42679, data)

class PaymentStreamDaysAdjustmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42680)
		else:
			quickfix.BoolField.__init__(self, 42680, data)

class PaymentStreamNearestExchangeContractRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42681)
		else:
			quickfix.StringField.__init__(self, 42681, data)

class PaymentStreamVegaNotionalAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42682)
		else:
			quickfix.DoubleField.__init__(self, 42682, data)

class NoPaymentStreamFormulas(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42683)
		else:
			quickfix.IntField.__init__(self, 42683, data)

class PaymentStreamFormula(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42684)
		else:
			quickfix.StringField.__init__(self, 42684, data)

class PaymentStreamFormulaDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42685)
		else:
			quickfix.StringField.__init__(self, 42685, data)

class PaymentStreamFormulaCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42686)
		else:
			quickfix.StringField.__init__(self, 42686, data)

class PaymentStreamFormulaCurrencyDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42687)
		else:
			quickfix.StringField.__init__(self, 42687, data)

class PaymentStreamFormulaReferenceAmount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42688)
		else:
			quickfix.IntField.__init__(self, 42688, data)

class PaymentStubEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42689)
		else:
			quickfix.StringField.__init__(self, 42689, data)

class PaymentStubEndDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42690)
		else:
			quickfix.IntField.__init__(self, 42690, data)

class PaymentStubEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42691)
		else:
			quickfix.IntField.__init__(self, 42691, data)

class PaymentStubEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42692)
		else:
			quickfix.IntField.__init__(self, 42692, data)

class PaymentStubEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42693)
		else:
			quickfix.StringField.__init__(self, 42693, data)

class PaymentStubEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42694)
		else:
			quickfix.IntField.__init__(self, 42694, data)

class PaymentStubEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42695)
		else:
			quickfix.StringField.__init__(self, 42695, data)

class NoPaymentStubEndDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42696)
		else:
			quickfix.IntField.__init__(self, 42696, data)

class PaymentStubEndDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42697)
		else:
			quickfix.StringField.__init__(self, 42697, data)

class PaymentStubStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42698)
		else:
			quickfix.StringField.__init__(self, 42698, data)

class PaymentStubStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42699)
		else:
			quickfix.IntField.__init__(self, 42699, data)

class PaymentStubStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42700)
		else:
			quickfix.IntField.__init__(self, 42700, data)

class PaymentStubStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42701)
		else:
			quickfix.IntField.__init__(self, 42701, data)

class PaymentStubStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42702)
		else:
			quickfix.StringField.__init__(self, 42702, data)

class PaymentStubStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42703)
		else:
			quickfix.IntField.__init__(self, 42703, data)

class PaymentStubStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42704)
		else:
			quickfix.StringField.__init__(self, 42704, data)

class NoPaymentStubStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42705)
		else:
			quickfix.IntField.__init__(self, 42705, data)

class PaymentStubStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42706)
		else:
			quickfix.StringField.__init__(self, 42706, data)

class ProvisionBreakFeeElection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42707)
		else:
			quickfix.IntField.__init__(self, 42707, data)

class ProvisionBreakFeeRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42708)
		else:
			quickfix.DoubleField.__init__(self, 42708, data)

class RelatedToDividendPeriodXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2417)
		else:
			quickfix.StringField.__init__(self, 2417, data)

class NoReturnRateDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42709)
		else:
			quickfix.IntField.__init__(self, 42709, data)

class ReturnRateDateMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42710)
		else:
			quickfix.IntField.__init__(self, 42710, data)

class ReturnRateValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42711)
		else:
			quickfix.IntField.__init__(self, 42711, data)

class ReturnRateValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42712)
		else:
			quickfix.IntField.__init__(self, 42712, data)

class ReturnRateValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42713)
		else:
			quickfix.StringField.__init__(self, 42713, data)

class ReturnRateValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42714)
		else:
			quickfix.IntField.__init__(self, 42714, data)

class ReturnRateValuationStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42715)
		else:
			quickfix.StringField.__init__(self, 42715, data)

class ReturnRateValuationStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42716)
		else:
			quickfix.IntField.__init__(self, 42716, data)

class ReturnRateValuationStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42717)
		else:
			quickfix.IntField.__init__(self, 42717, data)

class ReturnRateValuationStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42718)
		else:
			quickfix.StringField.__init__(self, 42718, data)

class ReturnRateValuationStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42719)
		else:
			quickfix.IntField.__init__(self, 42719, data)

class ReturnRateValuationStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42720)
		else:
			quickfix.StringField.__init__(self, 42720, data)

class ReturnRateValuationEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42721)
		else:
			quickfix.StringField.__init__(self, 42721, data)

class ReturnRateValuationEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42722)
		else:
			quickfix.IntField.__init__(self, 42722, data)

class ReturnRateValuationEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42723)
		else:
			quickfix.IntField.__init__(self, 42723, data)

class ReturnRateValuationEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42724)
		else:
			quickfix.StringField.__init__(self, 42724, data)

class ReturnRateValuationEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42725)
		else:
			quickfix.IntField.__init__(self, 42725, data)

class ReturnRateValuationEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42726)
		else:
			quickfix.StringField.__init__(self, 42726, data)

class ReturnRateValuationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42727)
		else:
			quickfix.IntField.__init__(self, 42727, data)

class ReturnRateValuationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42728)
		else:
			quickfix.StringField.__init__(self, 42728, data)

class ReturnRateValuationFrequencyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42729)
		else:
			quickfix.StringField.__init__(self, 42729, data)

class ReturnRateValuationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42730)
		else:
			quickfix.IntField.__init__(self, 42730, data)

class NoReturnRateFXConversions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42731)
		else:
			quickfix.IntField.__init__(self, 42731, data)

class ReturnRateFXCurrencySymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42732)
		else:
			quickfix.StringField.__init__(self, 42732, data)

class ReturnRateFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42733)
		else:
			quickfix.DoubleField.__init__(self, 42733, data)

class ReturnRateFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42734)
		else:
			quickfix.CharField.__init__(self, 42734, data)

class NoReturnRates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42735)
		else:
			quickfix.IntField.__init__(self, 42735, data)

class ReturnRatePriceSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42736)
		else:
			quickfix.IntField.__init__(self, 42736, data)

class ReturnRateCommissionBasis(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42737)
		else:
			quickfix.CharField.__init__(self, 42737, data)

class ReturnRateCommissionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42738)
		else:
			quickfix.DoubleField.__init__(self, 42738, data)

class ReturnRateCommissionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42739)
		else:
			quickfix.StringField.__init__(self, 42739, data)

class ReturnRateTotalCommissionPerTrade(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42740)
		else:
			quickfix.DoubleField.__init__(self, 42740, data)

class ReturnRateDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42741)
		else:
			quickfix.StringField.__init__(self, 42741, data)

class ReturnRateAmountRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42742)
		else:
			quickfix.IntField.__init__(self, 42742, data)

class ReturnRateQuoteMeasureType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42743)
		else:
			quickfix.StringField.__init__(self, 42743, data)

class ReturnRateQuoteUnits(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42744)
		else:
			quickfix.StringField.__init__(self, 42744, data)

class ReturnRateQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42745)
		else:
			quickfix.IntField.__init__(self, 42745, data)

class ReturnRateQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42746)
		else:
			quickfix.StringField.__init__(self, 42746, data)

class ReturnRateQuoteCurrencyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42747)
		else:
			quickfix.StringField.__init__(self, 42747, data)

class ReturnRateQuoteTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42748)
		else:
			quickfix.IntField.__init__(self, 42748, data)

class ReturnRateQuoteTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42749)
		else:
			quickfix.StringField.__init__(self, 42749, data)

class ReturnRateQuoteDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42750)
		else:
			quickfix.StringField.__init__(self, 42750, data)

class ReturnRateQuoteExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42751)
		else:
			quickfix.StringField.__init__(self, 42751, data)

class ReturnRateQuoteBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42752)
		else:
			quickfix.StringField.__init__(self, 42752, data)

class ReturnRateQuoteExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42753)
		else:
			quickfix.StringField.__init__(self, 42753, data)

class ReturnRateQuotePricingModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42754)
		else:
			quickfix.StringField.__init__(self, 42754, data)

class ReturnRateCashFlowType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42755)
		else:
			quickfix.StringField.__init__(self, 42755, data)

class ReturnRateValuationTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42756)
		else:
			quickfix.IntField.__init__(self, 42756, data)

class ReturnRateValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42757)
		else:
			quickfix.StringField.__init__(self, 42757, data)

class ReturnRateValuationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42758)
		else:
			quickfix.StringField.__init__(self, 42758, data)

class ReturnRateValuationPriceOption(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42759)
		else:
			quickfix.IntField.__init__(self, 42759, data)

class ReturnRateFinalPriceFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42760)
		else:
			quickfix.IntField.__init__(self, 42760, data)

class NoReturnRateInformationSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42761)
		else:
			quickfix.IntField.__init__(self, 42761, data)

class ReturnRateInformationSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42762)
		else:
			quickfix.IntField.__init__(self, 42762, data)

class ReturnRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42763)
		else:
			quickfix.StringField.__init__(self, 42763, data)

class ReturnRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42764)
		else:
			quickfix.StringField.__init__(self, 42764, data)

class NoReturnRatePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42765)
		else:
			quickfix.IntField.__init__(self, 42765, data)

class ReturnRatePriceBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42766)
		else:
			quickfix.IntField.__init__(self, 42766, data)

class ReturnRatePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42767)
		else:
			quickfix.DoubleField.__init__(self, 42767, data)

class ReturnRatePriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42768)
		else:
			quickfix.StringField.__init__(self, 42768, data)

class ReturnRatePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42769)
		else:
			quickfix.IntField.__init__(self, 42769, data)

class NoReturnRateValuationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42770)
		else:
			quickfix.IntField.__init__(self, 42770, data)

class ReturnRateValuationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42771)
		else:
			quickfix.StringField.__init__(self, 42771, data)

class NoReturnRateValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42772)
		else:
			quickfix.IntField.__init__(self, 42772, data)

class ReturnRateValuationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42773)
		else:
			quickfix.StringField.__init__(self, 42773, data)

class ReturnRateValuationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42774)
		else:
			quickfix.IntField.__init__(self, 42774, data)

class NoSettlMethodElectionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42775)
		else:
			quickfix.IntField.__init__(self, 42775, data)

class SettlMethodElectionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42776)
		else:
			quickfix.StringField.__init__(self, 42776, data)

class SettlMethodElectionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42777)
		else:
			quickfix.StringField.__init__(self, 42777, data)

class SettlMethodElectionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42778)
		else:
			quickfix.IntField.__init__(self, 42778, data)

class SettlMethodElectionDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42779)
		else:
			quickfix.IntField.__init__(self, 42779, data)

class SettlMethodElectionDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42780)
		else:
			quickfix.IntField.__init__(self, 42780, data)

class SettlMethodElectionDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42781)
		else:
			quickfix.StringField.__init__(self, 42781, data)

class SettlMethodElectionDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42782)
		else:
			quickfix.IntField.__init__(self, 42782, data)

class SettlMethodElectionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42783)
		else:
			quickfix.StringField.__init__(self, 42783, data)

class StreamVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42784)
		else:
			quickfix.StringField.__init__(self, 42784, data)

class StreamVersionEffectiveDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42785)
		else:
			quickfix.StringField.__init__(self, 42785, data)

class StreamNotionalDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42786)
		else:
			quickfix.StringField.__init__(self, 42786, data)

class StreamNotionalAdjustments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42787)
		else:
			quickfix.IntField.__init__(self, 42787, data)

class NoUnderlyingCashSettlDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42788)
		else:
			quickfix.IntField.__init__(self, 42788, data)

class UnderlyingCashSettlDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42789)
		else:
			quickfix.StringField.__init__(self, 42789, data)

class UnderlyingCashSettlDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42790)
		else:
			quickfix.StringField.__init__(self, 42790, data)

class UnderlyingCashSettlDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42791)
		else:
			quickfix.IntField.__init__(self, 42791, data)

class UnderlyingCashSettlDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42792)
		else:
			quickfix.IntField.__init__(self, 42792, data)

class UnderlyingCashSettlDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42793)
		else:
			quickfix.IntField.__init__(self, 42793, data)

class UnderlyingCashSettlDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42794)
		else:
			quickfix.StringField.__init__(self, 42794, data)

class UnderlyingCashSettlDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42795)
		else:
			quickfix.IntField.__init__(self, 42795, data)

class UnderlyingCashSettlDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42796)
		else:
			quickfix.StringField.__init__(self, 42796, data)

class UnderlyingCashSettlPriceSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42797)
		else:
			quickfix.StringField.__init__(self, 42797, data)

class UnderlyingCashSettlPriceDefault(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42798)
		else:
			quickfix.IntField.__init__(self, 42798, data)

class UnderlyingComplexEventFuturesPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2611)
		else:
			quickfix.BoolField.__init__(self, 2611, data)

class UnderlyingComplexEventOptionsPriceValuation(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2612)
		else:
			quickfix.BoolField.__init__(self, 2612, data)

class UnderlyingComplexEventPVFinalPriceElectionFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2613)
		else:
			quickfix.IntField.__init__(self, 2613, data)

class NoUnderlyingDividendAccrualPaymentDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42799)
		else:
			quickfix.IntField.__init__(self, 42799, data)

class UnderlyingDividendAccrualPaymentDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42800)
		else:
			quickfix.StringField.__init__(self, 42800, data)

class UnderlyingDividendFloatingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42801)
		else:
			quickfix.StringField.__init__(self, 42801, data)

class UnderlyingDividendFloatingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42802)
		else:
			quickfix.IntField.__init__(self, 42802, data)

class UnderlyingDividendFloatingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42803)
		else:
			quickfix.StringField.__init__(self, 42803, data)

class UnderlyingDividendFloatingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42804)
		else:
			quickfix.DoubleField.__init__(self, 42804, data)

class UnderlyingDividendFloatingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42805)
		else:
			quickfix.DoubleField.__init__(self, 42805, data)

class UnderlyingDividendFloatingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42806)
		else:
			quickfix.IntField.__init__(self, 42806, data)

class UnderlyingDividendFloatingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42807)
		else:
			quickfix.IntField.__init__(self, 42807, data)

class UnderlyingDividendCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42808)
		else:
			quickfix.DoubleField.__init__(self, 42808, data)

class UnderlyingDividendCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42809)
		else:
			quickfix.IntField.__init__(self, 42809, data)

class UnderlyingDividendCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42810)
		else:
			quickfix.IntField.__init__(self, 42810, data)

class UnderlyingDividendFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42811)
		else:
			quickfix.DoubleField.__init__(self, 42811, data)

class UnderlyingDividendFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42812)
		else:
			quickfix.IntField.__init__(self, 42812, data)

class UnderlyingDividendFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42813)
		else:
			quickfix.IntField.__init__(self, 42813, data)

class UnderlyingDividendInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42814)
		else:
			quickfix.DoubleField.__init__(self, 42814, data)

class UnderlyingDividendFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42815)
		else:
			quickfix.CharField.__init__(self, 42815, data)

class UnderlyingDividendFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42816)
		else:
			quickfix.IntField.__init__(self, 42816, data)

class UnderlyingDividendAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42817)
		else:
			quickfix.IntField.__init__(self, 42817, data)

class UnderlyingDividendNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42818)
		else:
			quickfix.IntField.__init__(self, 42818, data)

class UnderlyingDividendAccrualPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42819)
		else:
			quickfix.IntField.__init__(self, 42819, data)

class UnderlyingDividendAccrualPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42820)
		else:
			quickfix.IntField.__init__(self, 42820, data)

class UnderlyingDividendAccrualPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42821)
		else:
			quickfix.StringField.__init__(self, 42821, data)

class UnderlyingDividendAccrualPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42822)
		else:
			quickfix.IntField.__init__(self, 42822, data)

class UnderlyingDividendAccrualPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42823)
		else:
			quickfix.StringField.__init__(self, 42823, data)

class UnderlyingDividendAccrualPaymentDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42824)
		else:
			quickfix.IntField.__init__(self, 42824, data)

class UnderlyingDividendAccrualPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42825)
		else:
			quickfix.StringField.__init__(self, 42825, data)

class UnderlyingDividendReinvestmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42826)
		else:
			quickfix.BoolField.__init__(self, 42826, data)

class UnderlyingDividendEntitlementEvent(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42827)
		else:
			quickfix.IntField.__init__(self, 42827, data)

class UnderlyingDividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42828)
		else:
			quickfix.IntField.__init__(self, 42828, data)

class UnderlyingDividendUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42829)
		else:
			quickfix.StringField.__init__(self, 42829, data)

class UnderlyingExtraordinaryDividendPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42830)
		else:
			quickfix.IntField.__init__(self, 42830, data)

class UnderlyingExtraordinaryDividendAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42831)
		else:
			quickfix.IntField.__init__(self, 42831, data)

class UnderlyingExtraordinaryDividendCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42832)
		else:
			quickfix.StringField.__init__(self, 42832, data)

class UnderlyingExtraordinaryDividendDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42833)
		else:
			quickfix.StringField.__init__(self, 42833, data)

class UnderlyingDividendAccrualFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42834)
		else:
			quickfix.DoubleField.__init__(self, 42834, data)

class UnderlyingDividendCompoundingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42835)
		else:
			quickfix.IntField.__init__(self, 42835, data)

class UnderlyingDividendNumOfIndexUnits(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42836)
		else:
			quickfix.IntField.__init__(self, 42836, data)

class UnderlyingDividendCashPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42837)
		else:
			quickfix.DoubleField.__init__(self, 42837, data)

class UnderlyingDividendCashEquivalentPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42838)
		else:
			quickfix.DoubleField.__init__(self, 42838, data)

class UnderlyingNonCashDividendTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42839)
		else:
			quickfix.IntField.__init__(self, 42839, data)

class UnderlyingDividendComposition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42840)
		else:
			quickfix.IntField.__init__(self, 42840, data)

class UnderlyingSpecialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42841)
		else:
			quickfix.BoolField.__init__(self, 42841, data)

class UnderlyingMaterialDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42842)
		else:
			quickfix.BoolField.__init__(self, 42842, data)

class UnderlyingOptionsExchangeDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42843)
		else:
			quickfix.BoolField.__init__(self, 42843, data)

class UnderlyingAdditionalDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42844)
		else:
			quickfix.BoolField.__init__(self, 42844, data)

class UnderlyingAllDividendsIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42845)
		else:
			quickfix.BoolField.__init__(self, 42845, data)

class UnderlyingDividendFXTriggerDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42846)
		else:
			quickfix.IntField.__init__(self, 42846, data)

class UnderlyingDividendFXTriggerDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42847)
		else:
			quickfix.IntField.__init__(self, 42847, data)

class UnderlyingDividendFXTriggerDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42848)
		else:
			quickfix.StringField.__init__(self, 42848, data)

class UnderlyingDividendFXTriggerDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42849)
		else:
			quickfix.IntField.__init__(self, 42849, data)

class UnderlyingDividendFXTriggerDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42850)
		else:
			quickfix.StringField.__init__(self, 42850, data)

class UnderlyingDividendFXTriggerDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42851)
		else:
			quickfix.IntField.__init__(self, 42851, data)

class UnderlyingDividendFXTriggerDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42852)
		else:
			quickfix.StringField.__init__(self, 42852, data)

class NoUnderlyingDividendFXTriggerDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42853)
		else:
			quickfix.IntField.__init__(self, 42853, data)

class UnderlyingDividendFXTriggerDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42854)
		else:
			quickfix.StringField.__init__(self, 42854, data)

class NoUnderlyingDividendPayments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42855)
		else:
			quickfix.IntField.__init__(self, 42855, data)

class UnderlyingDividendPaymentDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42856)
		else:
			quickfix.StringField.__init__(self, 42856, data)

class UnderlyingDividendPaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42857)
		else:
			quickfix.DoubleField.__init__(self, 42857, data)

class UnderlyingDividendPaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42858)
		else:
			quickfix.StringField.__init__(self, 42858, data)

class UnderlyingDividendAccruedInterest(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42859)
		else:
			quickfix.DoubleField.__init__(self, 42859, data)

class UnderlyingDividendPayoutRatio(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42860)
		else:
			quickfix.DoubleField.__init__(self, 42860, data)

class UnderlyingDividendPayoutConditions(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42861)
		else:
			quickfix.StringField.__init__(self, 42861, data)

class NoUnderlyingDividendPeriods(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42862)
		else:
			quickfix.IntField.__init__(self, 42862, data)

class UnderlyingDividendPeriodSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42863)
		else:
			quickfix.IntField.__init__(self, 42863, data)

class UnderlyingDividendPeriodStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42864)
		else:
			quickfix.StringField.__init__(self, 42864, data)

class UnderlyingDividendPeriodEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42865)
		else:
			quickfix.StringField.__init__(self, 42865, data)

class UnderlyingDividendPeriodUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42866)
		else:
			quickfix.StringField.__init__(self, 42866, data)

class UnderlyingDividendPeriodStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42867)
		else:
			quickfix.DoubleField.__init__(self, 42867, data)

class UnderlyingDividendPeriodBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42868)
		else:
			quickfix.IntField.__init__(self, 42868, data)

class UnderlyingDividendPeriodValuationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42869)
		else:
			quickfix.StringField.__init__(self, 42869, data)

class UnderlyingDividendPeriodValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42870)
		else:
			quickfix.IntField.__init__(self, 42870, data)

class UnderlyingDividendPeriodValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42871)
		else:
			quickfix.IntField.__init__(self, 42871, data)

class UnderlyingDividendPeriodValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42872)
		else:
			quickfix.StringField.__init__(self, 42872, data)

class UnderlyingDividendPeriodValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42873)
		else:
			quickfix.IntField.__init__(self, 42873, data)

class UnderlyingDividendPeriodValuationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42874)
		else:
			quickfix.StringField.__init__(self, 42874, data)

class UnderlyingDividendPeriodPaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42875)
		else:
			quickfix.StringField.__init__(self, 42875, data)

class UnderlyingDividendPeriodPaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42876)
		else:
			quickfix.IntField.__init__(self, 42876, data)

class UnderlyingDividendPeriodPaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42877)
		else:
			quickfix.IntField.__init__(self, 42877, data)

class UnderlyingDividendPeriodPaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42878)
		else:
			quickfix.StringField.__init__(self, 42878, data)

class UnderlyingDividendPeriodPaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42879)
		else:
			quickfix.IntField.__init__(self, 42879, data)

class UnderlyingDividendPeriodPaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42880)
		else:
			quickfix.StringField.__init__(self, 42880, data)

class UnderlyingDividendPeriodXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42881)
		else:
			quickfix.StringField.__init__(self, 42881, data)

class NoUnderlyingDividendPeriodBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42882)
		else:
			quickfix.IntField.__init__(self, 42882, data)

class UnderlyingDividendPeriodBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42883)
		else:
			quickfix.StringField.__init__(self, 42883, data)

class NoUnderlyingExtraordinaryEvents(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42884)
		else:
			quickfix.IntField.__init__(self, 42884, data)

class UnderlyingExtraordinaryEventType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42885)
		else:
			quickfix.StringField.__init__(self, 42885, data)

class UnderlyingExtraordinaryEventValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42886)
		else:
			quickfix.StringField.__init__(self, 42886, data)

class UnderlyingNotional(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2614)
		else:
			quickfix.DoubleField.__init__(self, 2614, data)

class UnderlyingNotionalCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2615)
		else:
			quickfix.StringField.__init__(self, 2615, data)

class UnderlyingNotionalDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2616)
		else:
			quickfix.StringField.__init__(self, 2616, data)

class UnderlyingNotionalAdjustments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2617)
		else:
			quickfix.IntField.__init__(self, 2617, data)

class UnderlyingNotionalXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2619)
		else:
			quickfix.StringField.__init__(self, 2619, data)

class UnderlyingFutureID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2620)
		else:
			quickfix.StringField.__init__(self, 2620, data)

class UnderlyingFutureIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2621)
		else:
			quickfix.StringField.__init__(self, 2621, data)

class UnderlyingStrikeIndexCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2622)
		else:
			quickfix.StringField.__init__(self, 2622, data)

class UnderlyingStrikeIndexQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2623)
		else:
			quickfix.IntField.__init__(self, 2623, data)

class UnderlyingExtraordinaryEventAdjustmentMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2624)
		else:
			quickfix.IntField.__init__(self, 2624, data)

class UnderlyingExchangeLookAlike(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2625)
		else:
			quickfix.BoolField.__init__(self, 2625, data)

class UnderlyingAverageVolumeLimitationPercentage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2626)
		else:
			quickfix.DoubleField.__init__(self, 2626, data)

class UnderlyingAverageVolumeLimitationPeriodDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2627)
		else:
			quickfix.IntField.__init__(self, 2627, data)

class UnderlyingDepositoryReceiptIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2628)
		else:
			quickfix.BoolField.__init__(self, 2628, data)

class UnderlyingOpenUnits(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2629)
		else:
			quickfix.DoubleField.__init__(self, 2629, data)

class UnderlyingBasketDivisor(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2630)
		else:
			quickfix.DoubleField.__init__(self, 2630, data)

class UnderlyingInstrumentXID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2631)
		else:
			quickfix.StringField.__init__(self, 2631, data)

class UnderlyingSettlMethodElectingPartySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42887)
		else:
			quickfix.IntField.__init__(self, 42887, data)

class UnderlyingMakeWholeDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42888)
		else:
			quickfix.StringField.__init__(self, 42888, data)

class UnderlyingMakeWholeAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42889)
		else:
			quickfix.DoubleField.__init__(self, 42889, data)

class UnderlyingMakeWholeBenchmarkCurveName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42890)
		else:
			quickfix.StringField.__init__(self, 42890, data)

class UnderlyingMakeWholeBenchmarkCurvePoint(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42891)
		else:
			quickfix.StringField.__init__(self, 42891, data)

class UnderlyingMakeWholeRecallSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42892)
		else:
			quickfix.DoubleField.__init__(self, 42892, data)

class UnderlyingMakeWholeBenchmarkQuote(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42893)
		else:
			quickfix.IntField.__init__(self, 42893, data)

class UnderlyingMakeWholeInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42894)
		else:
			quickfix.IntField.__init__(self, 42894, data)

class UnderlyingPaymentStreamCashSettlIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42895)
		else:
			quickfix.BoolField.__init__(self, 42895, data)

class UnderlyingPaymentStreamCompoundingXIDRef(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42896)
		else:
			quickfix.StringField.__init__(self, 42896, data)

class UnderlyingPaymentStreamCompoundingSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42897)
		else:
			quickfix.DoubleField.__init__(self, 42897, data)

class UnderlyingPaymentStreamInterpolationMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42898)
		else:
			quickfix.IntField.__init__(self, 42898, data)

class UnderlyingPaymentStreamInterpolationPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42899)
		else:
			quickfix.IntField.__init__(self, 42899, data)

class UnderlyingPaymentStreamCompoundingFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42900)
		else:
			quickfix.DoubleField.__init__(self, 42900, data)

class NoUnderlyingPaymentStreamCompoundingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42901)
		else:
			quickfix.IntField.__init__(self, 42901, data)

class UnderlyingPaymentStreamCompoundingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42902)
		else:
			quickfix.StringField.__init__(self, 42902, data)

class UnderlyingPaymentStreamCompoundingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42903)
		else:
			quickfix.IntField.__init__(self, 42903, data)

class UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42904)
		else:
			quickfix.IntField.__init__(self, 42904, data)

class UnderlyingPaymentStreamCompoundingDatesRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42905)
		else:
			quickfix.IntField.__init__(self, 42905, data)

class UnderlyingPaymentStreamCompoundingDatesOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42906)
		else:
			quickfix.IntField.__init__(self, 42906, data)

class UnderlyingPaymentStreamCompoundingDatesOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42907)
		else:
			quickfix.StringField.__init__(self, 42907, data)

class UnderlyingPaymentStreamCompoundingDatesOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42908)
		else:
			quickfix.IntField.__init__(self, 42908, data)

class UnderlyingPaymentStreamCompoundingPeriodSkip(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42909)
		else:
			quickfix.IntField.__init__(self, 42909, data)

class UnderlyingPaymentStreamCompoundingFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42910)
		else:
			quickfix.IntField.__init__(self, 42910, data)

class UnderlyingPaymentStreamCompoundingFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42911)
		else:
			quickfix.StringField.__init__(self, 42911, data)

class UnderlyingPaymentStreamCompoundingRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42912)
		else:
			quickfix.StringField.__init__(self, 42912, data)

class UnderlyingPaymentStreamBoundsFirstDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42913)
		else:
			quickfix.StringField.__init__(self, 42913, data)

class UnderlyingPaymentStreamBoundsLastDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42914)
		else:
			quickfix.StringField.__init__(self, 42914, data)

class NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42915)
		else:
			quickfix.IntField.__init__(self, 42915, data)

class UnderlyingPaymentStreamCompoundingDatesBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42916)
		else:
			quickfix.StringField.__init__(self, 42916, data)

class UnderlyingPaymentStreamCompoundingEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42917)
		else:
			quickfix.StringField.__init__(self, 42917, data)

class UnderlyingPaymentStreamCompoundingEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42918)
		else:
			quickfix.IntField.__init__(self, 42918, data)

class UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42919)
		else:
			quickfix.IntField.__init__(self, 42919, data)

class UnderlyingPaymentStreamCompoundingEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42920)
		else:
			quickfix.StringField.__init__(self, 42920, data)

class UnderlyingPaymentStreamCompoundingEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42921)
		else:
			quickfix.IntField.__init__(self, 42921, data)

class UnderlyingPaymentStreamCompoundingEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42922)
		else:
			quickfix.StringField.__init__(self, 42922, data)

class UnderlyingPaymentStreamCompoundingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42923)
		else:
			quickfix.StringField.__init__(self, 42923, data)

class UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42924)
		else:
			quickfix.IntField.__init__(self, 42924, data)

class UnderlyingPaymentStreamCompoundingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42925)
		else:
			quickfix.StringField.__init__(self, 42925, data)

class UnderlyingPaymentStreamCompoundingRateMultiplier(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42926)
		else:
			quickfix.DoubleField.__init__(self, 42926, data)

class UnderlyingPaymentStreamCompoundingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42927)
		else:
			quickfix.DoubleField.__init__(self, 42927, data)

class UnderlyingPaymentStreamCompoundingRateSpreadPositionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42928)
		else:
			quickfix.IntField.__init__(self, 42928, data)

class UnderlyingPaymentStreamCompoundingRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42929)
		else:
			quickfix.IntField.__init__(self, 42929, data)

class UnderlyingPaymentStreamCompoundingCapRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42930)
		else:
			quickfix.DoubleField.__init__(self, 42930, data)

class UnderlyingPaymentStreamCompoundingCapRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42931)
		else:
			quickfix.IntField.__init__(self, 42931, data)

class UnderlyingPaymentStreamCompoundingCapRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42932)
		else:
			quickfix.IntField.__init__(self, 42932, data)

class UnderlyingPaymentStreamCompoundingFloorRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42933)
		else:
			quickfix.DoubleField.__init__(self, 42933, data)

class UnderlyingPaymentStreamCompoundingFloorRateBuySide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42934)
		else:
			quickfix.IntField.__init__(self, 42934, data)

class UnderlyingPaymentStreamCompoundingFloorRateSellSide(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42935)
		else:
			quickfix.IntField.__init__(self, 42935, data)

class UnderlyingPaymentStreamCompoundingInitialRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42936)
		else:
			quickfix.DoubleField.__init__(self, 42936, data)

class UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 42937)
		else:
			quickfix.CharField.__init__(self, 42937, data)

class UnderlyingPaymentStreamCompoundingFinalRatePrecision(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42938)
		else:
			quickfix.IntField.__init__(self, 42938, data)

class UnderlyingPaymentStreamCompoundingAveragingMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42939)
		else:
			quickfix.IntField.__init__(self, 42939, data)

class UnderlyingPaymentStreamCompoundingNegativeRateTreatment(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42940)
		else:
			quickfix.IntField.__init__(self, 42940, data)

class UnderlyingPaymentStreamCompoundingStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42941)
		else:
			quickfix.StringField.__init__(self, 42941, data)

class UnderlyingPaymentStreamCompoundingStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42942)
		else:
			quickfix.IntField.__init__(self, 42942, data)

class UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42943)
		else:
			quickfix.IntField.__init__(self, 42943, data)

class UnderlyingPaymentStreamCompoundingStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42944)
		else:
			quickfix.StringField.__init__(self, 42944, data)

class UnderlyingPaymentStreamCompoundingStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42945)
		else:
			quickfix.IntField.__init__(self, 42945, data)

class UnderlyingPaymentStreamCompoundingStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42946)
		else:
			quickfix.StringField.__init__(self, 42946, data)

class UnderlyingPaymentStreamFormulaImageLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42947)
		else:
			quickfix.IntField.__init__(self, 42947, data)

class UnderlyingPaymentStreamFormulaImage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42948)
		else:
			quickfix.StringField.__init__(self, 42948, data)

class UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42949)
		else:
			quickfix.StringField.__init__(self, 42949, data)

class UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42950)
		else:
			quickfix.IntField.__init__(self, 42950, data)

class UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42951)
		else:
			quickfix.IntField.__init__(self, 42951, data)

class UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42952)
		else:
			quickfix.StringField.__init__(self, 42952, data)

class UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42953)
		else:
			quickfix.IntField.__init__(self, 42953, data)

class UnderlyingPaymentStreamFinalPricePaymentDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42954)
		else:
			quickfix.StringField.__init__(self, 42954, data)

class NoUnderlyingPaymentStreamFixingDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42955)
		else:
			quickfix.IntField.__init__(self, 42955, data)

class UnderlyingPaymentStreamFixingDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42956)
		else:
			quickfix.StringField.__init__(self, 42956, data)

class UnderlyingPaymentStreamFixingDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42957)
		else:
			quickfix.IntField.__init__(self, 42957, data)

class UnderlyingPaymentStreamFirstObservationDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42958)
		else:
			quickfix.StringField.__init__(self, 42958, data)

class UnderlyingPaymentStreamFirstObservationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42959)
		else:
			quickfix.IntField.__init__(self, 42959, data)

class UnderlyingPaymentStreamFirstObservationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42960)
		else:
			quickfix.IntField.__init__(self, 42960, data)

class UnderlyingPaymentStreamFirstObservationDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42961)
		else:
			quickfix.StringField.__init__(self, 42961, data)

class UnderlyingPaymentStreamUnderlierRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42962)
		else:
			quickfix.StringField.__init__(self, 42962, data)

class UnderlyingReturnRateNotionalReset(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42963)
		else:
			quickfix.BoolField.__init__(self, 42963, data)

class UnderlyingPaymentStreamLinkInitialLevel(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42964)
		else:
			quickfix.DoubleField.__init__(self, 42964, data)

class UnderlyingPaymentStreamLinkClosingLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42965)
		else:
			quickfix.BoolField.__init__(self, 42965, data)

class UnderlyingPaymentStreamLinkExpiringLevelIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42966)
		else:
			quickfix.BoolField.__init__(self, 42966, data)

class UnderlyingPaymentStreamLinkEstimatedTradingDays(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42967)
		else:
			quickfix.IntField.__init__(self, 42967, data)

class UnderlyingPaymentStreamLinkStrikePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42968)
		else:
			quickfix.DoubleField.__init__(self, 42968, data)

class UnderlyingPaymentStreamLinkStrikePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42969)
		else:
			quickfix.IntField.__init__(self, 42969, data)

class UnderlyingPaymentStreamLinkMaximumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42970)
		else:
			quickfix.DoubleField.__init__(self, 42970, data)

class UnderlyingPaymentStreamLinkMinimumBoundary(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42971)
		else:
			quickfix.DoubleField.__init__(self, 42971, data)

class UnderlyingPaymentStreamLinkNumberOfDataSeries(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42972)
		else:
			quickfix.IntField.__init__(self, 42972, data)

class UnderlyingPaymentStreamVarianceUnadjustedCap(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42973)
		else:
			quickfix.DoubleField.__init__(self, 42973, data)

class UnderlyingPaymentStreamRealizedVarianceMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42974)
		else:
			quickfix.IntField.__init__(self, 42974, data)

class UnderlyingPaymentStreamDaysAdjustmentIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 42975)
		else:
			quickfix.BoolField.__init__(self, 42975, data)

class UnderlyingPaymentStreamNearestExchangeContractRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42976)
		else:
			quickfix.StringField.__init__(self, 42976, data)

class UnderlyingPaymentStreamVegaNotionalAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 42977)
		else:
			quickfix.DoubleField.__init__(self, 42977, data)

class UnderlyingPaymentStreamFormulaCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42978)
		else:
			quickfix.StringField.__init__(self, 42978, data)

class UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42979)
		else:
			quickfix.StringField.__init__(self, 42979, data)

class UnderlyingPaymentStreamFormulaReferenceAmount(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42980)
		else:
			quickfix.IntField.__init__(self, 42980, data)

class NoUnderlyingPaymentStreamFormulas(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42981)
		else:
			quickfix.IntField.__init__(self, 42981, data)

class UnderlyingPaymentStreamFormula(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42982)
		else:
			quickfix.StringField.__init__(self, 42982, data)

class UnderlyingPaymentStreamFormulaDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42983)
		else:
			quickfix.StringField.__init__(self, 42983, data)

class UnderlyingPaymentStubEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42984)
		else:
			quickfix.StringField.__init__(self, 42984, data)

class UnderlyingPaymentStubEndDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42985)
		else:
			quickfix.IntField.__init__(self, 42985, data)

class UnderlyingPaymentStubEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42986)
		else:
			quickfix.IntField.__init__(self, 42986, data)

class UnderlyingPaymentStubEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42987)
		else:
			quickfix.IntField.__init__(self, 42987, data)

class UnderlyingPaymentStubEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42988)
		else:
			quickfix.StringField.__init__(self, 42988, data)

class UnderlyingPaymentStubEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42989)
		else:
			quickfix.IntField.__init__(self, 42989, data)

class UnderlyingPaymentStubEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42990)
		else:
			quickfix.StringField.__init__(self, 42990, data)

class NoUnderlyingPaymentStubEndDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42991)
		else:
			quickfix.IntField.__init__(self, 42991, data)

class UnderlyingPaymentStubEndDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42992)
		else:
			quickfix.StringField.__init__(self, 42992, data)

class UnderlyingPaymentStubStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42993)
		else:
			quickfix.StringField.__init__(self, 42993, data)

class UnderlyingPaymentStubStartDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42994)
		else:
			quickfix.IntField.__init__(self, 42994, data)

class UnderlyingPaymentStubStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42995)
		else:
			quickfix.IntField.__init__(self, 42995, data)

class UnderlyingPaymentStubStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42996)
		else:
			quickfix.IntField.__init__(self, 42996, data)

class UnderlyingPaymentStubStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42997)
		else:
			quickfix.StringField.__init__(self, 42997, data)

class UnderlyingPaymentStubStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 42998)
		else:
			quickfix.IntField.__init__(self, 42998, data)

class UnderlyingPaymentStubStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 42999)
		else:
			quickfix.StringField.__init__(self, 42999, data)

class NoUnderlyingPaymentStubStartDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43000)
		else:
			quickfix.IntField.__init__(self, 43000, data)

class UnderlyingPaymentStubStartDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43001)
		else:
			quickfix.StringField.__init__(self, 43001, data)

class UnderlyingProvisionBreakFeeElection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43002)
		else:
			quickfix.IntField.__init__(self, 43002, data)

class UnderlyingProvisionBreakFeeRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43003)
		else:
			quickfix.DoubleField.__init__(self, 43003, data)

class UnderlyingRateSpreadInitialValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43004)
		else:
			quickfix.DoubleField.__init__(self, 43004, data)

class NoUnderlyingRateSpreadSteps(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43005)
		else:
			quickfix.IntField.__init__(self, 43005, data)

class UnderlyingRateSpreadStepDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43006)
		else:
			quickfix.StringField.__init__(self, 43006, data)

class UnderlyingRateSpreadStepValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43007)
		else:
			quickfix.DoubleField.__init__(self, 43007, data)

class NoUnderlyingReturnRateDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43008)
		else:
			quickfix.IntField.__init__(self, 43008, data)

class UnderlyingReturnRateDateMode(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43009)
		else:
			quickfix.IntField.__init__(self, 43009, data)

class UnderlyingReturnRateValuationDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43010)
		else:
			quickfix.IntField.__init__(self, 43010, data)

class UnderlyingReturnRateValuationDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43011)
		else:
			quickfix.IntField.__init__(self, 43011, data)

class UnderlyingReturnRateValuationDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43012)
		else:
			quickfix.StringField.__init__(self, 43012, data)

class UnderlyingReturnRateValuationDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43013)
		else:
			quickfix.IntField.__init__(self, 43013, data)

class UnderlyingReturnRateValuationStartDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43014)
		else:
			quickfix.StringField.__init__(self, 43014, data)

class UnderlyingReturnRateValuationStartDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43015)
		else:
			quickfix.IntField.__init__(self, 43015, data)

class UnderlyingReturnRateValuationStartDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43016)
		else:
			quickfix.IntField.__init__(self, 43016, data)

class UnderlyingReturnRateValuationStartDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43017)
		else:
			quickfix.StringField.__init__(self, 43017, data)

class UnderlyingReturnRateValuationStartDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43018)
		else:
			quickfix.IntField.__init__(self, 43018, data)

class UnderlyingReturnRateValuationStartDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43019)
		else:
			quickfix.StringField.__init__(self, 43019, data)

class UnderlyingReturnRateValuationEndDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43020)
		else:
			quickfix.StringField.__init__(self, 43020, data)

class UnderlyingReturnRateValuationEndDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43021)
		else:
			quickfix.IntField.__init__(self, 43021, data)

class UnderlyingReturnRateValuationEndDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43022)
		else:
			quickfix.IntField.__init__(self, 43022, data)

class UnderlyingReturnRateValuationEndDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43023)
		else:
			quickfix.StringField.__init__(self, 43023, data)

class UnderlyingReturnRateValuationEndDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43024)
		else:
			quickfix.IntField.__init__(self, 43024, data)

class UnderlyingReturnRateValuationEndDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43025)
		else:
			quickfix.StringField.__init__(self, 43025, data)

class UnderlyingReturnRateValuationFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43026)
		else:
			quickfix.IntField.__init__(self, 43026, data)

class UnderlyingReturnRateValuationFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43027)
		else:
			quickfix.StringField.__init__(self, 43027, data)

class UnderlyingReturnRateValuationFrequencyRollConvention(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43028)
		else:
			quickfix.StringField.__init__(self, 43028, data)

class UnderlyingReturnRateValuationDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43029)
		else:
			quickfix.IntField.__init__(self, 43029, data)

class NoUnderlyingReturnRateFXConversions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43030)
		else:
			quickfix.IntField.__init__(self, 43030, data)

class UnderlyingReturnRateFXCurrencySymbol(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43031)
		else:
			quickfix.StringField.__init__(self, 43031, data)

class UnderlyingReturnRateFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43032)
		else:
			quickfix.DoubleField.__init__(self, 43032, data)

class UnderlyingReturnRateFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 43033)
		else:
			quickfix.CharField.__init__(self, 43033, data)

class NoUnderlyingReturnRates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43034)
		else:
			quickfix.IntField.__init__(self, 43034, data)

class UnderlyingReturnRatePriceSequence(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43035)
		else:
			quickfix.IntField.__init__(self, 43035, data)

class UnderlyingReturnRateCommissionBasis(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 43036)
		else:
			quickfix.CharField.__init__(self, 43036, data)

class UnderlyingReturnRateCommissionAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43037)
		else:
			quickfix.DoubleField.__init__(self, 43037, data)

class UnderlyingReturnRateCommissionCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43038)
		else:
			quickfix.StringField.__init__(self, 43038, data)

class UnderlyingReturnRateTotalCommissionPerTrade(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43039)
		else:
			quickfix.DoubleField.__init__(self, 43039, data)

class UnderlyingReturnRateDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43040)
		else:
			quickfix.StringField.__init__(self, 43040, data)

class UnderlyingReturnRateAmountRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43041)
		else:
			quickfix.IntField.__init__(self, 43041, data)

class UnderlyingReturnRateQuoteMeasureType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43042)
		else:
			quickfix.StringField.__init__(self, 43042, data)

class UnderlyingReturnRateQuoteUnits(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43043)
		else:
			quickfix.StringField.__init__(self, 43043, data)

class UnderlyingReturnRateQuoteMethod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43044)
		else:
			quickfix.IntField.__init__(self, 43044, data)

class UnderlyingReturnRateQuoteCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43045)
		else:
			quickfix.StringField.__init__(self, 43045, data)

class UnderlyingReturnRateQuoteCurrencyType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43046)
		else:
			quickfix.StringField.__init__(self, 43046, data)

class UnderlyingReturnRateQuoteTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43047)
		else:
			quickfix.IntField.__init__(self, 43047, data)

class UnderlyingReturnRateQuoteTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43048)
		else:
			quickfix.StringField.__init__(self, 43048, data)

class UnderlyingReturnRateQuoteDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43049)
		else:
			quickfix.StringField.__init__(self, 43049, data)

class UnderlyingReturnRateQuoteExpirationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43050)
		else:
			quickfix.StringField.__init__(self, 43050, data)

class UnderlyingReturnRateQuoteBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43051)
		else:
			quickfix.StringField.__init__(self, 43051, data)

class UnderlyingReturnRateQuoteExchange(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43052)
		else:
			quickfix.StringField.__init__(self, 43052, data)

class UnderlyingReturnRateQuotePricingModel(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43053)
		else:
			quickfix.StringField.__init__(self, 43053, data)

class UnderlyingReturnRateCashFlowType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43054)
		else:
			quickfix.StringField.__init__(self, 43054, data)

class UnderlyingReturnRateValuationTimeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43055)
		else:
			quickfix.IntField.__init__(self, 43055, data)

class UnderlyingReturnRateValuationTime(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43056)
		else:
			quickfix.StringField.__init__(self, 43056, data)

class UnderlyingReturnRateValuationTimeBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43057)
		else:
			quickfix.StringField.__init__(self, 43057, data)

class UnderlyingReturnRateValuationPriceOption(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43058)
		else:
			quickfix.IntField.__init__(self, 43058, data)

class UnderlyingReturnRateFinalPriceFallback(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43059)
		else:
			quickfix.IntField.__init__(self, 43059, data)

class NoUnderlyingReturnRateInformationSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43060)
		else:
			quickfix.IntField.__init__(self, 43060, data)

class UnderlyingReturnRateInformationSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43061)
		else:
			quickfix.IntField.__init__(self, 43061, data)

class UnderlyingReturnRateReferencePage(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43062)
		else:
			quickfix.StringField.__init__(self, 43062, data)

class UnderlyingReturnRateReferencePageHeading(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43063)
		else:
			quickfix.StringField.__init__(self, 43063, data)

class NoUnderlyingReturnRatePrices(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43064)
		else:
			quickfix.IntField.__init__(self, 43064, data)

class UnderlyingReturnRatePriceBasis(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43065)
		else:
			quickfix.IntField.__init__(self, 43065, data)

class UnderlyingReturnRatePrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43066)
		else:
			quickfix.DoubleField.__init__(self, 43066, data)

class UnderlyingReturnRatePriceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43067)
		else:
			quickfix.StringField.__init__(self, 43067, data)

class UnderlyingReturnRatePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43068)
		else:
			quickfix.IntField.__init__(self, 43068, data)

class NoUnderlyingReturnRateValuationDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43069)
		else:
			quickfix.IntField.__init__(self, 43069, data)

class UnderlyingReturnRateValuationDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43070)
		else:
			quickfix.StringField.__init__(self, 43070, data)

class NoUnderlyingReturnRateValuationDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43071)
		else:
			quickfix.IntField.__init__(self, 43071, data)

class UnderlyingReturnRateValuationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43072)
		else:
			quickfix.StringField.__init__(self, 43072, data)

class UnderlyingReturnRateValuationDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43073)
		else:
			quickfix.IntField.__init__(self, 43073, data)

class NoUnderlyingSettlMethodElectionDateBusinessCenters(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43074)
		else:
			quickfix.IntField.__init__(self, 43074, data)

class UnderlyingSettlMethodElectionDateBusinessCenter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43075)
		else:
			quickfix.StringField.__init__(self, 43075, data)

class UnderlyingSettlMethodElectionDateUnadjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43076)
		else:
			quickfix.StringField.__init__(self, 43076, data)

class UnderlyingSettlMethodElectionDateBusinessDayConvention(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43077)
		else:
			quickfix.IntField.__init__(self, 43077, data)

class UnderlyingSettlMethodElectionDateRelativeTo(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43078)
		else:
			quickfix.IntField.__init__(self, 43078, data)

class UnderlyingSettlMethodElectionDateOffsetPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43079)
		else:
			quickfix.IntField.__init__(self, 43079, data)

class UnderlyingSettlMethodElectionDateOffsetUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43080)
		else:
			quickfix.StringField.__init__(self, 43080, data)

class UnderlyingSettlMethodElectionDateOffsetDayType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43081)
		else:
			quickfix.IntField.__init__(self, 43081, data)

class UnderlyingSettlMethodElectionDateAdjusted(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43082)
		else:
			quickfix.StringField.__init__(self, 43082, data)

class UnderlyingStreamVersion(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43083)
		else:
			quickfix.StringField.__init__(self, 43083, data)

class UnderlyingStreamVersionEffectiveDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43084)
		else:
			quickfix.StringField.__init__(self, 43084, data)

class UnderlyingStreamNotionalDeterminationMethod(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43085)
		else:
			quickfix.StringField.__init__(self, 43085, data)

class UnderlyingStreamNotionalAdjustments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43086)
		else:
			quickfix.IntField.__init__(self, 43086, data)

class RemunerationIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2356)
		else:
			quickfix.IntField.__init__(self, 2356, data)

class CompressionGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2361)
		else:
			quickfix.StringField.__init__(self, 2361, data)

class SelfMatchPreventionID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2362)
		else:
			quickfix.StringField.__init__(self, 2362, data)

class PartyRiskLimitStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2355)
		else:
			quickfix.IntField.__init__(self, 2355, data)

class TradeConfirmationReferenceID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2390)
		else:
			quickfix.StringField.__init__(self, 2390, data)

class AlgorithmicTradeIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2667)
		else:
			quickfix.IntField.__init__(self, 2667, data)

class NoTrdRegPublications(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2668)
		else:
			quickfix.IntField.__init__(self, 2668, data)

class TrdRegPublicationType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2669)
		else:
			quickfix.IntField.__init__(self, 2669, data)

class TrdRegPublicationReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2670)
		else:
			quickfix.IntField.__init__(self, 2670, data)

class LegDifferentialPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2492)
		else:
			quickfix.DoubleField.__init__(self, 2492, data)

class CrossedIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2523)
		else:
			quickfix.IntField.__init__(self, 2523, data)

class NoOrderAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2593)
		else:
			quickfix.IntField.__init__(self, 2593, data)

class OrderAttributeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2594)
		else:
			quickfix.IntField.__init__(self, 2594, data)

class OrderAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2595)
		else:
			quickfix.StringField.__init__(self, 2595, data)

class TradeReportingIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2524)
		else:
			quickfix.IntField.__init__(self, 2524, data)

class SideTradeReportingIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2671)
		else:
			quickfix.IntField.__init__(self, 2671, data)

class CrossRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2672)
		else:
			quickfix.StringField.__init__(self, 2672, data)

class FillMatchID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2673)
		else:
			quickfix.StringField.__init__(self, 2673, data)

class FillMatchSubID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2674)
		else:
			quickfix.StringField.__init__(self, 2674, data)

class MassActionReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2675)
		else:
			quickfix.IntField.__init__(self, 2675, data)

class MaximumPriceDeviation(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2676)
		else:
			quickfix.DoubleField.__init__(self, 2676, data)

class NotAffectedReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2677)
		else:
			quickfix.IntField.__init__(self, 2677, data)

class TotalNotAffectedOrders(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2678)
		else:
			quickfix.IntField.__init__(self, 2678, data)

class OrderOwnershipIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2679)
		else:
			quickfix.IntField.__init__(self, 2679, data)

class LegAccount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2680)
		else:
			quickfix.StringField.__init__(self, 2680, data)

class InTheMoneyCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2681)
		else:
			quickfix.IntField.__init__(self, 2681, data)

class LegInTheMoneyCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2682)
		else:
			quickfix.IntField.__init__(self, 2682, data)

class UnderlyingInTheMoneyCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2683)
		else:
			quickfix.IntField.__init__(self, 2683, data)

class DerivativeInTheMoneyCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2684)
		else:
			quickfix.IntField.__init__(self, 2684, data)

class ContraryInstructionEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2685)
		else:
			quickfix.BoolField.__init__(self, 2685, data)

class LegContraryInstructionEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2686)
		else:
			quickfix.BoolField.__init__(self, 2686, data)

class UnderlyingContraryInstructionEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2687)
		else:
			quickfix.BoolField.__init__(self, 2687, data)

class DerivativeContraryInstructionEligibilityIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2688)
		else:
			quickfix.BoolField.__init__(self, 2688, data)

class CollateralMarketPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2689)
		else:
			quickfix.DoubleField.__init__(self, 2689, data)

class CollateralPercentOverage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2690)
		else:
			quickfix.DoubleField.__init__(self, 2690, data)

class NoSideCollateralAmounts(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2691)
		else:
			quickfix.IntField.__init__(self, 2691, data)

class SideCollateralAmountMarketID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2692)
		else:
			quickfix.StringField.__init__(self, 2692, data)

class SideCollateralAmountMarketSegmentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2693)
		else:
			quickfix.StringField.__init__(self, 2693, data)

class SideCollateralAmountType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2694)
		else:
			quickfix.IntField.__init__(self, 2694, data)

class SideCollateralCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2695)
		else:
			quickfix.StringField.__init__(self, 2695, data)

class SideCollateralFXRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2696)
		else:
			quickfix.DoubleField.__init__(self, 2696, data)

class SideCollateralFXRateCalc(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2697)
		else:
			quickfix.CharField.__init__(self, 2697, data)

class SideCollateralMarketPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2698)
		else:
			quickfix.DoubleField.__init__(self, 2698, data)

class SideCollateralPercentOverage(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2699)
		else:
			quickfix.DoubleField.__init__(self, 2699, data)

class SideCollateralPortfolioID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2700)
		else:
			quickfix.StringField.__init__(self, 2700, data)

class SideCollateralType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2701)
		else:
			quickfix.StringField.__init__(self, 2701, data)

class SideCurrentCollateralAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2702)
		else:
			quickfix.DoubleField.__init__(self, 2702, data)

class SideHaircutIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2703)
		else:
			quickfix.BoolField.__init__(self, 2703, data)

class ExDestinationType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2704)
		else:
			quickfix.IntField.__init__(self, 2704, data)

class MarketCondition(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2705)
		else:
			quickfix.IntField.__init__(self, 2705, data)

class NoQuoteAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2706)
		else:
			quickfix.IntField.__init__(self, 2706, data)

class QuoteAttributeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2707)
		else:
			quickfix.IntField.__init__(self, 2707, data)

class QuoteAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2708)
		else:
			quickfix.StringField.__init__(self, 2708, data)

class NoPriceQualifiers(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2709)
		else:
			quickfix.IntField.__init__(self, 2709, data)

class PriceQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2710)
		else:
			quickfix.IntField.__init__(self, 2710, data)

class MDValueTier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2711)
		else:
			quickfix.IntField.__init__(self, 2711, data)

class MiscFeeQualifier(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2712)
		else:
			quickfix.IntField.__init__(self, 2712, data)

class MiscFeeDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2713)
		else:
			quickfix.StringField.__init__(self, 2713, data)

class FinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2714)
		else:
			quickfix.StringField.__init__(self, 2714, data)

class EncodedFinancialInstrumentFullNameLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2715)
		else:
			quickfix.IntField.__init__(self, 2715, data)

class EncodedFinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2716)
		else:
			quickfix.StringField.__init__(self, 2716, data)

class LegFinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2717)
		else:
			quickfix.StringField.__init__(self, 2717, data)

class EncodedLegFinancialInstrumentFullNameLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2718)
		else:
			quickfix.IntField.__init__(self, 2718, data)

class EncodedLegFinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2719)
		else:
			quickfix.StringField.__init__(self, 2719, data)

class UnderlyingFinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2720)
		else:
			quickfix.StringField.__init__(self, 2720, data)

class EncodedUnderlyingFinancialInstrumentFullNameLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2721)
		else:
			quickfix.IntField.__init__(self, 2721, data)

class EncodedUnderlyingFinancialInstrumentFullName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2722)
		else:
			quickfix.StringField.__init__(self, 2722, data)

class UnderlyingIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2723)
		else:
			quickfix.StringField.__init__(self, 2723, data)

class UnderlyingIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2724)
		else:
			quickfix.IntField.__init__(self, 2724, data)

class CommissionAmountSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2725)
		else:
			quickfix.IntField.__init__(self, 2725, data)

class AllocCommissionAmountSubType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2726)
		else:
			quickfix.IntField.__init__(self, 2726, data)

class AllocLegRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2727)
		else:
			quickfix.StringField.__init__(self, 2727, data)

class FloatingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2728)
		else:
			quickfix.IntField.__init__(self, 2728, data)

class FloatingRateIndexCurveSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2729)
		else:
			quickfix.DoubleField.__init__(self, 2729, data)

class FloatingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2730)
		else:
			quickfix.StringField.__init__(self, 2730, data)

class FloatingRateIndexID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2731)
		else:
			quickfix.StringField.__init__(self, 2731, data)

class FloatingRateIndexIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2732)
		else:
			quickfix.StringField.__init__(self, 2732, data)

class IndexRollMonth(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2733)
		else:
			quickfix.StringField.__init__(self, 2733, data)

class NoIndexRollMonths(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2734)
		else:
			quickfix.IntField.__init__(self, 2734, data)

class AssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2735)
		else:
			quickfix.StringField.__init__(self, 2735, data)

class CommodityFinalPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2736)
		else:
			quickfix.IntField.__init__(self, 2736, data)

class FinancialInstrumentShortName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2737)
		else:
			quickfix.StringField.__init__(self, 2737, data)

class NextIndexRollDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2738)
		else:
			quickfix.StringField.__init__(self, 2738, data)

class LegAssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2739)
		else:
			quickfix.StringField.__init__(self, 2739, data)

class LegFinancialInstrumentShortName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2740)
		else:
			quickfix.StringField.__init__(self, 2740, data)

class LegPaymentStreamRateIndexID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43088)
		else:
			quickfix.StringField.__init__(self, 43088, data)

class LegPaymentStreamRateIndexIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43089)
		else:
			quickfix.StringField.__init__(self, 43089, data)

class LegSecondaryAssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2743)
		else:
			quickfix.StringField.__init__(self, 2743, data)

class PaymentStreamRateIndexID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43090)
		else:
			quickfix.StringField.__init__(self, 43090, data)

class PaymentStreamRateIndexIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43091)
		else:
			quickfix.StringField.__init__(self, 43091, data)

class NoReferenceDataDates(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2746)
		else:
			quickfix.IntField.__init__(self, 2746, data)

class ReferenceDataDate(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2747)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2747, data)

class ReferenceDataDateType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2748)
		else:
			quickfix.IntField.__init__(self, 2748, data)

class SecondaryAssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2741)
		else:
			quickfix.StringField.__init__(self, 2741, data)

class UnderlyingFinancialInstrumentShortName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2742)
		else:
			quickfix.StringField.__init__(self, 2742, data)

class UnderlyingAssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2744)
		else:
			quickfix.StringField.__init__(self, 2744, data)

class UnderlyingPaymentStreamRateIndexID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43092)
		else:
			quickfix.StringField.__init__(self, 43092, data)

class UnderlyingPaymentStreamRateIndexIDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43093)
		else:
			quickfix.StringField.__init__(self, 43093, data)

class UnderlyingSecondaryAssetSubType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2745)
		else:
			quickfix.StringField.__init__(self, 2745, data)

class DeliveryStreamRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43094)
		else:
			quickfix.StringField.__init__(self, 43094, data)

class LegDeliveryStreamRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43095)
		else:
			quickfix.StringField.__init__(self, 43095, data)

class UnderlyingDeliveryStreamRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43096)
		else:
			quickfix.StringField.__init__(self, 43096, data)

class ExecutionTimestamp(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2749)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2749, data)

class ReportingPx(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2750)
		else:
			quickfix.DoubleField.__init__(self, 2750, data)

class ReportingQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2751)
		else:
			quickfix.DoubleField.__init__(self, 2751, data)

class DeliveryRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2752)
		else:
			quickfix.StringField.__init__(self, 2752, data)

class ReturnTrigger(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2753)
		else:
			quickfix.IntField.__init__(self, 2753, data)

class LegDeliveryRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2754)
		else:
			quickfix.StringField.__init__(self, 2754, data)

class LegReturnTrigger(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2755)
		else:
			quickfix.IntField.__init__(self, 2755, data)

class UnderlyingDeliveryRouteOrCharter(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2756)
		else:
			quickfix.StringField.__init__(self, 2756, data)

class UnderlyingReturnTrigger(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2757)
		else:
			quickfix.IntField.__init__(self, 2757, data)

class AllocRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2758)
		else:
			quickfix.StringField.__init__(self, 2758, data)

class GroupAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2759)
		else:
			quickfix.DoubleField.__init__(self, 2759, data)

class GroupRemainingAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2760)
		else:
			quickfix.DoubleField.__init__(self, 2760, data)

class AllocGroupAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2761)
		else:
			quickfix.DoubleField.__init__(self, 2761, data)

class PriceMarkup(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2762)
		else:
			quickfix.DoubleField.__init__(self, 2762, data)

class AveragePriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2763)
		else:
			quickfix.IntField.__init__(self, 2763, data)

class AveragePriceStartTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2764)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2764, data)

class AveragePriceEndTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2765)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2765, data)

class OrderPercentOfTotalVolume(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2766)
		else:
			quickfix.DoubleField.__init__(self, 2766, data)

class AllocGroupStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2767)
		else:
			quickfix.IntField.__init__(self, 2767, data)

class AllocRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2768)
		else:
			quickfix.IntField.__init__(self, 2768, data)

class AllocAvgPxIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2769)
		else:
			quickfix.IntField.__init__(self, 2769, data)

class AllocAvgPxGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2770)
		else:
			quickfix.StringField.__init__(self, 2770, data)

class PreviousAllocGroupID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2771)
		else:
			quickfix.StringField.__init__(self, 2771, data)

class NoMatchExceptions(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2772)
		else:
			quickfix.IntField.__init__(self, 2772, data)

class MatchExceptionType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2773)
		else:
			quickfix.IntField.__init__(self, 2773, data)

class MatchExceptionElementType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2774)
		else:
			quickfix.IntField.__init__(self, 2774, data)

class MatchExceptionElementName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2775)
		else:
			quickfix.StringField.__init__(self, 2775, data)

class MatchExceptionAllocValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2776)
		else:
			quickfix.StringField.__init__(self, 2776, data)

class MatchExceptionConfirmValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2777)
		else:
			quickfix.StringField.__init__(self, 2777, data)

class MatchExceptionToleranceValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2778)
		else:
			quickfix.DoubleField.__init__(self, 2778, data)

class MatchExceptionToleranceValueType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2779)
		else:
			quickfix.IntField.__init__(self, 2779, data)

class MatchExceptionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2780)
		else:
			quickfix.StringField.__init__(self, 2780, data)

class NoMatchingDataPoints(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2781)
		else:
			quickfix.IntField.__init__(self, 2781, data)

class MatchingDataPointIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2782)
		else:
			quickfix.IntField.__init__(self, 2782, data)

class MatchingDataPointValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2783)
		else:
			quickfix.StringField.__init__(self, 2783, data)

class MatchingDataPointType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2784)
		else:
			quickfix.IntField.__init__(self, 2784, data)

class MatchingDataPointName(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2785)
		else:
			quickfix.StringField.__init__(self, 2785, data)

class EncodedMatchExceptionTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2797)
		else:
			quickfix.IntField.__init__(self, 2797, data)

class EncodedMatchExceptionText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2798)
		else:
			quickfix.StringField.__init__(self, 2798, data)

class TradeAggregationRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2786)
		else:
			quickfix.StringField.__init__(self, 2786, data)

class TradeAggregationRequestRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2787)
		else:
			quickfix.StringField.__init__(self, 2787, data)

class TradeAggregationTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2788)
		else:
			quickfix.IntField.__init__(self, 2788, data)

class AggregatedQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2789)
		else:
			quickfix.DoubleField.__init__(self, 2789, data)

class TradeAggregationRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2790)
		else:
			quickfix.IntField.__init__(self, 2790, data)

class TradeAggregationRejectReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2791)
		else:
			quickfix.IntField.__init__(self, 2791, data)

class TradeAggregationReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2792)
		else:
			quickfix.StringField.__init__(self, 2792, data)

class AvgSpotRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2793)
		else:
			quickfix.DoubleField.__init__(self, 2793, data)

class AvgForwardPoints(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2794)
		else:
			quickfix.DoubleField.__init__(self, 2794, data)

class OffshoreIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2795)
		else:
			quickfix.IntField.__init__(self, 2795, data)

class FXBenchmarkRateFix(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2796)
		else:
			quickfix.StringField.__init__(self, 2796, data)

class PayReportID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2799)
		else:
			quickfix.StringField.__init__(self, 2799, data)

class PayDisputeReason(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2800)
		else:
			quickfix.IntField.__init__(self, 2800, data)

class EncodedReplaceText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2801)
		else:
			quickfix.StringField.__init__(self, 2801, data)

class EncodedReplaceTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2802)
		else:
			quickfix.IntField.__init__(self, 2802, data)

class PayReportRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2803)
		else:
			quickfix.StringField.__init__(self, 2803, data)

class PayReportTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2804)
		else:
			quickfix.IntField.__init__(self, 2804, data)

class ReplaceText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2805)
		else:
			quickfix.StringField.__init__(self, 2805, data)

class PayReportStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2806)
		else:
			quickfix.IntField.__init__(self, 2806, data)

class CancelText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2807)
		else:
			quickfix.StringField.__init__(self, 2807, data)

class EncodedCancelText(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2808)
		else:
			quickfix.StringField.__init__(self, 2808, data)

class EncodedCancelTextLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2809)
		else:
			quickfix.IntField.__init__(self, 2809, data)

class PayRequestRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2810)
		else:
			quickfix.StringField.__init__(self, 2810, data)

class PayRequestTransType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2811)
		else:
			quickfix.IntField.__init__(self, 2811, data)

class PayRequestID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2812)
		else:
			quickfix.StringField.__init__(self, 2812, data)

class PayRequestStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2813)
		else:
			quickfix.IntField.__init__(self, 2813, data)

class EncodedPostTradePaymentDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2814)
		else:
			quickfix.StringField.__init__(self, 2814, data)

class EncodedPostTradePaymentDescLen(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2815)
		else:
			quickfix.IntField.__init__(self, 2815, data)

class PostTradePaymentAccount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2816)
		else:
			quickfix.StringField.__init__(self, 2816, data)

class PostTradePaymentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2817)
		else:
			quickfix.DoubleField.__init__(self, 2817, data)

class PostTradePaymentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2818)
		else:
			quickfix.StringField.__init__(self, 2818, data)

class PostTradePaymentDebitOrCredit(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2819)
		else:
			quickfix.IntField.__init__(self, 2819, data)

class PostTradePaymentDesc(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2820)
		else:
			quickfix.StringField.__init__(self, 2820, data)

class PostTradePaymentID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2821)
		else:
			quickfix.StringField.__init__(self, 2821, data)

class PostTradePaymentLinkID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2822)
		else:
			quickfix.StringField.__init__(self, 2822, data)

class PostTradePaymentStatus(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2823)
		else:
			quickfix.IntField.__init__(self, 2823, data)

class PostTradePaymentType(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2824)
		else:
			quickfix.StringField.__init__(self, 2824, data)

class PostTradePaymentCalculationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2825)
		else:
			quickfix.StringField.__init__(self, 2825, data)

class PostTradePaymentValueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2826)
		else:
			quickfix.StringField.__init__(self, 2826, data)

class PostTradePaymentFinalValueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2827)
		else:
			quickfix.StringField.__init__(self, 2827, data)

class CurrentDisplayPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2828)
		else:
			quickfix.DoubleField.__init__(self, 2828, data)

class DuplicateClOrdIDIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2829)
		else:
			quickfix.BoolField.__init__(self, 2829, data)

class EventInitiatorType(quickfix.CharField):
	def __init__(self, data = None):
		if data == None:
			quickfix.CharField.__init__(self, 2830)
		else:
			quickfix.CharField.__init__(self, 2830, data)

class NBBOEntryType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2831)
		else:
			quickfix.IntField.__init__(self, 2831, data)

class NBBOPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2832)
		else:
			quickfix.DoubleField.__init__(self, 2832, data)

class NBBOQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2833)
		else:
			quickfix.DoubleField.__init__(self, 2833, data)

class NBBOSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2834)
		else:
			quickfix.IntField.__init__(self, 2834, data)

class OrderOriginationFirmID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2835)
		else:
			quickfix.StringField.__init__(self, 2835, data)

class RelatedOrderTime(quickfix.UtcTimeStampField):
	def __init__(self, data = None):
		if data == None:
			quickfix.UtcTimeStampField.__init__(self, 2836)
		else:
			quickfix.UtcTimeStampField.__init__(self, 2836, data)

class SingleQuoteIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2837)
		else:
			quickfix.BoolField.__init__(self, 2837, data)

class CurrentWorkingPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2838)
		else:
			quickfix.DoubleField.__init__(self, 2838, data)

class TrdRegTimestampManualIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2839)
		else:
			quickfix.BoolField.__init__(self, 2839, data)

class CollateralReinvestmentRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2840)
		else:
			quickfix.DoubleField.__init__(self, 2840, data)

class UnderlyingRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2841)
		else:
			quickfix.StringField.__init__(self, 2841, data)

class CollateralReinvestmentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2842)
		else:
			quickfix.DoubleField.__init__(self, 2842, data)

class CollateralReinvestmentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2843)
		else:
			quickfix.StringField.__init__(self, 2843, data)

class CollateralReinvestmentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2844)
		else:
			quickfix.IntField.__init__(self, 2844, data)

class NoCollateralReinvestments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2845)
		else:
			quickfix.IntField.__init__(self, 2845, data)

class FundingSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2846)
		else:
			quickfix.IntField.__init__(self, 2846, data)

class FundingSourceCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2847)
		else:
			quickfix.StringField.__init__(self, 2847, data)

class FundingSourceMarketValue(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2848)
		else:
			quickfix.DoubleField.__init__(self, 2848, data)

class NoFundingSources(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2849)
		else:
			quickfix.IntField.__init__(self, 2849, data)

class LegPaymentStreamOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43108)
		else:
			quickfix.StringField.__init__(self, 43108, data)

class MarginDirection(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2851)
		else:
			quickfix.IntField.__init__(self, 2851, data)

class PaymentFixedRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43097)
		else:
			quickfix.DoubleField.__init__(self, 43097, data)

class PaymentFloatingRateIndex(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43098)
		else:
			quickfix.StringField.__init__(self, 43098, data)

class PaymentFloatingRateIndexCurvePeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43099)
		else:
			quickfix.IntField.__init__(self, 43099, data)

class PaymentFloatingRateIndexCurveUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43100)
		else:
			quickfix.StringField.__init__(self, 43100, data)

class PaymentFloatingRateSpread(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 43101)
		else:
			quickfix.DoubleField.__init__(self, 43101, data)

class PaymentFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43102)
		else:
			quickfix.IntField.__init__(self, 43102, data)

class PaymentFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43103)
		else:
			quickfix.StringField.__init__(self, 43103, data)

class PaymentRateResetFrequencyPeriod(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43104)
		else:
			quickfix.IntField.__init__(self, 43104, data)

class PaymentRateResetFrequencyUnit(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43105)
		else:
			quickfix.StringField.__init__(self, 43105, data)

class PaymentStreamOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43106)
		else:
			quickfix.StringField.__init__(self, 43106, data)

class SideCollateralReinvestmentRate(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2862)
		else:
			quickfix.DoubleField.__init__(self, 2862, data)

class SideUnderlyingRefID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2863)
		else:
			quickfix.StringField.__init__(self, 2863, data)

class NoSideCollateralReinvestments(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2864)
		else:
			quickfix.IntField.__init__(self, 2864, data)

class SideCollateralReinvestmentAmount(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2865)
		else:
			quickfix.DoubleField.__init__(self, 2865, data)

class SideCollateralReinvestmentCurrency(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2866)
		else:
			quickfix.StringField.__init__(self, 2866, data)

class SideCollateralReinvestmentType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2867)
		else:
			quickfix.IntField.__init__(self, 2867, data)

class CollateralizationValueDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2868)
		else:
			quickfix.StringField.__init__(self, 2868, data)

class RegulatoryReportTypeBusinessDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2869)
		else:
			quickfix.StringField.__init__(self, 2869, data)

class ClearingPortfolioID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2870)
		else:
			quickfix.StringField.__init__(self, 2870, data)

class NoTransactionAttributes(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2871)
		else:
			quickfix.IntField.__init__(self, 2871, data)

class TransactionAttributeType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2872)
		else:
			quickfix.IntField.__init__(self, 2872, data)

class TransactionAttributeValue(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2873)
		else:
			quickfix.StringField.__init__(self, 2873, data)

class UnderlyingID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2874)
		else:
			quickfix.StringField.__init__(self, 2874, data)

class UnderlyingPaymentStreamOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43107)
		else:
			quickfix.StringField.__init__(self, 43107, data)

class PosAmtPrice(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2876)
		else:
			quickfix.DoubleField.__init__(self, 2876, data)

class PosAmtPriceType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2877)
		else:
			quickfix.IntField.__init__(self, 2877, data)

class TerminationDate(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2878)
		else:
			quickfix.StringField.__init__(self, 2878, data)

class CouponOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2879)
		else:
			quickfix.StringField.__init__(self, 2879, data)

class LegCouponOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2880)
		else:
			quickfix.StringField.__init__(self, 2880, data)

class UnderlyingCouponOtherDayCount(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2881)
		else:
			quickfix.StringField.__init__(self, 2881, data)

class ContraOrderOrigination(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2882)
		else:
			quickfix.IntField.__init__(self, 2882, data)

class RoutingArrangmentIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2883)
		else:
			quickfix.IntField.__init__(self, 2883, data)

class ContraRoutingArrangmentIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2884)
		else:
			quickfix.IntField.__init__(self, 2884, data)

class PaymentStreamFormulaLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43109)
		else:
			quickfix.IntField.__init__(self, 43109, data)

class LegPaymentStreamFormulaLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43110)
		else:
			quickfix.IntField.__init__(self, 43110, data)

class UnderlyingPaymentStreamFormulaLength(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43111)
		else:
			quickfix.IntField.__init__(self, 43111, data)

class UnderlyingAccruedInterestAmt(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2885)
		else:
			quickfix.DoubleField.__init__(self, 2885, data)

class UnderlyingNumDaysInterest(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2886)
		else:
			quickfix.IntField.__init__(self, 2886, data)

class RelatedOrderID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2887)
		else:
			quickfix.StringField.__init__(self, 2887, data)

class RelatedOrderIDSource(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2888)
		else:
			quickfix.IntField.__init__(self, 2888, data)

class RelatedOrderQty(quickfix.DoubleField):
	def __init__(self, data = None):
		if data == None:
			quickfix.DoubleField.__init__(self, 2889)
		else:
			quickfix.DoubleField.__init__(self, 2889, data)

class OrderRelationship(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2890)
		else:
			quickfix.IntField.__init__(self, 2890, data)

class UPICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2891)
		else:
			quickfix.StringField.__init__(self, 2891, data)

class DerivativeUPICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2892)
		else:
			quickfix.StringField.__init__(self, 2892, data)

class LegUPICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2893)
		else:
			quickfix.StringField.__init__(self, 2893, data)

class UnderlyingUPICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2894)
		else:
			quickfix.StringField.__init__(self, 2894, data)

class InstrumentScopeUPICode(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2895)
		else:
			quickfix.StringField.__init__(self, 2895, data)

class TertiaryTrdType(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2896)
		else:
			quickfix.IntField.__init__(self, 2896, data)

class PaymentStreamRateIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43112)
		else:
			quickfix.StringField.__init__(self, 43112, data)

class PaymentStreamRateIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43113)
		else:
			quickfix.IntField.__init__(self, 43113, data)

class PaymentStreamRateIndex2ID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43114)
		else:
			quickfix.StringField.__init__(self, 43114, data)

class PaymentStreamRateIndex2IDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43115)
		else:
			quickfix.StringField.__init__(self, 43115, data)

class LegPaymentStreamRateIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43116)
		else:
			quickfix.StringField.__init__(self, 43116, data)

class LegPaymentStreamRateIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43117)
		else:
			quickfix.IntField.__init__(self, 43117, data)

class LegPaymentStreamRateIndex2ID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43118)
		else:
			quickfix.StringField.__init__(self, 43118, data)

class LegPaymentStreamRateIndex2IDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43119)
		else:
			quickfix.StringField.__init__(self, 43119, data)

class UnderlyingPaymentStreamRateIndex2(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43120)
		else:
			quickfix.StringField.__init__(self, 43120, data)

class UnderlyingPaymentStreamRateIndex2Source(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 43121)
		else:
			quickfix.IntField.__init__(self, 43121, data)

class UnderlyingPaymentStreamRateIndex2ID(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43122)
		else:
			quickfix.StringField.__init__(self, 43122, data)

class UnderlyingPaymentStreamRateIndex2IDSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 43123)
		else:
			quickfix.StringField.__init__(self, 43123, data)

class CurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2897)
		else:
			quickfix.StringField.__init__(self, 2897, data)

class LegCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2898)
		else:
			quickfix.StringField.__init__(self, 2898, data)

class SettlCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2899)
		else:
			quickfix.StringField.__init__(self, 2899, data)

class LegSettlCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2900)
		else:
			quickfix.StringField.__init__(self, 2900, data)

class SideCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2901)
		else:
			quickfix.StringField.__init__(self, 2901, data)

class SideSettlCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2902)
		else:
			quickfix.StringField.__init__(self, 2902, data)

class SettlementAmountCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2903)
		else:
			quickfix.StringField.__init__(self, 2903, data)

class StrikeCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2904)
		else:
			quickfix.StringField.__init__(self, 2904, data)

class UnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2905)
		else:
			quickfix.StringField.__init__(self, 2905, data)

class PriceUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2906)
		else:
			quickfix.StringField.__init__(self, 2906, data)

class PriceQuoteCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2907)
		else:
			quickfix.StringField.__init__(self, 2907, data)

class LegStrikeCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2908)
		else:
			quickfix.StringField.__init__(self, 2908, data)

class LegUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2909)
		else:
			quickfix.StringField.__init__(self, 2909, data)

class LegPriceUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2910)
		else:
			quickfix.StringField.__init__(self, 2910, data)

class LegPriceQuoteCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2911)
		else:
			quickfix.StringField.__init__(self, 2911, data)

class DerivativeStrikeCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2912)
		else:
			quickfix.StringField.__init__(self, 2912, data)

class DerivativeUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2913)
		else:
			quickfix.StringField.__init__(self, 2913, data)

class DerivativePriceUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2914)
		else:
			quickfix.StringField.__init__(self, 2914, data)

class DerivativePriceQuoteCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2915)
		else:
			quickfix.StringField.__init__(self, 2915, data)

class UnderlyingCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2916)
		else:
			quickfix.StringField.__init__(self, 2916, data)

class UnderlyingStrikeCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2917)
		else:
			quickfix.StringField.__init__(self, 2917, data)

class UnderlyingUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2918)
		else:
			quickfix.StringField.__init__(self, 2918, data)

class UnderlyingPriceUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2919)
		else:
			quickfix.StringField.__init__(self, 2919, data)

class UnderlyingPriceQuoteCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2920)
		else:
			quickfix.StringField.__init__(self, 2920, data)

class UnderlyingNotionalCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2921)
		else:
			quickfix.StringField.__init__(self, 2921, data)

class CommCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2922)
		else:
			quickfix.StringField.__init__(self, 2922, data)

class CommissionCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2923)
		else:
			quickfix.StringField.__init__(self, 2923, data)

class CommissionUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2924)
		else:
			quickfix.StringField.__init__(self, 2924, data)

class AllocCommissionCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2925)
		else:
			quickfix.StringField.__init__(self, 2925, data)

class AllocCommissionUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2926)
		else:
			quickfix.StringField.__init__(self, 2926, data)

class AllocSettlCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2927)
		else:
			quickfix.StringField.__init__(self, 2927, data)

class LegAllocSettlCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2928)
		else:
			quickfix.StringField.__init__(self, 2928, data)

class CollateralCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2929)
		else:
			quickfix.StringField.__init__(self, 2929, data)

class SideCollateralCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2930)
		else:
			quickfix.StringField.__init__(self, 2930, data)

class CollateralReinvestmentCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2931)
		else:
			quickfix.StringField.__init__(self, 2931, data)

class SideCollateralReinvestmentCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2932)
		else:
			quickfix.StringField.__init__(self, 2932, data)

class TradeAllocCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2933)
		else:
			quickfix.StringField.__init__(self, 2933, data)

class TradingCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2934)
		else:
			quickfix.StringField.__init__(self, 2934, data)

class LimitAmtCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2935)
		else:
			quickfix.StringField.__init__(self, 2935, data)

class PosQtyUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2936)
		else:
			quickfix.StringField.__init__(self, 2936, data)

class PositionCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2937)
		else:
			quickfix.StringField.__init__(self, 2937, data)

class LegPosCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2938)
		else:
			quickfix.StringField.__init__(self, 2938, data)

class RiskLimitCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2939)
		else:
			quickfix.StringField.__init__(self, 2939, data)

class EntitlementAttribCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2940)
		else:
			quickfix.StringField.__init__(self, 2940, data)

class ComplexOptPayoutCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2941)
		else:
			quickfix.StringField.__init__(self, 2941, data)

class ComplexEventCurrencyOneCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2942)
		else:
			quickfix.StringField.__init__(self, 2942, data)

class ComplexEventCurrencyTwoCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2943)
		else:
			quickfix.StringField.__init__(self, 2943, data)

class LegComplexOptPayoutCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2944)
		else:
			quickfix.StringField.__init__(self, 2944, data)

class LegComplexEventCurrencyOneCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2945)
		else:
			quickfix.StringField.__init__(self, 2945, data)

class LegComplexEventCurrencyTwoCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2946)
		else:
			quickfix.StringField.__init__(self, 2946, data)

class UnderlyingComplexOptPayoutCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2947)
		else:
			quickfix.StringField.__init__(self, 2947, data)

class UnderlyingComplexEventCurrencyOneCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2948)
		else:
			quickfix.StringField.__init__(self, 2948, data)

class UnderlyingComplexEventCurrencyTwoCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2949)
		else:
			quickfix.StringField.__init__(self, 2949, data)

class BenchmarkCurveCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2950)
		else:
			quickfix.StringField.__init__(self, 2950, data)

class LegBenchmarkCurveCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2951)
		else:
			quickfix.StringField.__init__(self, 2951, data)

class AgreementCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2952)
		else:
			quickfix.StringField.__init__(self, 2952, data)

class LegAgreementCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2953)
		else:
			quickfix.StringField.__init__(self, 2953, data)

class FundingSourceCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2954)
		else:
			quickfix.StringField.__init__(self, 2954, data)

class PayCollectCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2955)
		else:
			quickfix.StringField.__init__(self, 2955, data)

class PostTradePaymentCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2956)
		else:
			quickfix.StringField.__init__(self, 2956, data)

class SymbolPositionNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2957)
		else:
			quickfix.IntField.__init__(self, 2957, data)

class LegSymbolPositionNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2958)
		else:
			quickfix.IntField.__init__(self, 2958, data)

class UnderlyingSymbolPositionNumber(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2959)
		else:
			quickfix.IntField.__init__(self, 2959, data)

class SettlPriceUnitOfMeasureCurrencyCodeSource(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2960)
		else:
			quickfix.StringField.__init__(self, 2960, data)

class AnonymousTradeIndicator(quickfix.BoolField):
	def __init__(self, data = None):
		if data == None:
			quickfix.BoolField.__init__(self, 2961)
		else:
			quickfix.BoolField.__init__(self, 2961, data)

class SecurityReferenceDataSupplement(quickfix.StringField):
	def __init__(self, data = None):
		if data == None:
			quickfix.StringField.__init__(self, 2962)
		else:
			quickfix.StringField.__init__(self, 2962, data)

class MultiJurisdictionReportingIndicator(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2963)
		else:
			quickfix.IntField.__init__(self, 2963, data)

class SelfMatchPreventionInstruction(quickfix.IntField):
	def __init__(self, data = None):
		if data == None:
			quickfix.IntField.__init__(self, 2964)
		else:
			quickfix.IntField.__init__(self, 2964, data)

