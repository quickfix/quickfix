name: Build Visual Studio Solution
on: [pull_request, push]

jobs:
    build:
      runs-on: ${{ matrix.runner }}
      strategy:
          matrix:
              runner: [windows-2019]
              platform: [Mixed Platforms, Win32]
              configuration: [Debug, Release]
              include:
                - runner: windows-2019
                  solution: quickfix_vs16.sln
                  targetframeworkversion: v4.8
                  platformtoolset: v142
                  windowstargetplatformversion: 10.0
                - runner: windows-2019
                  platform: Win32
                  configuration: Release
                  copyheaders: true
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Build
        run: msbuild $env:Solution /t:Build /p:Platform=$env:Platform /p:Configuration=$env:Configuration /p:TargetFrameworkVersion=$env:TargetFrameworkVersion /p:PlatformToolset=$env:PlatformToolset /p:WindowsTargetPlatformVersion=$env:WindowsTargetPlatformVersion
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Solution: ${{ matrix.solution }}
          TargetFrameworkVersion: ${{ matrix.targetframeworkversion }}
          PlatformToolset: ${{ matrix.platformtoolset }}
          WindowsTargetPlatformVersion: ${{ matrix.windowstargetplatformversion }}
      - name: Upload Headers
        if: ${{ matrix.copyheaders }}
        uses: actions/upload-artifact@v2
        with:
          name: drop-headers
          path: ./include/**
      - name: Upload Specs
        if: ${{ matrix.copyheaders }}
        uses: actions/upload-artifact@v2
        with:
          name: drop-specs
          path: ./spec/**
      - name: Upload lib
        uses: actions/upload-artifact@v2
        with:
          name: drop-${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}-lib
          path: ./lib/**
      - name: Upload bin
        uses: actions/upload-artifact@v2
        with:
          name: drop-${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}-bin
          path: ./bin/**
      - name: Upload test
        uses: actions/upload-artifact@v2
        with:
          name: drop-${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}-test
          path: ./test/**

    test:
      runs-on: ${{ matrix.runner }}
      needs: build
      strategy:
          matrix:
              runner: [windows-2019]
              platform: [Mixed Platforms, Win32]
              configuration: [Debug, Release]
              include:
                - configuration: Debug
                  configrun: debug
                - configuration: Release
                  configrun: release
                - platform: Mixed Platforms
                  configuration: Debug
                  port: 6666
                - platform: Mixed Platforms
                  configuration: Release
                  port: 6667
                - platform: Win32
                  configuration: Debug
                  port: 6668
                - platform: Win32
                  configuration: Release
                  port: 6669
      steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: drop-${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}-test
          path: ./${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}/test
      - name: Download Specs
        uses: actions/download-artifact@v2
        with:
          name: drop-specs
          path: ./${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}/spec
      - name: Run Acceptance Tests
        if: ${{ matrix.configuration == 'Release' && github.event_name == 'pull_request' }}
        working-directory: ./${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}/test
        run: |
          runat %CONFIGURATION% %PORT%
        shell: cmd
        env:
          CONFIGURATION: ${{ matrix.configrun }}
          PORT: ${{ matrix.port }}
      - name: Run Performance Tests
        if: ${{ matrix.configuration == 'Release' }}
        working-directory: ./${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}/test
        run: |
          runpt %CONFIGURATION% %PORT%
        shell: cmd
        env:
          CONFIGURATION: ${{ matrix.configrun }}
          PORT: ${{ matrix.port }}
      - name: Run Unit Tests
        working-directory: ./${{ matrix.runner }}-${{ matrix.platform }}-${{ matrix.configuration }}/test
        run: |
          runut %CONFIGURATION% %PORT%
        shell: cmd
        env:
          CONFIGURATION: ${{ matrix.configrun }}
          PORT: ${{ matrix.port }}
