name: Build with CMake
on: [pull_request, push]

jobs:
    build:
      runs-on: ${{ matrix.runner }}
      strategy:
          matrix:
              runner: [windows-2019, ubuntu-latest, macos-latest]
              configuration: [Debug, Release]
              include:
                - configuration: Debug
                  config: debug
                - configuration: Release
                  config: release
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate
        shell: bash
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=$Configuration -DCMAKE_INSTALL_PREFIX=../install_prefix/$Configuration
        env:
          Configuration: ${{ matrix.configuration }}
      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --config $Configuration
        env:
          Configuration: ${{ matrix.configuration }}
      - name: Make symbolic links for testing apps
        shell: bash
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          cd build
          cmake --build . --target at_target
          cmake --build . --target pt_target
          cmake --build . --target ut_target
      - name: Set tests paths windows-2019
        shell: bash
        if: ${{ matrix.runner == 'windows-2019' }}
        run: |
          echo "::set-env name=at::test/$Config/at/at.exe"
          echo "::set-env name=pt::test/$Config/pt/pt.exe"
          echo "::set-env name=ut::test/$Config/ut/ut.exe"
        env:
          Config: ${{ matrix.config }}
      - name: Set tests paths ubuntu-latest
        shell: bash
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: |
          echo "::set-env name=at::test/at"
          echo "::set-env name=pt::test/pt"
          echo "::set-env name=ut::test/ut"
      - name: Set tests paths macos-latest
        shell: bash
        if: ${{ matrix.runner == 'macos-latest' }}
        run: |
          echo "::set-env name=at::test/at"
          echo "::set-env name=pt::test/pt"
          echo "::set-env name=ut::test/ut"
      - name: Echo test paths ${{ matrix.runner }}
        shell: bash
        run: |
          echo "at: $at"
          echo "pt: $pt"
          echo "ut: $ut"
        env:
          at: ${{ env.at }}
          pt: ${{ env.pt }}
          ut: ${{ env.ut }}
      - name: Check if tests were built
        id: check_files
        shell: bash
        run: |
          AT=$( test -f $at && echo "true" || echo "false" )
          PT=$( test -f $pt && echo "true" || echo "false" )
          UT=$( test -f $ut && echo "true" || echo "false" )
          echo "::set-env name=at_check::$AT"
          echo "::set-env name=pt_check::$PT"
          echo "::set-env name=ut_check::$UT"
        env:
          at: ${{ env.at }}
          pt: ${{ env.pt }}
          ut: ${{ env.ut }}
      - name: Echo test checks ${{ matrix.runner }}
        shell: bash
        run: |
          echo "at_check: $at_check"
          echo "pt_check: $pt_check"
          echo "ut_check: $ut_check"
        env:
          at_check: ${{ env.at_check }}
          pt_check: ${{ env.pt_check }}
          ut_check: ${{ env.ut_check }}
